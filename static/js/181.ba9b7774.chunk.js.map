{"version":3,"file":"static/js/181.ba9b7774.chunk.js","mappings":"gpBAqBMA,EAAS,CAAC,6BAA8B,8BAA+B,6BAA8B,+BA4K3G,EAjFMC,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAEF,WAAYC,GAAa,IAAD,yBACpB,cAAMA,IAEDC,MAAQ,CACTC,MAAO,EACPC,QAAQ,EACRC,mBAAqB,CACjBN,OAAQ,EAAKE,MAAMK,WACnBC,OAAQ,EAAKN,MAAMK,WACnBE,OAAQ,EAAKP,MAAMQ,WACnBC,SAAU,KAIlB,EAAKC,aAAe,EAAKA,aAAaC,MAAlB,WACpB,EAAKC,cAAgB,EAAKA,cAAcD,MAAnB,WACrB,EAAKE,SAAW,EAAKA,SAASF,MAAd,WAChB,EAAKG,SAAW,EAAKA,SAASH,MAAd,WAjBI,EAsBvB,OAJA,oCAMD,WACII,KAAKC,SAAS,CAAEb,QAAQ,MAC3B,2BAED,WACIY,KAAKC,SAAS,CAAEb,QAAQ,IACxBY,KAAKf,MAAMiB,kBACd,sBAED,WACIF,KAAKC,UAAS,SAACE,GAAD,MAAqB,CAC/BhB,OAAQgB,EAAUhB,MAAQ,GAAKJ,EAAOqB,aAE7C,sBAED,WACIJ,KAAKC,UAAS,SAACE,GAAD,MAAqB,CAC/BhB,OAAQgB,EAAUhB,MAAQJ,EAAOqB,OAAS,GAAKrB,EAAOqB,aAE7D,oBAED,WAEI,IAAIC,EAwBJ,OAvBIL,KAAKf,MAAMqB,eACXD,GACI,SAAC,IAAD,CACIE,QAASP,KAAKd,MAAMG,mBAAmBN,OAAOiB,KAAKd,MAAMC,OACzDqB,QAASR,KAAKd,MAAMG,mBAAmBN,QAAQiB,KAAKd,MAAMC,MAAQ,GAAKJ,EAAOqB,QAC9EK,QACIT,KAAKd,MAAMG,mBAAmBN,QAAQiB,KAAKd,MAAMC,MAAQJ,EAAOqB,OAAS,GAAKrB,EAAOqB,QAEzFM,iBAAkBV,KAAKd,MAAMG,mBAAmBE,OAAOS,KAAKd,MAAMC,OAClEwB,iBAAkBX,KAAKd,MAAMG,mBAAmBE,QAAQS,KAAKd,MAAMC,MAAQ,GAAKJ,EAAOqB,QACvFQ,iBACIZ,KAAKd,MAAMG,mBAAmBE,QAAQS,KAAKd,MAAMC,MAAQJ,EAAOqB,OAAS,GAAKrB,EAAOqB,QAEzFS,eAAgBb,KAAKH,cACrBiB,kBAAmBd,KAAKD,SACxBgB,kBAAmBf,KAAKF,SACxBkB,iBAAkBhC,EAAcgC,iBAChCC,WAAYjB,KAAKd,MAAMG,mBAAmBG,OAAOQ,KAAKd,MAAMC,OAC5D+B,aAAclB,KAAKd,MAAMG,mBAAmBK,SAASM,KAAKd,MAAMC,WAMxE,gBAAMgC,cAAe,SAACC,GAAD,OAAOA,EAAEC,kBAA9B,SACKhB,OAGZ,+BAxDD,gBAEC,EAxBCrB,CAAsBsC,EAAAA,WC1Fb,SAASC,EAAmBC,GACvC,MAAwCC,EAAAA,SAA2B,MAAnE,eAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,EAAAA,UAAe,GAAvD,eAAOnB,EAAP,KAAqBsB,EAArB,KAkBA,OAAOJ,GAAeA,EAAYK,aAAeL,EAAYK,YAAYzB,OAAS,GAE9E,UAAC0B,EAAA,EAAD,YACI,SAAC,EAAD,CAAexB,aAAcA,EACdJ,cApBD,WAClB0B,GAAgB,IAoBGtC,WAjBG,WAA6B,IAAD,EAClD,cAAOkC,QAAP,IAAOA,GAAP,UAAOA,EAAaK,mBAApB,aAAO,EAA0BE,KAAI,SAAAC,GAAI,OAAIC,EAAAA,EAAAA,IAAiBT,EAAYU,GAAIF,EAAKG,SAgBpDC,GACZ3C,WAdG,WAA6B,IAAD,EAClD,cAAO+B,QAAP,IAAOA,GAAP,UAAOA,EAAaK,mBAApB,aAAO,EAA0BE,KAAI,SAAAC,GAAI,QAAgB,OAAXR,QAAW,IAAXA,OAAA,EAAAA,EAAaa,QAAS,IAAIC,cAazCC,GACZC,aAXK,WAA6B,IAAD,EACpD,cAAOhB,QAAP,IAAOA,GAAP,UAAOA,EAAaK,mBAApB,aAAO,EAA0BE,KAAI,SAAAC,GAAI,QAAgB,OAAXR,QAAW,IAAXA,OAAA,EAAAA,EAAaiB,cAAe,IAAIH,cAU7CI,MAE7B,UAACC,EAAA,EAAD,CAAMC,GAAI,CAACC,GAAI,GAAf,WACI,SAAC,KAAD,CACIC,aAAc,GACdC,WAAYvB,EAAYK,YAAYzB,OAAO,EAC3C4C,WAAY,CAACC,WAAW,GACxB1D,OAAQ,CAAC2D,OAAQxB,GACjByB,MAAM,EACNC,MAAM,EACNC,OAAQ,OACRC,MAAM,EACNC,SAAU,CACNC,MAAO,IACPC,sBAAsB,GAE1BC,UAAU,YAbd,SAeKlC,EAAYK,YAAYE,KAAI,SAAC4B,EAA0BxE,GAA3B,OACzB,SAAC,KAAD,WACI,gBAAKuE,UAAU,wBAAf,UACI,gBAAKE,KAAK3B,EAAAA,EAAAA,IAAiBT,EAAYU,GAAIyB,EAAWxB,MACjD0B,QAAS,kBAAMjC,GAAgB,IAAOT,cAAe,SAACC,GAAD,OAAOA,EAAEC,uBAHzDsC,EAAWzB,UAQrC,SAAC,KAAD,CACI4B,SAAUnC,EACVmB,aAAc,GACdiB,cAAe,EACfC,UAAU,EACVC,qBAAqB,EACrBP,UAAU,WANd,SAQKlC,EAAYK,YAAYE,KAAI,SAAC4B,EAA0BxE,GAA3B,OACzB,SAAC,KAAD,WACI,gBAAKyE,KAAK3B,EAAAA,EAAAA,IAAiBT,EAAYU,GAAIyB,EAAWxB,SADxCwB,EAAWzB,eAO7C,KAxERgC,EAAAA,GAAAA,IAAe,CAACC,EAAAA,GAAUC,EAAAA,GAAYC,EAAAA,GAAMC,EAAAA,GAAMC,EAAAA,GAAYC,EAAAA,K,oPCsD9D,GA3DkD,SAACvF,GAC/C,OAA0CwF,EAAAA,EAAAA,WAAS,GAAnD,eAAsBC,GAAtB,WACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAGMC,GAAeC,EAAAA,EAAAA,QAAuB,OAG5CC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAKH,EAAaI,QACnBD,GAEDA,EAAGE,aAAeF,EAAGG,cACrBT,GAAiB,KAGtB,CAACzF,EAAMmG,QAGV,IAAMC,EAAe,WACjBT,GAAaD,IAKjB,GAMI1F,EALAqG,KAKArG,EAJAsG,MAAAA,OAFJ,MAEW,GAFX,IAMItG,EAHAuG,aAAAA,OAHJ,MAGmB,OAHnB,IAMIvG,EAFAwG,aAAAA,OAJJ,MAImB,OAJnB,IAMIxG,EADAyG,SAAAA,OALJ,MAKeL,EALf,EAQMM,EAVa,SAACJ,GAAD,OAAkBA,EAAKK,QAAQ,kBAAmB,UAUvDC,CAAWN,GAEzB,OACI,kBAAM7B,UAAU,eAAhB,WACI,iBAAMoC,IAAKjB,EAAcnB,UAAU,kBAAnC,SAEQiB,EAAWgB,EAAQA,EAAMI,UAAU,EAAGC,GAAAA,EAAAA,2BAK1CL,EAAMvF,OAAS4F,GAAAA,EAAAA,yBACf,iBAAMtC,UAAU,6BAAhB,SAESiB,GAEG,iBAAMjB,UAAU,iBAAiBG,QAASwB,EAA1C,SAAyDI,KADzD,iBAAM/B,UAAU,iBAAiBG,QAAS6B,EAA1C,SAAsDF,MAGxD,SC5BpBS,GAAgBC,GAAAA,GAEP,SAASC,GAAT,GA4BX,IAAD,EA3B6C3E,EA2B7C,EA3B6CA,YACA4E,EA0B7C,EA1B6CA,oBACAC,EAyB7C,EAzB6CA,QACAC,EAwB7C,EAxB6CA,gBACAC,EAuB7C,EAvB6CA,oBACAC,EAsB7C,EAtB6CA,oBACAC,EAqB7C,EArB6CA,iBACAC,EAoB7C,EApB6CA,yBACAC,EAmB7C,EAnB6CA,4BACAC,EAkB7C,EAlB6CA,4BACAC,EAiB7C,EAjB6CA,4BACAC,EAgB7C,EAhB6CA,+BACAC,EAe7C,EAf6CA,WAgB5C,EAA8CtF,EAAAA,UAAgB,GAA9D,eAAOuF,EAAP,KAAwBC,EAAxB,KACA,EAA8CxF,EAAAA,UAAgB,GAA9D,eAAOyF,EAAP,KAAwBC,EAAxB,KACA,EAAwC1F,EAAAA,UAAwB,GAAhE,eAAO2F,EAAP,KAAqBC,EAArB,KACA,EAAsE5F,EAAAA,UAAe,GAArF,eAAO6F,EAAP,KAAoCC,EAApC,KACA,EAA0C9F,EAAAA,SAA8B+F,GAAAA,GAAxE,eAAOC,EAAP,KAAsBC,EAAtB,KAGQC,IAAKC,EAAAA,GAAAA,KAALD,EAMFE,GAA8B,SAACC,EAAiBC,GAClDnB,EAA4BkB,EAASC,GACrCZ,GAAoB,IAGxB,GAAwD1F,EAAAA,UAAe,GAAvE,iBAAOuG,GAAP,MAA+BC,GAA/B,MAKMC,GAAsC,WACxCD,IAAsB,IAGpBE,GAAsC,WACxCF,IAAsB,GACtBtB,EAA4BK,IAO1BoB,GAAoC,WACtCjB,GAAoB,IAoClBkB,GAAqC,WACvCd,GAA+B,IAE7Be,GAAmC,WACrCf,GAA+B,GAC/BV,EAA4BY,IA+BhC,OACI,UAAC3F,EAAA,EAAD,YACI,UAACyG,EAAA,EAAD,CAAM3F,GAAI,CAAC4F,QAAS,mBAAoBC,GAAI,GAA5C,WACI,UAAC3G,EAAA,EAAD,WAGQiF,EAAa,GAAI,SAAC2B,EAAA,GAAD,CAAUC,WAAW,aAAaC,QAAM,EAAC/E,QAAS,kBAAMwD,GAAiBD,IAAzE,UACb,SAACyB,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,IAAIC,MAAM,iBAAiBrG,GAAI,CAAE6F,GAAI,GAA/E,UACI,yBAEwEd,GAA/DP,EAAiE,2CAAhD,4CAF1B,IAIML,EAJN,aAQE,KAIdK,GACI,UAACtF,EAAA,EAAD,WAEQsE,EAAoBrE,KAAI,SAACmH,EAAwB/J,GAAzB,2BACpB,4BACI,UAACuJ,EAAA,GAAD,CACIC,WAAW,aACXQ,iBACI,UAACrH,EAAA,EAAD,WACKwE,IAA0B,OAAP4C,QAAO,IAAPA,GAAA,UAAAA,EAASE,YAAT,eAAelH,MAAOmE,EAAQnE,IAC9C,SAACmH,EAAA,EAAD,CAAYC,KAAK,MAAM,aAAW,OAAOL,MAAM,UACnCpF,QAAS,kBA7GnDkE,EA6G0EmB,EAAQhH,KAAO,OA5G/GiF,EAAmBY,GADE,IAACA,GA8G0CnF,GAAI,CAAC2G,GAAI,GAAKC,QAAS,SAFnC,UAGI,SAACC,EAAA,EAAD,MAEJ,MACHnD,IAA+B,OAAX9E,QAAW,IAAXA,GAAA,UAAAA,EAAa4H,YAAb,eAAmBlH,MAAOmE,EAAQnE,KAAa,OAAPgH,QAAO,IAAPA,GAAA,UAAAA,EAASE,YAAT,eAAelH,MAAOmE,EAAQnE,GASvF,MARA,SAACmH,EAAA,EAAD,CACIC,KAAK,MACL,aAAW,SACXL,MAAM,QACNpF,QAAS,kBApI1B6F,EAoIkER,EAAQhH,KAAO,EAnIxH+E,EAAmByC,QACnBzB,IAAsB,GAFgB,IAACyB,GAqIiB9G,GAAI,CAAC4G,QAAS,SALlB,UAMI,SAACG,EAAA,EAAD,MAGPrD,IAA0B,OAAP4C,QAAO,IAAPA,GAAA,UAAAA,EAASE,YAAT,eAAelH,MAAOmE,EAAQnE,IAC9C,SAACmH,EAAA,EAAD,CAAYC,KAAK,MAAM,aAAW,SACtBzF,QAAS,kBAzFlD,SAACqF,GACxBxB,EAAiBwB,GACjB3B,GAA+B,GAuFgDqC,CAAmBV,IAClCtG,GAAI,CAAC2G,GAAI,GAAKC,QAAS,SAFnC,UAGI,SAACK,EAAA,EAAD,MAEJ,QA3BhB,WA+BI,SAACC,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,CAAQC,IAAI,SACJpG,KAAKqG,EAAAA,EAAAA,IAAa,UAACf,EAAQE,YAAT,aAAC,EAAclH,GAAf,UAAmBgH,EAAQE,YAA3B,aAAmB,EAAcc,SAAjC,UAA2ChB,EAAQE,YAAnD,aAA2C,EAAce,gBAC3EvH,GAAI,CAACwH,OAAQ,qBAFrB,oBAE4CC,EAAAA,EAAAA,IAAe,OAACnB,QAAD,IAACA,OAAD,EAACA,EAASE,aAFrE,aAE4C,EAAgCkB,OAAO,QAEvF,SAACzB,EAAA,EAAD,CACI0B,SAASF,EAAAA,EAAAA,IAAe,OAACnB,QAAD,IAACA,OAAD,EAACA,EAASE,MAClCoB,WACI,UAAC,WAAD,YACI,SAAC1B,EAAA,EAAD,CAAYlG,GAAI,CAAC4G,QAAS,SAAUR,UAAU,OAAOD,QAAQ,QACjDE,MAAM,eADlB,UAEI,SAAC,IAAD,CAAqBwB,YAAavB,EAAQwB,gBAG1CxD,IAAoBgC,EAAQhH,IAAK,SAAC,GAAD,CAC7BkD,MAAO,EACPG,KAAM2D,EAAQpB,SAAW,GACzBtC,aAAcmC,GAAE,iCAChBlC,aAAckC,GAAE,mCAAsC,aAM7ET,IAAoBgC,EAAQhH,IACzB,SAACJ,EAAA,EAAD,CAAKc,GAAI,CAAC2G,GAAI,EAAGoB,GAAI,GAArB,UACI,SAACC,GAAD,CACIhE,4BAA6B,SAACkB,GAAD,OAAqBD,GAA4BC,EAAUoB,EAAQhH,KAAO,IACvGkG,kCAAmCA,GACnCyC,mBAAoB3B,EAAQpB,QAC5BtB,oBAAqBA,MAG7B,MACJ,SAACsE,EAAA,EAAD,CAAS/B,QAAQ,QAAQC,UAAU,SAlEvC,kBAAqB7J,OAwEzBoH,GACI,SAACzE,EAAA,EAAD,CAAKc,GAAI,CAAC4G,QAAS,OAAQuB,eAAgB,SAAUC,EAAE,GAAvD,UACI,SAACC,EAAA,EAAD,CAAkBhC,MAAM,cACnB,KAIblC,EAAWX,EAAoBhG,QAAS,SAACsI,EAAA,GAAD,CAAUC,WAAW,SAASC,QAAM,EAAC/E,QAAS,kBAAMiD,KAApD,UACpC,SAAC+B,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KAAKC,MAAM,iBAAiBrG,GAAI,CAAE6F,GAAI,EAAGyC,UAAW,UAA9F,UACI,uBACKvD,GAAE,2CAIL,QAGb,SAIrB,UAACe,EAAA,GAAD,CAAUC,WAAW,aAArB,WACI,SAACmB,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,CAAQC,IAAK3D,EAAQ6D,SACbtG,KAAKqG,EAAAA,EAAAA,IAAc5D,EAAQnE,GAAImE,EAAQ6D,SAArB,OAA+B7D,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAS8D,gBAC1DvH,GAAI,CAACwH,OAAQ,qBAFrB,oBAE4CC,EAAAA,EAAAA,IAAgBhE,UAF5D,aAE4C,EAA0BiE,OAAO,QAEjF,SAACzB,EAAA,EAAD,WACI,SAACsC,GAAD,CAAYzE,yBAlOC,SAACoB,GAC9BpB,EAAyBoB,IAkOGrB,iBAAkBA,aAI1C,0BAtMA,UAAC2E,GAAA,EAAD,CACIC,KAAMrD,GACNsD,oBAAqBC,GAAAA,EACrBC,aAAW,EACXC,QAASvD,GACT,mBAAiB,iCALrB,WAOI,SAACwD,GAAA,EAAD,UACK/D,GAAE,gDAEP,SAACgE,GAAA,EAAD,WACI,SAACC,GAAA,EAAD,CAAmB1J,GAAG,iCAAtB,SACKyF,GAAE,wDAGX,UAACkE,GAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAQjI,QAASqE,GAAqCe,MAAM,UAA5D,SACKtB,GAAE,0BAEP,SAACmE,EAAA,EAAD,CAAQjI,QAASsE,GAAqCc,MAAM,QAA5D,SACKtB,GAAE,kCAmLf,0BA/JA,UAACyD,GAAA,EAAD,CACIC,KAAM/D,EACNgE,oBAAqBC,GAAAA,EACrBC,aAAW,EACXC,QAASpD,GACT,mBAAiB,iCALrB,WAOI,SAACqD,GAAA,EAAD,UACK/D,GAAE,gDAEP,SAACgE,GAAA,EAAD,WACI,SAACC,GAAA,EAAD,CAAmB1J,GAAG,iCAAtB,SACKyF,GAAE,wDAGX,UAACkE,GAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAQjI,QAASwE,GAAjB,SACKV,GAAE,0BAEP,SAACmE,EAAA,EAAD,CAAQ7C,MAAM,UAAUpF,QAASyE,GAAjC,SACKX,GAAE,oCAgJ3B,SAASwD,GAAT,GAAiI,IAA5GzE,EAA2G,EAA3GA,yBAA0BD,EAAiF,EAAjFA,iBAEnCkB,GAAKC,EAAAA,GAAAA,KAALD,EAEFoE,GAASC,EAAAA,GAAAA,IAAU,CACrB/F,cAAAA,GACAgG,iBAAkBC,GAAAA,GAClBC,SAAU,SAAAC,GACN1F,EAAyB0F,EAAOtE,SAChCiE,EAAOM,cAAc,UAAW,OAIxC,OACI,SAAC,WAAD,WACI,kBAAMF,SAAUJ,EAAOO,aAAvB,WACI,SAACC,EAAA,EAAD,CACIrK,GAAG,UACHsK,KAAK,UACLC,MAAO9E,EAAE,mCACT+E,MAAOX,EAAOK,OAAOtE,QACrB6E,SAAUZ,EAAOa,aACjBC,WAAS,EACTC,WAAS,EACTC,QAAS,KAEb,SAACC,EAAA,EAAD,CACIC,QAASxG,EACTsC,QAAQ,WACRmE,KAAK,QACL5H,KAAK,SACL6H,UAAWpB,EAAOK,OAAOtE,QACzBlF,GAAI,CAACwK,GAAI,GACTnE,MAAM,UAPV,SASKtB,EAAE,sCAOvB,SAASiD,GAAT,GACiK,IADzIhE,EACwI,EADxIA,4BAA6BwB,EAC2G,EAD3GA,kCAAmCyC,EACwE,EADxEA,mBAAoBrE,EACoD,EADpDA,oBAGxG,EAAiC/E,EAAAA,SAAeoJ,GAAzCwC,GAAP,eAEQ1F,GAAKC,EAAAA,GAAAA,KAALD,EACFoE,GAASC,EAAAA,GAAAA,IAAU,CACrB/F,cAAAA,GACAgG,iBAAkBC,GAAAA,GAClBC,SAAU,SAAAC,GACNxF,EAA4BwF,EAAOtE,aAI3C/C,EAAAA,EAAAA,YAAU,WACNgH,EAAOM,cAAc,UAAWxB,KACjC,IAMH,OACI,SAAC,WAAD,WACI,kBAAMsB,SAAUJ,EAAOO,aAAvB,WACI,SAACC,EAAA,EAAD,CACIrK,GAAG,UACHsK,KAAK,UACLC,MAAM,cACNC,MAAOX,EAAOK,OAAOtE,QACrB6E,SAAUZ,EAAOa,aACjBC,WAAS,EACTC,WAAS,EACTC,QAAS,KAEb,UAACjL,EAAA,EAAD,CAAKc,GAAI,CAACwK,GAAI,GAAd,WACI,SAACJ,EAAA,EAAD,CACIC,SAAS,EACTlE,QAAQ,WACRmE,KAAK,QACL5H,KAAK,SACL1C,GAAI,CAAC2G,GAAI,GACTN,MAAM,UACNpF,QAzBC,WACjBuE,EAAkCiF,IAiBtB,SASK1F,EAAE,0BAEP,SAACqF,EAAA,EAAD,CACIC,QAASzG,EACTuC,QAAQ,WACRmE,KAAK,QACL5H,KAAK,SACL6H,UAAWpB,EAAOK,OAAOtE,QACzBmB,MAAM,UANV,SAQKtB,EAAE,iC,qLCvX3B,GA/BM2F,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYrO,GAAa,IAAD,yBACpB,cAAMA,IACDC,MAAQ,CACTqO,UAAW,CACPlL,MAAO,MACPkD,KAAM,gCACNiI,IAAK,kCAGb,EAAKC,YAAc,EAAKA,YAAY7N,MAAjB,WATC,EA2BvB,OAjBA,mCAED,WACI8N,UAAUC,MAAM3N,KAAKd,MAAMqO,WAAWK,MAAK,SAACC,SAC/C,oBAED,WACI,OAAOC,EAAAA,EAAAA,QAA8BC,GAAAA,EAAAA,gBACjC,SAAC1E,EAAA,EAAD,CAAYxF,QAAS7D,KAAKyN,YAA1B,SACKzN,KAAKf,MAAM+O,YAGhB,SAAC,KAAD,CACIR,IAAKxN,KAAKf,MAAMuO,IAChBS,MAAM,QAFV,SAGKjO,KAAKf,MAAM+O,eAEvB,EA5BCV,CAAoB7L,EAAAA,W,mCC8CpBwE,GAAgBiI,GAAAA,GAEP,SAASC,GAAT,GAUmC,IAAD,8BAVN3M,EAUM,EAVNA,YAAa4M,EAUP,EAVOA,eAAgBC,EAUvB,EAVuBA,YAAa/H,EAUpC,EAVoCA,gBAAiBgI,EAUrD,EAVqDA,eAAgBC,EAUrE,EAVqEA,2BAA4BC,EAUjG,EAViGA,uBAAwBC,EAUzH,EAVyHA,SAYtK,EAA0ChN,EAAAA,WAA1C,eAAsBiN,GAAtB,WACA,EAAwCjN,EAAAA,SAAe,IAAvD,eAAOkN,EAAP,KAAqBC,EAArB,KACA,EAAkCnN,EAAAA,UAAe,GAAjD,eAAOoN,EAAP,KAAkBC,EAAlB,KACA,EAAgDrN,EAAAA,UAAe,GAA/D,eAAOsN,EAAP,KAAyBC,GAAzB,KAEMC,IAAWC,EAAAA,EAAAA,MACTvH,IAAMC,EAAAA,GAAAA,KAAND,EAEFoE,IAASC,EAAAA,GAAAA,IAAU,CACrB/F,cAAAA,GACAgG,iBAAkBkD,GAAAA,GAClBhD,SAAU,SAAAC,GAAW,IAAD,EACZiC,EAAYnM,MAAZ,OAAmBV,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAa4H,YAAhC,aAAmB,EAAmBlH,KAAMoE,IAC5CoI,EAAiBtC,GACjBgD,GAAYhD,EAAOtE,aAKzBuH,GAAiB,WACnBtD,GAAOM,cAAc,YAAYhC,EAAAA,EAAAA,IAAgBgE,IACjDtC,GAAOM,cAAc,QAASgC,EAAYiB,QAG9C7N,EAAAA,WAAgB,WACP8N,IAAAA,CAAQlB,IACTgB,OAEL,CAAChB,IAEJ5M,EAAAA,WAAgB,WACT+M,IACCzC,GAAOyD,YACPH,QAEL,CAACb,IAEJ,IAAMY,GAAc,SAACtH,GAAqB,IAAD,IAC/B2H,EAAS,CACX3H,QAASA,EACT4H,aAAc,CACVC,aAAaC,EAAAA,EAAAA,IAAwB,IAAIC,MACzCC,WAAY,KACZC,aAAc,CACV7N,GAAE,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAa4H,YAAf,aAAE,EAAmBlH,GACvBoN,MAAK,OAAE9N,QAAF,IAAEA,GAAF,UAAEA,EAAa4H,YAAf,aAAE,EAAmBkG,SAItCf,EAA2BkB,IAG/B,GAAkDhO,EAAAA,UAAe,GAAjE,iBAAOuO,GAAP,MAA0BC,GAA1B,MACMC,GAA+B,SAACC,GAClCA,EAAMC,kBACD9B,GACD2B,IAAqB,IAGvBI,GAA2B,WAC7BJ,IAAqB,IAGnBK,GAAyB,WAAO,IAAD,EACjCL,IAAqB,GACrB7B,EAAc,OAAC5M,QAAD,IAACA,GAAD,UAACA,EAAa4H,YAAd,aAAC,EAAmBlH,KAMhCqO,GAAoB,SAACC,GACvBC,YAAW,WACPxB,GAASyB,EAAAA,EAAAA,QAAyB,IAAMF,KACzC,MAGDG,GAAuB,WACzB,OAAIrC,EACO,MAEJ,8BAyEX,OACI,UAACsC,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAIC,GAAI,GAAvB,WACI,UAACnO,EAAA,EAAD,YACI,SAACmG,EAAA,EAAD,CAAYiI,WAAS,EAACnO,GAAI,CAACoI,EAAG,GAA9B,SACKrD,GAAE,iCAEP,SAACqJ,GAAA,EAAD,CAAiBnN,QAAS,wBAAM0M,GAAiB,OAAC/O,QAAD,IAACA,GAAD,UAACA,EAAa4H,YAAd,aAAC,EAAmBlH,KAAKU,GAAI,CAAC4G,QAAS,SAAxF,UACI,SAACyH,GAAA,EAAD,CACIC,OACI1P,GACQ,SAAC,KAAD,CACI2P,QAAQ,WACRC,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDvI,QAAQ,MACRE,MAAOwF,EAAQ,UAACjN,EAAY4H,YAAb,aAAC,EAAkBkG,OAAS,UAAY,QAJ3D,UAKQ,SAACvF,EAAA,EAAD,CACI,aAAW,SACXC,IAAG,UAAExI,EAAY4H,YAAd,aAAE,EAAkBc,SACvBtG,KAAKqG,EAAAA,EAAAA,IAAa,UAACzI,EAAY4H,YAAb,aAAC,EAAkBlH,GAAnB,UAAuBV,EAAY4H,YAAnC,aAAuB,EAAkBc,SAAzC,UAAmD1I,EAAY4H,YAA/D,aAAmD,EAAkBe,gBACvFvH,GAAI,CAACwH,OAAQ,qBAJjB,oBAKEC,EAAAA,EAAAA,IAAe,OAAC7I,QAAD,IAACA,OAAD,EAACA,EAAa4H,aAL/B,aAKE,EAAoCkB,OAAO,OAEzD,KAERiH,QACI,SAAClI,EAAA,EAAD,CAAY,aAAW,WACXzG,GAAI,CAACqG,MAAO0H,MACZ9M,QAAS,SAACsM,GAAD,OAAgBD,GAA6BC,IACtDhD,UAAqB,OAAX3L,QAAW,IAAXA,GAAA,UAAAA,EAAa4H,YAAb,eAAmBlH,OAAnB,OAA0BmM,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAanM,IAH7D,UAII,SAACsP,GAAA,EAAD,MAGRnP,OACI,SAAC,WAAD,WACKgI,EAAAA,EAAAA,IAAe,OAAC7I,QAAD,IAACA,OAAD,EAACA,EAAa4H,QAGtCqI,UAAS,OAAEjQ,QAAF,IAAEA,GAAF,UAAEA,EAAa4H,YAAf,aAAE,EAAmBkG,MAC9BzL,QAAS,wBAAM0M,GAAiB,OAAC/O,QAAD,IAACA,GAAD,UAACA,EAAa4H,YAAd,aAAC,EAAmBlH,KACpDwP,KAAK,aAID,OAAXlQ,QAAW,IAAXA,GAAA,UAAAA,EAAa4H,YAAb,SAAmBuI,SAChB,SAACC,EAAA,EAAD,WACI,UAAC9I,EAAA,EAAD,CAAYC,QAAQ,QAAQE,MAAM,iBAAlC,iBACKzH,QADL,IACKA,GADL,UACKA,EAAa4H,YADlB,aACK,EAAmBuI,QAAQE,KADhC,YACwCrQ,QADxC,IACwCA,GADxC,UACwCA,EAAa4H,YADrD,aACwC,EAAmBuI,QAAQG,aAGvE,MAEJ,UAACC,EAAA,EAAD,CAAaC,gBAAc,EAACpP,GAAI,CAACqP,gBAAiB,wBAAlD,WACI,SAAC5I,EAAA,EAAD,CACI,aAAW,mBACXzG,GAAI,CAACqG,MAAO0H,MACZ9M,QAASqM,GACT/C,UAAqB,OAAX3L,QAAW,IAAXA,GAAA,UAAAA,EAAa4H,YAAb,eAAmBlH,OAAnB,OAA0BmM,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAanM,IAJrD,UAMI,SAACsP,GAAA,EAAD,OAGJ,SAAC,GAAD,CAAahE,IAAI,mEAAjB,UACI,SAAC1L,EAAA,EAAD,CAAKc,GAAI,CAACqG,MAAO,QAAjB,UACI,SAACiJ,GAAA,EAAD,SAIR,SAAC7I,EAAA,EAAD,CAAYzG,GAAI,CAACuP,WAAY,OAAQlJ,MAAO,QAASpF,QAzJ3C,aAyJV,UACI,SAACuO,GAAA,EAAD,UAIR,UAACxB,EAAA,GAAD,CAAMyB,WAAS,EAACrQ,MAAI,EAACY,GAAI,CAAC6F,GAAI,GAA9B,WACI,SAACmI,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAIC,GAAI,EAAvB,UACI,SAAChP,EAAA,EAAD,CAAKc,GAAI,CAAC,kBAAmB,CAACoI,EAAG,IAAjC,UACI,kBAAMmB,SAAUJ,GAAOO,aAAvB,WACI,SAACxD,EAAA,EAAD,CAAYiI,WAAS,EAACrN,UAAU,cAAhC,SACKiE,GAAE,iCAEP,UAAC7F,EAAA,EAAD,CAAKc,GAAI,CAAC4G,QAAS,OAAQb,WAAY,YAAvC,WACI,SAAC2J,GAAA,EAAD,CAAe1P,GAAI,CAACqG,MAAO,gBAAiBM,GAAI,EAAG6D,GAAI,OACvD,SAACb,EAAA,EAAD,CAAWrK,GAAG,WACHsK,KAAK,WACLC,MAAO9E,GAAE,qBACToB,QAAQ,WACR+D,WAAS,EACTK,WAAYpB,GAAOwG,QAAQC,UAAYC,QAAQ1G,GAAO2G,OAAOF,WAC7D9F,MAAOX,GAAOK,OAAOoG,SACrB7F,SAAUZ,GAAOa,aACjB+F,MAAO5G,GAAOwG,QAAQC,UAAYC,QAAQ1G,GAAO2G,OAAOF,gBAEvE,UAAC1Q,EAAA,EAAD,CAAKc,GAAI,CAAC4G,QAAS,OAAQb,WAAY,WAAYyE,GAAI,GAAvD,WACI,SAAC,KAAD,CAAWxK,GAAI,CAACqG,MAAO,gBAAiBM,GAAI,EAAG6D,GAAI,OACnD,SAACb,EAAA,EAAD,CAAWrK,GAAG,QACHsK,KAAK,QACLC,MAAO9E,GAAE,sBACToB,QAAQ,WACR+D,WAAS,EACTK,WAAYpB,GAAOwG,QAAQjD,OAASmD,QAAQ1G,GAAO2G,OAAOpD,QAC1D5C,MAAOX,GAAOK,OAAOkD,MACrB3C,SAAUZ,GAAOa,aACjB+F,MAAO5G,GAAOwG,QAAQjD,OAASmD,QAAQ1G,GAAO2G,OAAOpD,aAEpE,UAACxN,EAAA,EAAD,CAAKc,GAAI,CAAC4G,QAAS,OAAQb,WAAY,YAAvC,WACI,SAAC,KAAD,CAAa/F,GAAI,CAACqG,MAAO,gBAAiBM,GAAI,EAAG6D,GAAI,OACrD,SAACb,EAAA,EAAD,CAAWrK,GAAG,UACHsK,KAAK,UACLC,MAAM,UACN1D,QAAQ,WACR+D,WAAS,EACTD,WAAS,EACT+F,KAAM,EACNlG,MAAOX,GAAOK,OAAOtE,QACrB6E,SAAUZ,GAAOa,aACjB+F,MAAO5G,GAAOwG,QAAQzK,SAAW2K,QAAQ1G,GAAO2G,OAAO5K,eAEtE,SAAChG,EAAA,EAAD,CAAKc,GAAI,CAAC4G,QAAS,OAAQb,WAAY,YAAvC,UACI,SAACmD,EAAA,EAAD,CAAQ/C,QAAQ,WAAWmE,KAAK,QAAQJ,WAAS,EAAClK,GAAI,CAAC6F,GAAI,EAAG5F,GAAI,GAC1DoG,MAAM,UACN3D,KAAK,SACL6H,SAAUkB,EAAYnM,MAAZ,OAAmBV,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAa4H,YAAhC,aAAmB,EAAmBlH,IAHxD,SAIKyF,GAAE,iCAOvB,UAACiJ,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAIC,GAAI,EAAGlO,GAAI,CAACiQ,EAAG,EAAGC,WAAY,sBAAjD,WACI,SAAChK,EAAA,EAAD,CAAYiI,WAAS,EAACrN,UAAU,cAAhC,SACKiE,GAAE,iCAGP,SAACmE,EAAA,EAAD,CAAQ/C,QAAQ,WAAWgK,WAAW,SAACC,GAAA,EAAD,IAAiBlG,WAAS,EAAClK,GAAI,CAAC6F,GAAI,GAAI5E,QAAS,kBA9I5D,WAAO,IAAD,EAI5C,EAHF,OAACrC,QAAD,IAACA,GAAD,UAACA,EAAa4H,YAAd,OAAC,EAAmB6J,oBAInBC,OAAO7H,KAAP,OAAY7J,QAAZ,IAAYA,GAAZ,UAAYA,EAAa4H,YAAzB,aAAY,EAAmB6J,oBAAqB,SAHpDrE,EAAgBjH,GAAE,0DAClBmH,GAAa,IA2I4FqE,IAA7F,uBAIA,SAACrH,EAAA,EAAD,CAAQ/C,QAAQ,WAAWgK,WAAW,SAACK,GAAA,EAAD,IAActG,WAAS,EAAClK,GAAI,CAAC6F,GAAI,GAAI5E,QAAS,kBAAMmL,IAAqBD,IAA/G,SACKA,EAAgB,OAAGvN,QAAH,IAAGA,GAAH,UAAGA,EAAa4H,YAAhB,aAAG,EAAmBiK,MAAQ1L,GAAE,gCAGrD,cAAG2L,KAAI,wBAAY9R,QAAZ,IAAYA,GAAZ,UAAYA,EAAa4H,YAAzB,aAAY,EAAmBkG,OAASiE,MAAO,CAACC,eAAgB,QAAvE,UACI,SAAC1H,EAAA,EAAD,CAAQ/C,QAAQ,WAAWgK,WAAW,SAAC,KAAD,IAAcjG,WAAS,EAAClK,GAAI,CAAC6F,GAAI,GAAvE,SACKd,GAAE,0CAOvB,UAACiJ,EAAA,GAAD,CAAMyB,WAAS,EAACrQ,MAAI,EAACyR,QAAS,EAAG7Q,GAAI,CAAC6F,GAAI,GAA1C,WACI,SAACmI,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAIC,GAAI,EAAvB,UACI,SAACnO,EAAA,EAAD,CAAMkB,QAjMU,WAC5B6P,QAAQC,IAAI,eAAgBnS,GACzB,OAACA,QAAD,IAACA,GAAAA,EAAamQ,QAKbuB,OAAO7H,KAAK,yDAA0D,SAJtEuD,EAAgBjH,GAAE,8CAClBmH,GAAa,KA6LL,UACI,UAAC8C,EAAA,EAAD,YACI,SAAC9I,EAAA,EAAD,CAAYlG,GAAI,CAACgR,SAAU,IAAK3K,MAAM,iBAAiB4K,cAAY,EAAnE,uCAGA,gBAAKN,MAAO,CAACO,UAAW,IAAKC,UAAW,IAAxC,UACI,gBACIrQ,UAAU,YACVE,KAAKoQ,EAAAA,EAAAA,IAAgB,wEACrBhK,IAAI,wCAOxB,SAAC4G,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAIC,GAAI,EAAvB,UACI,SAACnO,EAAA,EAAD,CAAMkB,QAtMS,WAE3B,GADA6P,QAAQC,IAAI,eAAgBnS,GACzB,OAACA,QAAD,IAACA,GAAAA,EAAamQ,QAIZ,GAAG,OAACtD,QAAD,IAACA,GAAAA,EAAasD,QAIlB,CAAC,IAAD,QACAuB,OAAO7H,KAAK,2CAAmCgD,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAasD,eAAhD,aAAmC,EAAsBsC,KAAI,KAA7D,OAAiE5F,QAAjE,IAAiEA,GAAjE,UAAiEA,EAAasD,eAA9E,aAAiE,EAAsBsC,KAAI,KAA3F,OAA+FzS,QAA/F,IAA+FA,GAA/F,UAA+FA,EAAamQ,eAA5G,aAA+F,EAAsBsC,KAAI,KAAzH,OAA6HzS,QAA7H,IAA6HA,GAA7H,UAA6HA,EAAamQ,eAA1I,aAA6H,EAAsBsC,KAAQ,aAJvKrF,EAAgBjH,GAAE,uCAClBmH,GAAa,QALbF,EAAgBjH,GAAE,8CAClBmH,GAAa,IAkML,UACI,UAAC8C,EAAA,EAAD,YACI,SAAC9I,EAAA,EAAD,CAAYlG,GAAI,CAACgR,SAAU,IAAK3K,MAAM,iBAAiB4K,cAAY,EAAnE,uCAGA,gBAAKN,MAAO,CAACO,UAAW,IAAKC,UAAW,IAAxC,UACI,gBACIrQ,UAAU,YACVE,KAAKoQ,EAAAA,EAAAA,IAAgB,6EACrBhK,IAAI,gDAQ5B,SAAC4G,EAAA,GAAD,CAAMyB,WAAS,EAACrQ,MAAI,EAACyR,QAAS,EAAG7Q,GAAI,CAAC6F,GAAI,GAA1C,UACI,SAACmI,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAIC,GAAI,EAAvB,UACI,SAACoD,GAAA,EAAD,SAIR,0BApQA,UAAC9I,GAAA,EAAD,CACIC,KAAM2E,GACN1E,oBAAqBC,GAAAA,EACrBC,aAAW,EACXC,QAAS4E,GACT,mBAAiB,iCALrB,WAOI,SAAC3E,GAAA,EAAD,UACK/D,GAAE,2CAEP,SAACgE,GAAA,EAAD,WACI,SAACC,GAAA,EAAD,CAAmB1J,GAAG,iCAAtB,SACKyF,GAAE,mDAGX,UAACkE,GAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAQjI,QAASwM,GAA0BpH,MAAM,UAAjD,SACKtB,GAAE,0BAEP,SAACmE,EAAA,EAAD,CAAQjI,QAASyM,GAAwBrH,MAAM,UAA/C,SACKtB,GAAE,oCAiPf,0BACI,SAACwM,GAAA,EAAD,CACI9I,KAAMwD,EACNuF,iBAAkB,IAClB3I,QAlNS,WACrBqD,GAAa,IAkNDuF,QAAS1F,S,sLC9Yd,SAAS2F,GAAT,GACkD,IADnBC,EACkB,EADlBA,sBAAuBC,EACL,EADKA,eAEjE,EAA0B/S,EAAAA,SAAuB,KAAjD,eAAOiL,EAAP,KAAc+H,EAAd,KACA,EAA0ChT,EAAAA,SAAuB,GAAjE,eAAOiT,EAAP,KAAsBC,EAAtB,KAEQhN,GAAMC,EAAAA,GAAAA,KAAND,EAkBR,OACI,SAAC7F,EAAA,EAAD,CAAKc,GAAI,CAAEgS,MAAO,OAAQC,WAAY,QAASzH,GAAI,GAAnD,UACI,UAAC0H,GAAA,GAAD,CAAYpI,MAAOA,EAAnB,WACI,UAACqI,GAAA,EAAD,CAAUrI,MAAM,IAAhB,WACI,UAACkE,EAAA,GAAD,CAAMyB,WAAS,EAAf,WACI,UAACzB,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAImE,GAAI,EAAvB,WACI,UAAClM,EAAA,EAAD,CAAYC,QAAQ,YAAYE,MAAM,iBAAiBO,QAAQ,OAA/D,WACI,SAACyL,EAAA,EAAD,CAAkBrB,SAAS,QAAQhR,GAAI,CAAC2G,GAAI,MADhD,eAIA,SAACzH,EAAA,EAAD,CAAKc,GAAI,CAACwK,GAAI,GAAd,UACI,SAAC8H,GAAA,EAAD,CAAeC,yBAvBpB,SAACC,GACpB1B,QAAQC,IAAI,QAASyB,GACrBT,EAAiBS,YAwBD,SAACxE,EAAA,GAAD,CAAM5O,MAAI,EAAE6O,GAAI,GAAImE,GAAI,EAAxB,UACI,UAACzM,EAAA,EAAD,CAAM3F,GAAI,GAAV,WACI,UAAC8F,EAAA,GAAD,CAAUC,WAAW,aAArB,WACI,SAACmB,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,CAAQC,IAAI,aACJpG,KAAKoQ,EAAAA,EAAAA,IAAgB,0DAEjC,SAACnL,EAAA,EAAD,CACI0B,QAAQ,kBACRC,UAAU,yEAGlB,SAACM,EAAA,EAAD,CAAS/B,QAAQ,QAAQC,UAAU,QACnC,UAACN,EAAA,GAAD,CAAUC,WAAW,aAArB,WACI,SAACmB,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,CAAQC,IAAI,gBACJpG,KAAKoQ,EAAAA,EAAAA,IAAgB,8DAEjC,SAACnL,EAAA,EAAD,CACI0B,QAAQ,yBACRC,UAAU,qFAGlB,SAACM,EAAA,EAAD,CAAS/B,QAAQ,QAAQC,UAAU,QACnC,UAACN,EAAA,GAAD,CAAUC,WAAW,aAArB,WACI,SAACmB,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,CAAQC,IAAI,cACJpG,KAAKoQ,EAAAA,EAAAA,IAAgB,oDAEjC,SAACnL,EAAA,EAAD,CACI0B,QAAQ,uBACRC,UAAU,sGAM9B,SAAC1I,EAAA,EAAD,CAAKc,GAAI,CAAGwK,GAAI,GAAK5D,QAAQ,OAAOuB,eAAe,SAAnD,UACI,SAACiC,EAAA,EAAD,CAAeC,QAASuH,EAAgB1H,WAAS,EAClC/D,QAAQ,YACRE,MAAM,UACNpF,QA9DhB,WACf6P,QAAQC,IAAI,iBAAkBe,GAC9BH,EAAsB,CAClBc,SAAUX,KAwDE,SAIK/M,EAAE,4BAIf,SAACoN,GAAA,EAAD,CAAUrI,MAAM,IAAhB,kCACA,SAAC5K,EAAA,EAAD,CAAKc,GAAI,CAAE0S,aAAc,EAAGC,YAAa,WAAzC,UACI,UAACC,GAAA,EAAD,CAAS7I,SA9EJ,SAACwD,EAA6BsF,GAC/ChB,EAASgB,IA6EoC,aAAW,uBAAuBC,UAAQ,EAA3E,WACI,SAACC,GAAA,EAAD,CAAKlJ,MAAM,oBAAoBC,MAAM,OACrC,SAACiJ,GAAA,EAAD,CAAKlJ,MAAM,sBAAsBC,MAAM,gB,wCClClDkJ,GAAe,SAAC3W,GAA+B,IAAD,kDACvD,GAA4CwC,EAAAA,UAAe,GAA3D,iBAAOoU,GAAP,MAAuBC,GAAvB,MACA,GAA4CrU,EAAAA,UAAe,GAA3D,iBAAOsU,GAAP,MAAuBC,GAAvB,MACA,GAAwDvU,EAAAA,UAAe,GAAvE,iBAAOwU,GAAP,MAA6BC,GAA7B,MACA,GAAkDzU,EAAAA,UAAgB,GAAlE,iBAAO0U,GAAP,MAA0BC,GAA1B,MACA,GAAwD3U,EAAAA,UAAwB,GAAhF,iBAAO4U,GAAP,MAA6BC,GAA7B,MACA,GAA8C7U,EAAAA,SAAe,MAA7D,iBAAO8U,GAAP,MAAwBC,GAAxB,MAEOtU,IAAMuU,EAAAA,EAAAA,MAANvU,GAED+M,IAAWC,EAAAA,EAAAA,MACTvH,IAAMC,EAAAA,GAAAA,KAAND,EAGJ+O,GAqBAzX,EArBAyX,0BACAC,GAoBA1X,EApBA0X,kBACAC,GAmBA3X,EAnBA2X,sBACAC,GAkBA5X,EAlBA4X,cACAC,GAiBA7X,EAjBA6X,kBACAC,GAgBA9X,EAhBA8X,+BACAzQ,GAeArH,EAfAqH,gBACA0Q,GAcA/X,EAdA+X,uBACAC,GAaAhY,EAbAgY,uBACA7Q,GAYAnH,EAZAmH,oBACAC,GAWApH,EAXAoH,QACAG,GAUAvH,EAVAuH,oBACA0Q,GASAjY,EATAiY,kBACAC,GAQAlY,EARAkY,qBAEAC,GAMAnY,EANAmY,uBACAC,GAKApY,EALAoY,yBACAC,GAIArY,EAJAqY,kBACAC,GAGAtY,EAHAsY,0BACAC,GAEAvY,EAFAuY,qBACAC,GACAxY,EADAwY,cAGJhW,EAAAA,WAAgB,WACZiW,GAAAA,EAAAA,GAAQ,mBAAmB,SAACC,GACxBnB,GAAmBmB,MAGvBjB,KACAC,OACD,IAEHlV,EAAAA,WAAgB,WAAO,IAAD,EACf,OAACqV,SAAD,IAACA,IAAD,UAACA,GAAmBc,aAApB,OAAC,EAA0B1V,KAAMA,KAChC0U,GAAsB1U,IACtBkU,GAAqB,MAE1B,CAACU,KAEJrV,EAAAA,WAAgB,WACT0U,IAAmB,GACf7P,IACC0Q,GAAuBa,OAAO3V,IAAKiU,GAAmBnQ,GAAAA,EAAAA,kBAAgC,MAG/F,CAACmQ,KAEJ1U,EAAAA,WAAgB,WACRqV,IAAqBA,GAAkBc,QAAUb,KACjDf,GAAkBc,GAAkBxI,iBAAkB,GACtDmC,YAAW,WACPqF,IAAkB,KACnB,QAER,CAACgB,KAEJrV,EAAAA,WAAgB,WACZ,GAAGyV,IAAqBC,IAAwBK,GAAqB,CAAC,IAAD,EACjEb,KACA,IAAMmB,GAA2B,OAAjBhB,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,eAA0B1V,MAAO,EACjD8U,GAAuBc,EAAS,EAAG,GAAI,OAE5C,CAACZ,GAAmBC,GAAsBK,KAE7C/V,EAAAA,WAAgB,WACT2V,IACCpB,IAAkB,KAEvB,CAACoB,KAEJ,IA6EMW,GAA8B,WAChC7B,IAAwB,IAEtB8B,GAA4B,WAC9B9B,IAAwB,GACxB,IAAMzG,EAAuB,CACzBmI,MAAK,OAAEd,SAAF,IAAEA,QAAF,EAAEA,GAAmBc,MAC1BxO,KAAM,IAEVnK,EAAMgZ,wBAAwBxI,IA8DlC,OACI,UAAC3N,EAAA,EAAD,WAGQiV,IACI,SAACjV,EAAA,EAAD,CAAKc,GAAI,CAAEsV,WAAY,GAAIhN,UAAW,UAAtC,UACI,SAACD,EAAA,EAAD,CAAkBhC,MAAM,cACnB,MAGb,UAACkP,EAAA,EAAD,CAAWC,SAAS,KAAK1U,UAAU,uBAAnC,WACI,SAACkN,EAAA,GAAD,CACIyB,WAAS,EACTkB,MAAO,CACH2E,WAAY,IAHpB,UAKI,SAACtH,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAIC,GAAI,EAAvB,UACI,UAACuH,EAAA,EAAD,CAAa,aAAW,aAAxB,WACI,SAAC,KAAD,CAAMpP,MAAM,UAAUqP,GAAI5H,EAAAA,EAAAA,KAA1B,kBAGA,SAAC,KAAD,CAAMzH,MAAM,UAAUqP,GAAI5H,EAAAA,EAAAA,OAA1B,SACK/I,GAAE,0BAEP,SAACmB,EAAA,EAAD,CAAYG,MAAM,eAAlB,gBAAkC6N,SAAlC,IAAkCA,IAAlC,UAAkCA,GAAmBc,aAArD,aAAkC,EAA0BvV,eAMpE0U,GACI,MACA,UAACnG,EAAA,GAAD,CACIyB,WAAS,EACTkB,MAAO,CACH2E,WAAY,IAHpB,WAMI,UAACtH,EAAA,GAAD,CAAM5O,MAAI,EAAC6O,GAAI,GAAIC,GAAI,EAAvB,WACI,SAACvP,GAAD,iBAAwBuV,SAAxB,IAAwBA,QAAxB,EAAwBA,GAAmBc,SAC3C,SAACtT,EAAAiU,EAAD,CAAMC,GAAI3C,GAAV,UACI,UAAClT,EAAA,EAAD,CAAMC,GAAI,CAACC,GAAI,GAAf,WACI,UAAC+O,EAAA,EAAD,WACsB,OAAjBkF,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,SAA0Ba,QACvB,UAAC3P,EAAA,EAAD,CAAYC,QAAQ,KAAKnG,GAAI,CAAEsI,UAAW,SAAUwN,WAAY,KAAQhV,UAAU,YAAlF,sBACOoT,SADP,IACOA,IADP,UACOA,GAAmBc,aAD1B,aACO,EAA0Ba,OADjC,SAGA,MAEJ,UAAC3P,EAAA,EAAD,CAAYC,QAAQ,YAAYE,MAAM,iBAAiBO,QAAQ,OAA/D,WACI,SAACyL,EAAA,EAAD,CAAkBrB,SAAS,QAAQhR,GAAI,CAAC2G,GAAI,OAC1B,OAAjBuN,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,eAA0Be,aAAcC,EAAAA,GAAAA,KACrCjR,GAAE,oBACe,OAAjBmP,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,eAA0Be,aAAcC,EAAAA,GAAAA,KACxCjR,GAAE,oBACe,OAAjBmP,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,eAA0Be,aAAcC,EAAAA,GAAAA,KACxCjR,GAAE,mBACF,QAGU,OAAjBmP,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,SAA0BiB,WAA1B,OAAuC/B,SAAvC,IAAuCA,IAAvC,UAAuCA,GAAmBc,aAA1D,OAAuC,EAA0BkB,SAC9D,UAAChX,EAAA,EAAD,YACI,UAACgH,EAAA,EAAD,CAAYG,MAAM,iBAAiB4K,cAAY,EAA/C,UACKlM,GAAE,2BADP,SACyC,6BAAQ,SAAC,IAAD,CAAqB8C,YAAW,OAAEqM,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,aAAE,EAA0BiB,kBAE7G,UAAC/P,EAAA,EAAD,CAAYG,MAAM,iBAAiB4K,cAAY,EAACrK,QAAQ,OAAxD,UACK7B,GAAE,yBADP,SACuC,6BAAQ,SAAC,IAAD,CAAqB8C,YAAW,OAAEqM,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,aAAE,EAA0BkB,kBAG/G,KAGiB,OAAjBhC,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,SAA0BmB,gBAAiB,UAACjQ,EAAA,EAAD,CAAYG,MAAM,iBAAiB4K,cAAY,EAACrK,QAAQ,OAAxD,UACtC7B,GAAE,uBADoC,SAEvC,8BAASA,GAAE,oCAA4BmP,SAA5B,IAA4BA,IAA5B,UAA4BA,GAAmBc,aAA/C,aAA4B,EAA0BmB,iBAAjE,aACY,MAIpB,SAACjQ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMpG,GAAI,CAAE6F,GAAI,GAAnD,gBACKqO,SADL,IACKA,IADL,UACKA,GAAmBc,aADxB,aACK,EAA0BvV,SAG/B,UAACyG,EAAA,EAAD,CAAYlG,GAAI,CAAEgR,SAAU,SAAUnL,GAAI,GAAKQ,MAAM,iBAAiBO,QAAQ,OAA9E,WACI,SAACwP,EAAA,EAAD,CAAgBpF,SAAS,QAAQhR,GAAI,CAAC2G,GAAI,MAD9C,KACsD,SAAC,IAAD,CAAqBkB,YAAW,OAAEqM,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,aAAE,EAA0BjI,iBAG7F,OAAjBmH,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,SAA0BjG,SACtB,UAAC7I,EAAA,EAAD,CAAYlG,GAAI,CAAEC,GAAI,IAAK+Q,SAAU,SAAUnL,GAAI,GAAKQ,MAAM,iBAAiBO,QAAQ,OAAvF,WACI,SAACyP,EAAA,EAAD,CAAarF,SAAS,QAAQhR,GAAI,CAAC2G,GAAI,MAD3C,OAEKuN,SAFL,IAEKA,IAFL,UAEKA,GAAmBc,aAFxB,iBAEK,EAA0BjG,eAF/B,aAEK,EAAmCE,KAFxC,YAEgDiF,SAFhD,IAEgDA,IAFhD,UAEgDA,GAAmBc,aAFnE,iBAEgD,EAA0BjG,eAF1E,aAEgD,EAAmCG,WACnE,KAIH,OAAjBgF,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,SAA0BsB,UACtB,UAACpQ,EAAA,EAAD,CAAYlG,GAAI,CAAEC,GAAI,IAAK+Q,SAAU,SAAUnL,GAAI,GAAKQ,MAAM,iBAAiBO,QAAQ,OAAvF,WACI,SAAC2P,EAAA,EAAD,CAAkBvF,SAAS,QAAQhR,GAAI,CAAC2G,GAAI,MAC3C5B,GAAE,gCAFP,IA5H5B,WAAe,IAAD,IACN,IAGK,IAHjC,MAAsB,OAAlB4O,IACwB,OAAjBO,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,mBAA0BsB,gBAA1B,eAAoCE,UAAW,GAE/B,OAAlB7C,IACmB,OAAjBO,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,mBAA0BsB,gBAA1B,eAAoCG,UAAW,IAElC,OAAjBvC,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,mBAA0BsB,gBAA1B,eAAoCI,UAAW,GAuHmCC,MACzB,MAGxB,UAACC,GAAA,EAAD,CAAW5W,GAAI,CAAC6F,GAAI,mBAAoBgR,UAAW,EAAG9U,SAAU0R,GAAsB1J,SAtIjG,WAC7B2J,IAAyBD,KAqIe,WACI,SAACqD,GAAA,EAAD,CACIC,YAAY,SAACvH,GAAA,EAAD,CAAgBxP,GAAI,CAACqP,gBAAiB,SAAU2H,aAAc,SAC1E,gBAAc,kBACd1X,GAAG,iBACHwB,UAAU,WAJd,SAKKiE,GAAE,wCAEP,SAACkS,GAAA,EAAD,WACI,gBAAKC,wBAAyB,CAAEC,QAAyB,OAAjBjD,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,eAA0BnV,cAAe,eAK7F,UAACsP,EAAA,EAAD,CAAaC,gBAAc,EAA3B,WAEI,SAAC,GAAD,CAAaxE,IAAI,mEAAjB,UACI,SAACwM,GAAA,EAAD,CAAS3X,OACL,SAAC,WAAD,UACKsF,GAAE,wBAFX,UAKI,SAACuK,GAAA,EAAD,SAIR,SAAC7I,EAAA,EAAD,CAAYzG,GAAI,CAACuP,WAAY,QAAStO,QA1M9D,WAChBqS,IAAwB,IAyMgB,UACI,SAAC8D,GAAA,EAAD,CAAS3X,OACL,SAAC,WAAD,UACKsF,GAAE,yBAFX,UAKI,SAACkC,EAAA,EAAD,gBAQnBvD,IACG,SAACxE,EAAA,EAAD,CAAKc,GAAI,CAACC,GAAI,GAAd,UACI,SAACsD,GAAD,CACI3E,YAAW,OAAEsV,SAAF,IAAEA,QAAF,EAAEA,GAAmBc,MAChCxR,oBAAqBA,GACrBC,QAASA,GACTC,gBAAiBA,GACjBC,oBAAqB0Q,GACrBzQ,oBAAqBA,GACrBC,iBAAkB6Q,GAClB5Q,yBA5SX,SAACoB,GAC9B,GAAIA,EAAS,CAAC,IAAD,UACH2H,EAAwB,CAC1B/E,aAAakF,EAAAA,EAAAA,IAAwB,IAAIC,MACzC/H,QAASA,EACT8P,MAAO,CACH1V,GAAE,OAAE4U,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,aAAE,EAA0B1V,GAC9BkH,KAAM,CACFlH,GAAE,OAAE4U,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,iBAAE,EAA0BxO,YAA5B,aAAE,EAAgClH,GACpCoN,MAAK,OAAEwH,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,iBAAE,EAA0BxO,YAA5B,aAAE,EAAgCkG,QAG/ClG,KAAM,IAEVnK,EAAMgb,gBAAgBxK,IAGtByK,EAAAA,GAAAA,IAAWC,GAAAA,GAAAA,WAAAA,gBAAAA,UACPA,GAAAA,GAAAA,WAAAA,gBAAAA,cACAA,GAAAA,GAAAA,WAAAA,gBAAAA,cA0RgCxT,4BAtRR,SAACoB,GACjC0P,GAAc1P,IAsR0BnB,4BAnRR,SAACkB,EAAiBsS,GAClD,IAAIC,EAAgBjU,GAAoBkU,MAAK,SAAApR,GAAO,OAAIA,EAAQhH,KAAOkY,KACvEC,GAAa,kBACNA,GADM,IAETvS,QAASA,IAEb+O,GAAcwD,IAGdH,EAAAA,GAAAA,IAAWC,GAAAA,GAAAA,WAAAA,mBAAAA,UACPA,GAAAA,GAAAA,WAAAA,mBAAAA,cACAA,GAAAA,GAAAA,WAAAA,mBAAAA,aAyQoCtT,4BAjPR,SAACqC,GACjC,IAAMuG,EAAS,CACX8K,aAAcrR,EACdE,KAAM,IAEVnK,EAAMub,cAAc/K,IA6OoB3I,+BA1OL,WACnCsP,GAAqBD,GAAkB,IA0OCpP,WAAYwQ,OAGpB,MAGiB,OAAjBT,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,eAA0B6C,qBAAsBC,GAAAA,EAAAA,SAA2B,UAAA5D,GAAkBc,aAAlB,eAAyBe,aAAaC,EAAAA,GAAAA,MAC7G,SAACtE,GAAD,CAAsBC,sBAlL9C,SAACoG,GACb,GAAIrU,GAAgB,CAAC,IAAD,EACVmJ,EAAgB,CAClB4F,SAAUsF,EAAKtF,SACfuF,UAAW,CACP1Y,GAAE,OAAE4U,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,aAAE,EAA0B1V,KAGtCwR,QAAQC,IAAI,UAAWlE,GACvBxQ,EAAM4b,QAAQpL,KA0KwC+E,eAAgBvV,EAAMuV,iBAAoB,MAInD,OAAjBsC,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,eAA0B6C,qBAAsBC,GAAAA,EAAAA,SAA2B,UAAA5D,GAAkBc,aAAlB,eAAyBe,aAAaC,EAAAA,GAAAA,MACjH,SAACkC,GAAA,EAAD,CAAOC,SAAS,UAAhB,SAA2BpT,GAAE,wCAAiD,SAKtF,SAACiJ,EAAA,GAAD,CAAMyB,WAAS,EAACrQ,MAAI,EAAC6O,GAAI,GAAIC,GAAI,EAAGlO,GAAI,CAAEoY,GAAI,CAAEnK,GAAI,EAAGC,GAAI,IAAO2C,QAAS,EAA3E,UACI,SAACtF,GAAD,CACIC,eA5RL,SAACoC,GACN,IAAD,IAArB,GAAIlK,IACA,IAAqB,OAAjBwQ,SAAiB,IAAjBA,IAAA,UAAAA,GAAmBc,aAAnB,mBAA0BxO,YAA1B,eAAgClH,OAAhC,OAAuCmE,SAAvC,IAAuCA,QAAvC,EAAuCA,GAASnE,IAAI,CAAC,IAAD,QAC9CuN,EAAS,CACXwL,aAAc,CACV/Y,GAAE,OAAE4U,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,iBAAE,EAA0BxO,YAA5B,aAAE,EAAgClH,GACpCgZ,SAAQ,OAAEpE,SAAF,IAAEA,IAAF,UAAEA,GAAmBc,aAArB,iBAAE,EAA0BxO,YAA5B,aAAE,EAAgC8R,UAE9CC,cAAcvL,EAAAA,EAAAA,IAAwB,IAAIC,OAE9CwH,GAAyB5H,SAG7BR,GAASyB,EAAAA,EAAAA,QAgRmBlP,YAAW,OAAEsV,SAAF,IAAEA,QAAF,EAAEA,GAAmBc,MAChCvJ,YAAahI,GACbC,gBAAiBA,GACjBgI,eAAgByH,GAChBxH,2BAhRT,SAACmB,GACxBzQ,EAAMmc,mBAAmB1L,IAgROlB,uBAAwBvP,EAAMuP,uBAC9BC,SA1MnB,SAACa,GACd,OAAOrQ,EAAMoc,mBAAmBC,WAAU,SAAAtZ,GAAI,OAAIA,EAAKuZ,UAAUjM,OAAOA,MAAS,cAzC7E,UAAClE,GAAA,EAAD,CACIC,KAAM4K,GACN3K,oBAAqBC,GAAAA,EACrBC,aAAW,EACXC,QAASsM,GACT,mBAAiB,iCALrB,WAMI,SAACrM,GAAA,EAAD,UACK/D,GAAE,8CAEP,SAACgE,GAAA,EAAD,WACI,SAACC,GAAA,EAAD,CAAmB1J,GAAG,iCAAtB,SACKyF,GAAE,sDAGX,UAACkE,GAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAQjI,QAASkU,GAA6B9O,MAAM,UAApD,SACKtB,GAAE,0BAEP,SAACmE,EAAA,EAAD,CAAQ7C,MAAM,UAAUpF,QAASmU,GAAjC,SACKrQ,GAAE,mCA+QrB6T,GAAqB,CACvB5E,sBAAAA,EAAAA,GACAI,uBAAAA,EAAAA,GACAiD,gBAAAA,EAAAA,GACA5C,yBAAAA,GAAAA,GACAX,0BAAAA,EAAAA,GACAC,kBAAAA,EAAAA,GACAE,cAAAA,EAAAA,GACAY,cAAAA,EAAAA,GACAQ,wBAAAA,GAAAA,GACAuC,cAAAA,GAAAA,GACAY,mBAAAA,GAAAA,GACAP,QAAAA,GAAAA,IAMJ,IAAeY,EAAAA,EAAAA,UApDS,SAAC,GAAD,IAAGrS,EAAH,EAAGA,KAAMwO,EAAT,EAASA,MAAO1O,EAAhB,EAAgBA,QAAS+R,EAAzB,EAAyBA,aAAcS,EAAvC,EAAuCA,YAAa9R,EAApD,EAAoDA,mBAAoB8F,EAAxE,EAAwEA,aAAciM,EAAtF,EAAsFA,eAAgBhB,EAAtG,EAAsGA,KAAtG,MAA8H,CAClJrU,gBAAiB8C,EAAK9C,gBACtBD,QAAS+C,EAAKiF,YAEd0I,+BAAgCa,EAAMgE,8BACtC9E,kBAAmBc,EAAMiE,uBAEzB5E,uBAAwB/N,EAAQ4S,uBAChC1V,oBAAqB8C,EAAQ6S,gBAC7BvV,oBAAqB0C,EAAQ1C,oBAC7B8Q,kBAAmBpO,EAAQzC,iBAC3ByQ,kBAAmBhO,EAAQ8S,WAC3B7E,qBAAsBjO,EAAQ+S,cAC9B1E,0BAA2BrO,EAAQgT,0BACnCC,qBAAsBjT,EAAQkT,oBAC9B5E,qBAAsBtO,EAAQmT,cAE9BC,0BAA2BrB,EAAasB,cACxCC,mBAAoBvB,EAAaxL,OACjC2H,uBAAwB6D,EAAae,WAErCS,sBAAuBf,EAAYgB,cACnCC,yBAA0BjB,EAAYkB,oBAEtCC,6BAA8BjT,EAAmB8S,cACjDI,gCAAiClT,EAAmBgT,oBAEpDpO,uBAAwBkB,EAAasM,WAErCX,mBAAoBM,EAAeN,mBAEnC7G,eAAgBmG,EAAK4B,iBAqBef,GAAxC,CAA4D5F,K,8LCziB/C1P,EAA+B,CACxC4B,QAAS,IAGAoE,EAAkC6Q,EAAAA,GAAW,CACtDjV,QAASiV,EAAAA,KAAaC,SAAS,4BAItB9O,EAAsC,CAC/CsE,SAAU,GACVlD,MAAO,GACPxH,QAAS,IAGAqH,EAAyC4N,EAAAA,GAAW,CAC7DvK,SAAUuK,EAAAA,KAAaC,SAAS,uBAChC1N,MAAOyN,EAAAA,KAAazN,QAAQ0N,SAAS,qBACrClV,QAASiV,EAAAA,KAAaC,SAAS,yBAGtBC,EAA6B,CACtC5H,SAAU,GAGD6H,EAAgCH,EAAAA,GAAW,CACpD1H,SAAU0H,EAAAA,KAAaC,SAAS,2B,6JCX9BG,EAA6BJ,EAAAA,GAAW,CAC1CjV,QAASiV,EAAAA,KAAaC,SAAS,uBAAuBI,IAAI,EAAG,gBAAgBC,IAAI,IAAM,qBAGrFpX,EAR0B,CAC5B6B,QAAS,IAuEP0T,EAAqB,CACvB8B,aAAAA,EAAAA,IAMJ,KAAe7B,EAAAA,EAAAA,UAfS,SAAC,GAAD,IAAE8B,EAAF,EAAEA,eAAgBnU,EAAlB,EAAkBA,KAAlB,MAAyC,CAC7D6D,QAASsQ,EAAehB,cACxB9M,OAAQ8N,EAAe9N,OACvBuM,WAAYuB,EAAevB,WAE3B1V,gBAAiB8C,EAAK9C,gBACtB+H,YAAajF,EAAKiF,eASkBmN,EAAxC,EAnEmC,SAACvc,GAEhC,IAAM8M,GAASC,EAAAA,EAAAA,IAAU,CACrB/F,cAAAA,EACAgG,iBAAkBkR,EAClBhR,SAAU,SAAAC,GACFnN,EAAMqH,iBACNrH,EAAMqe,aAAalR,MAW/B,OANA3K,EAAAA,WAAgB,WACTxC,EAAM+c,YACLjQ,EAAOyD,cAEZ,CAACvQ,EAAM+c,cAGN,SAAC,IAAD,WACI,iBAAM7P,SAAUJ,EAAOO,aAAvB,UACI,SAAC,IAAD,WACI,UAAC,IAAD,YACI,UAAC,IAAD,CAAK1J,GAAI,CAAC4G,QAAS,OAAQb,WAAY,YAAvC,WACI,SAAC,IAAD,CAAa/F,GAAI,CAACqG,MAAO,gBAAiBM,GAAI,EAAG6D,GAAI,OACrD,SAAC,IAAD,CAAWlL,GAAG,UACHsK,KAAK,UACLC,MAAM,0BACN1D,QAAQ,WACR+D,WAAS,EACTD,WAAS,EACTH,MAAOX,EAAOK,OAAOtE,QACrB6E,SAAUZ,EAAOa,aACjB+F,MAAO5G,EAAOwG,QAAQzK,SAAW2K,QAAQ1G,EAAO2G,OAAO5K,SACvD8K,KAAM,OAGjB7G,EAAOwG,QAAQzK,SAAW2K,QAAQ1G,EAAO2G,OAAO5K,UAAW,SAAC,IAAD,CAAKpE,UAAU,YAAf,SAA4BqI,EAAO2G,OAAO5K,UAAiB,MAE1H,SAAC,IAAD,CAAKlF,GAAI,CAAC4G,QAAS,OAAQb,WAAY,YAAvC,UACI,SAAC,IAAD,CAAQI,QAAQ,WAAWmE,KAAK,QAAQJ,WAAS,EAAClK,GAAI,CAAC6F,GAAI,GACnDQ,MAAM,UACN3D,KAAK,SAFb,qC,8LClDtBW,EAAgBgX,EAAAA,GAEf,SAAS/H,EAAT,GAAiJ,IAAzHC,EAAwH,EAAxHA,yBAA0B3N,EAA8F,EAA9FA,aAE/CuE,GAASC,EAAAA,EAAAA,IAAU,CACrB/F,cAAAA,EACAgG,iBAAkBiR,EAAAA,GAClB/Q,SAAU,SAAAC,OAKd3K,EAAAA,WAAgB,WACT+F,GACCuE,EAAOM,cAAc,WAAY7E,KAEtC,CAACA,IAEJ,IAAMgW,EAAiB,SAACrN,EAAY7K,GAChC6K,EAAMC,kBACI,MAAP9K,GAAcyG,EAAOK,OAAOiJ,SAAW,KACtCtJ,EAAOM,cAAc,WAAYN,EAAOK,OAAOiJ,SAAS,GACxDF,EAAyBpJ,EAAOK,OAAOiJ,SAAS,IAE3CtJ,EAAOK,OAAOiJ,SAAW,IAC9BtJ,EAAOM,cAAc,WAAYN,EAAOK,OAAOiJ,SAAS,GACxDF,EAAyBpJ,EAAOK,OAAOiJ,SAAS,KAIxD,OACI,UAAC,IAAD,YACI,UAAC,IAAD,CAAYtM,QAAQ,YAAYE,MAAM,iBAAiBO,QAAQ,OAA/D,WACI,SAAC,IAAD,CAAcoK,SAAS,QAAQhR,GAAI,CAAC2G,GAAI,MAD5C,kBAIA,UAAC,IAAD,CACI3G,GAAI,CAAEiQ,EAAG,UAAWrJ,QAAS,OAAQb,WAAY,SAAUiM,MAAO,KADtE,WAEI,SAAC,IAAD,CAAYhS,GAAI,CAAEiQ,EAAG,QAAU,aAAW,OAAQhP,QAAS,SAACsM,GAAD,OAAgBqN,EAAerN,EAAO,MAAjG,UACI,SAAC,IAAD,OAEJ,SAAC,KAAD,CACIvN,GAAI,CAAE+H,GAAI,EAAG8S,KAAM,GACnBC,YAAY,IACZC,WAAY,CAAE,aAAc,KAC5BrY,KAAK,SACLoH,MAAOX,EAAOK,OAAOiJ,SACrB1I,SAAUZ,EAAOa,gBAErB,SAAC,IAAD,CAAYhK,GAAI,CAAEiQ,EAAG,QAAU,aAAW,aAAahP,QAAS,SAACsM,GAAD,OAAiBqN,EAAerN,EAAO,MAAvG,UACI,SAAC,IAAD,c,sBCjEb,IAAKuK,E,gCAAZ,SAAYA,GAAAA,EAAAA,OAAAA,gBAAAA,EAAAA,aAAAA,cAAZ,CAAYA,IAAAA,EAAAA,M,sBCAL,IAAK9B,EAMAgF,EAMAC,EAOAC,E,yGAnBZ,SAAYlF,GAAAA,EAAAA,KAAAA,YAAAA,EAAAA,KAAAA,YAAAA,EAAAA,KAAAA,YAAZ,CAAYA,IAAAA,EAAAA,KAMZ,SAAYgF,GAAAA,EAAAA,QAAAA,UAAAA,EAAAA,SAAAA,WAAAA,EAAAA,OAAAA,SAAZ,CAAYA,IAAAA,EAAAA,KAMZ,SAAYC,GAAAA,EAAAA,WAAAA,aAAAA,EAAAA,QAAAA,UAAAA,EAAAA,YAAAA,cAAAA,EAAAA,IAAAA,MAAZ,CAAYA,IAAAA,EAAAA,KAOZ,SAAYC,GAAAA,EAAAA,KAAAA,OAAAA,EAAAA,KAAAA,OAAZ,CAAYA,IAAAA,EAAAA,M,yFChBCC,EAAsB,SAACC,EAAWC,GAC7C,OAAID,GAAQA,EAAKvT,aACR,SAAC,IAAD,CAAcuT,KAAM,IAAInO,KAAKmO,EAAKvT,aAAcwT,OAAO,WAEvD,0B,+ECJEC,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,oBAAqB,CACjBpM,gBAAiBoM,EAAMC,QAAQC,QAC/BtV,MAAOoV,EAAMC,QAAQC,QACrBC,UAAU,aAAD,OAAeH,EAAMC,QAAQG,WAAWC,OACjD,WAAY,CACRC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNjK,MAAO,OACPkK,OAAQ,OACRlF,aAAc,MACdmF,UAAW,mCACX3U,OAAQ,yBACRtC,QAAS,OAGjB,oBAAqB,CACjB,KAAM,CACFkX,UAAW,YACXC,QAAS,GAEb,OAAQ,CACJD,UAAW,aACXC,QAAS,S,qGCtBR1T,EAAkB9J,EAAAA,YAAiB,SAC5CxC,EAGA6G,GAEA,OAAO,SAAC,KAAD,QAAOoZ,UAAU,KAAKpZ,IAAKA,GAAS7G","sources":["shared/pages/image-lightbox.tsx","main-features/offer/details/ui-segments/SwiperDetailsOffer.tsx","shared/components/read-more-text/ReadMoreText.tsx","main-features/offer/details/ui-segments/CommentDetailsOffer.tsx","shared/components/custom-share/CustomShare.tsx","main-features/offer/details/ui-segments/RightDetailsOffer.tsx","main-features/offer/details/ui-segments/CartSellDetailsOffer.tsx","main-features/offer/details/DetailsOffer.tsx","main-features/offer/details/validation/initial-values-add-comment-offer.ts","main-features/probleme-declaration/ProblemeDeclaration.tsx","shared/components/input-quantity/InputQuantity.tsx","shared/enums/offer-type-contact.enum.ts","shared/enums/type-offer.enum.ts","shared/pages/react-time-ago.tsx","shared/pages/styled-badge.tsx","shared/pages/transition-modal.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\n// import Lightbox from 'react-image-lightbox';\r\n// In your own app, you would need to use import styles once in the app\r\n// import 'react-image-lightbox/styles.css';\r\n// import './stylesheets/vendor/stylesheet.css';\r\n// import './stylesheets/vendor/github-light.css';\r\n// import './stylesheets/app.css';\r\n// import image1 from './images/1.jpg';\r\n// import image2 from './images/2.jpg';\r\n// import image3 from './images/3.jpg';\r\n// import image4 from './images/4.jpg';\r\n// import image1Thumb from './images/1_thumb.jpg';\r\n// import image2Thumb from './images/2_thumb.jpg';\r\n// import image3Thumb from './images/3_thumb.jpg';\r\n// import image4Thumb from './images/4_thumb.jpg';\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n//\r\n// const images = [image1, image2, image3, image4];\r\n// const thumbs = [image1Thumb, image2Thumb, image3Thumb, image4Thumb];\r\n\r\nconst images = ['//placekitten.com/1500/500', '//placekitten.com/4000/3000', '//placekitten.com/800/1200', '//placekitten.com/1500/1500'];\r\n// const thumbs = ['//placekitten.com/4000/3000', 'https://source.unsplash.com/random', 'https://source.unsplash.com/random', 'https://source.unsplash.com/random'];\r\n\r\n// const titles = [\r\n//     '',\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/titrans/\">\r\n//       quatre mains\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by/2.0/\"\r\n//         title=\"Attribution License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/lachlanrogers/\">\r\n//       latch.r\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by-sa/2.0/\"\r\n//         title=\"Attribution-ShareAlike License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/fazen/\">\r\n//       fazen\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by/2.0/\"\r\n//         title=\"Attribution License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n// ];\r\n//\r\n// const captions = [\r\n//     'Cat in the snow',\r\n//     '',\r\n//     <p>\r\n//         .. not in the&nbsp;\r\n//         <em>mood</em>\r\n//         &nbsp;for games right now\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         C&#39;mon. Seriously.\r\n//     </p>,\r\n//     '',\r\n// ];\r\n//\r\n// interface IImageLightBox {\r\n//     images: string[];\r\n//     thumbs: string[];\r\n//     titles: (string | JSX.Element)[];\r\n//     captions: (string | JSX.Element)[];\r\n// }\r\n\r\n// let listImagesLightBox: IImageLightBox = {\r\n//     images: [],\r\n//     thumbs: [],\r\n//     titles: [],\r\n//     captions: []\r\n// }\r\n\r\nclass ImageLightbox extends Component<any, any> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: 0,\r\n            isOpen: false,\r\n            listImagesLightBox : {\r\n                images: this.props.listImages,\r\n                thumbs: this.props.listImages,\r\n                titles: this.props.listTitles,\r\n                captions: []// this.props.listCaptions\r\n            }\r\n        };\r\n\r\n        this.openLightbox = this.openLightbox.bind(this);\r\n        this.closeLightbox = this.closeLightbox.bind(this);\r\n        this.moveNext = this.moveNext.bind(this);\r\n        this.movePrev = this.movePrev.bind(this);\r\n    }\r\n\r\n    static onImageLoadError(): void {\r\n        // console.error(`Could not load image at ${imageSrc}`, errorEvent); // eslint-disable-line no-console\r\n    }\r\n\r\n    openLightbox() {\r\n        this.setState({ isOpen: true });\r\n    }\r\n\r\n    closeLightbox() {\r\n        this.setState({ isOpen: false });\r\n        this.props.callbackClose();\r\n    }\r\n\r\n    moveNext() {\r\n        this.setState((prevState: any) => ({\r\n            index: (prevState.index + 1) % images.length,\r\n        }));\r\n    }\r\n\r\n    movePrev() {\r\n        this.setState((prevState: any) => ({\r\n            index: (prevState.index + images.length - 1) % images.length,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n\r\n        let lightbox;\r\n        if (this.props.openLightBox) {\r\n            lightbox = (\r\n                <Lightbox\r\n                    mainSrc={this.state.listImagesLightBox.images[this.state.index]}\r\n                    nextSrc={this.state.listImagesLightBox.images[(this.state.index + 1) % images.length]}\r\n                    prevSrc={\r\n                        this.state.listImagesLightBox.images[(this.state.index + images.length - 1) % images.length]\r\n                    }\r\n                    mainSrcThumbnail={this.state.listImagesLightBox.thumbs[this.state.index]}\r\n                    nextSrcThumbnail={this.state.listImagesLightBox.thumbs[(this.state.index + 1) % images.length]}\r\n                    prevSrcThumbnail={\r\n                        this.state.listImagesLightBox.thumbs[(this.state.index + images.length - 1) % images.length]\r\n                    }\r\n                    onCloseRequest={this.closeLightbox}\r\n                    onMovePrevRequest={this.movePrev}\r\n                    onMoveNextRequest={this.moveNext}\r\n                    onImageLoadError={ImageLightbox.onImageLoadError}\r\n                    imageTitle={this.state.listImagesLightBox.titles[this.state.index]}\r\n                    imageCaption={this.state.listImagesLightBox.captions[this.state.index]}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div  onContextMenu={(e) => e.preventDefault()}>\r\n                {lightbox}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageLightbox;","import * as React from 'react';\r\n\r\n// Import Swiper React components\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport Card from '@mui/material/Card/Card';\r\nimport {Autoplay, EffectFade, Lazy, Navigation, Thumbs, Zoom} from 'swiper';\r\nimport SwiperCore from 'swiper';\r\nimport {IOffer} from \"../../../../shared/model/offer.model\";\r\nimport {IOfferImages} from \"../../../../shared/model/offer-images.model\";\r\nimport {getImageForOffer} from \"../../../../shared/utils/utils-functions\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-fade\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\nimport ImageLightbox from \"../../../../shared/pages/image-lightbox\";\r\nimport Box from \"@mui/material/Box/Box\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Autoplay, EffectFade, Lazy, Zoom, Navigation, Thumbs]);\r\n\r\nexport default function SwiperDetailsOffer(offerEntity: IOffer) {\r\n    const [thumbsSwiper, setThumbsSwiper] = React.useState<any | null>(null);// useState(null);\r\n    const [openLightBox, setOpenLightBox] = React.useState(false);\r\n\r\n    const closeLightBox = () => {\r\n        setOpenLightBox(false);\r\n    }\r\n\r\n    const getFullListImages = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => getImageForOffer(offerEntity.id, item.path));\r\n    }\r\n\r\n    const getFullListTitles = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => (offerEntity?.title || '').toString());\r\n    }\r\n\r\n    const getFullListCaptions = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => (offerEntity?.description || '').toString());\r\n    }\r\n\r\n    return offerEntity && offerEntity.offerImages && offerEntity.offerImages.length > 0 ? (\r\n\r\n        <Box>\r\n            <ImageLightbox openLightBox={openLightBox}\r\n                           callbackClose={closeLightBox}\r\n                           listImages={getFullListImages()}\r\n                           listTitles={getFullListTitles()}\r\n                           listCaptions={getFullListCaptions()}/>\r\n\r\n            <Card sx={{mb: 2}}>\r\n                <Swiper\r\n                    spaceBetween={10}\r\n                    navigation={offerEntity.offerImages.length>1 ? true : false}\r\n                    pagination={{clickable: true}}\r\n                    thumbs={{swiper: thumbsSwiper}}\r\n                    zoom={true}\r\n                    lazy={true}\r\n                    effect={'fade'}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 5000,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    className=\"mySwiper2\"\r\n                >\r\n                    {offerEntity.offerImages.map((offerImage: IOfferImages, index) => (\r\n                        <SwiperSlide key={offerImage.id}>\r\n                            <div className=\"swiper-zoom-container\">\r\n                                <img src={getImageForOffer(offerEntity.id, offerImage.path)}\r\n                                     onClick={() => setOpenLightBox(true)} onContextMenu={(e) => e.preventDefault()}/>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n                <Swiper\r\n                    onSwiper={setThumbsSwiper}\r\n                    spaceBetween={10}\r\n                    slidesPerView={4}\r\n                    freeMode={true}\r\n                    watchSlidesProgress={true}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {offerEntity.offerImages.map((offerImage: IOfferImages, index) => (\r\n                        <SwiperSlide key={offerImage.id}>\r\n                            <img src={getImageForOffer(offerEntity.id, offerImage.path)}/>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Card>\r\n        </Box>\r\n    ) : null;\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\n\r\n\r\nexport interface ReadMoreTextProps {\r\n    text: string\r\n    type?: 'plainText' | 'html'\r\n    readMoreText?: string\r\n    readLessText?: string\r\n    containerHeight?: string\r\n    onAction?: () => void\r\n    lines?: number\r\n}\r\n\r\n\r\nconst ReadMoreText: React.FC<ReadMoreTextProps> = (props) => {\r\n    const [isOverflowing, setIsOverflowing] = useState(false)\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const el = containerRef.current;\r\n        if (!el) return;\r\n\r\n        if (el.scrollHeight > el.clientHeight) {\r\n            setIsOverflowing(true);\r\n        }\r\n\r\n    }, [props.lines])\r\n\r\n\r\n    const toggleExpand = () => {\r\n        setExpanded(!expanded)\r\n    }\r\n\r\n    const formatText = (text: string) => text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\r\n\r\n    const {\r\n        type = 'plainText',\r\n        text = '',\r\n        readMoreText = 'More',\r\n        readLessText = 'Less',\r\n        onAction = toggleExpand\r\n    } = props\r\n\r\n    const _html = formatText(text);\r\n\r\n    return (\r\n        <span className=\"rm-container\">\r\n            <span ref={containerRef} className=\"rm-text-wrapper\">\r\n                {\r\n                    expanded ? _html : _html.substring(0, AllAppConfig.NBE_WORD_SHOW_MORE_LESS)\r\n                }\r\n\r\n            </span>\r\n            {\r\n                _html.length > AllAppConfig.NBE_WORD_SHOW_MORE_LESS ?\r\n                <span className=\"rm-action-button-container\">\r\n                    {\r\n                        !expanded ?\r\n                            <span className=\"rm-more-button\" onClick={onAction} >{readMoreText}</span> :\r\n                            <span className=\"rm-less-button\" onClick={toggleExpand}>{readLessText}</span>\r\n                    }\r\n                </span> : null\r\n            }\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default (ReadMoreText)","import React from 'react';\r\nimport List from '@mui/material/List/List';\r\nimport ListItem from '@mui/material/ListItem/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText/ListItemText';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Divider from '@mui/material/Divider/Divider';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Button from '@mui/material/Button/Button';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\n\r\nimport {useFormik} from 'formik';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport Dialog from '@mui/material/Dialog/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions/DialogActions';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport FlagIcon from '@mui/icons-material/Flag';\r\nimport {useEffect} from 'react';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {\r\n    initialValuesAddCommentOffer,\r\n    validationSchemaAddCommentOffer\r\n} from \"../validation/initial-values-add-comment-offer\";\r\nimport {defaultValue, ICommentOffer} from \"../../../../shared/model/comment-offer.model\";\r\nimport {getFullnameUser, getUserAvatar} from \"../../../../shared/utils/utils-functions\";\r\nimport {IOffer} from \"../../../../shared/model/offer.model\";\r\nimport {IUser} from \"../../../../shared/model/user.model\";\r\nimport {TransitionModal} from \"../../../../shared/pages/transition-modal\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {ConvertReactTimeAgo} from \"../../../../shared/pages/react-time-ago\";\r\nimport ReadMoreText from \"../../../../shared/components/read-more-text/ReadMoreText\";\r\n\r\nconst initialValues = initialValuesAddCommentOffer;\r\n\r\nexport default function CommentDetailsOffer({\r\n                                                offerEntity,\r\n                                                listCommentsByOffer,\r\n                                                account,\r\n                                                isAuthenticated,\r\n                                                loadingListComments,\r\n                                                loadingUpdateEntity,\r\n                                                loadingAddEntity,\r\n                                                parentCallbackAddComment,\r\n                                                parentCallbackDeleteComment,\r\n                                                parentCallbackUpdateComment,\r\n                                                parentCallbackReportComment,\r\n                                                parentCallbackLoadMoreComments,\r\n                                                totalItems\r\n                                            }: {\r\n    offerEntity: IOffer | undefined,\r\n    listCommentsByOffer: ReadonlyArray<ICommentOffer>,\r\n    account: IUser,\r\n    isAuthenticated: boolean,\r\n    loadingListComments: boolean,\r\n    loadingUpdateEntity: boolean,\r\n    loadingAddEntity: boolean,\r\n    parentCallbackAddComment: any,\r\n    parentCallbackDeleteComment: any,\r\n    parentCallbackUpdateComment: any,\r\n    parentCallbackReportComment: any,\r\n    parentCallbackLoadMoreComments: any,\r\n    totalItems: number\r\n}) {\r\n    const [commentDeleteId, setCommentDeleteId] = React.useState(-1);\r\n    const [commentUpdateId, setCommentUpdateId] = React.useState(-1);\r\n    const [showComments, setShowComments] = React.useState<boolean>(false);\r\n    const [openReportCommentOfferModal, setOpenReportCommentOfferModal] = React.useState(false);\r\n    const [commentReport, setCommentReport] = React.useState<ICommentOffer>(defaultValue);\r\n\r\n\r\n    const { t} = useTranslation();\r\n\r\n    const handleCallbackAddComment = (content: string) => {\r\n        parentCallbackAddComment(content);\r\n    };\r\n\r\n    const handleCallbackUpdateComment = (content: string, commentId: number) => {\r\n        parentCallbackUpdateComment(content, commentId);\r\n        setCommentUpdateId(-1);\r\n    };\r\n\r\n    const [openDeleteCommentModal, setDeleteCommentModal] = React.useState(false);\r\n    const handleClickOpenDeleteCommentModal = (cmtId: number) => {\r\n        setCommentDeleteId(cmtId);\r\n        setDeleteCommentModal(true);\r\n    };\r\n    const handleClickCancelDeleteCommentModal = () => {\r\n        setDeleteCommentModal(false);\r\n    };\r\n\r\n    const handleClickDeleteDeleteCommentModal = () => {\r\n        setDeleteCommentModal(false);\r\n        parentCallbackDeleteComment(commentDeleteId);\r\n    };\r\n\r\n    const setUpdateComment = (commentId: number) => {\r\n        setCommentUpdateId(commentId);\r\n    };\r\n\r\n    const parentCallbackCancelUpdateComment = () => {\r\n        setCommentUpdateId(-1);\r\n    };\r\n\r\n    const renderDialogDeleteComment = () => {\r\n        return (\r\n            <Dialog\r\n                open={openDeleteCommentModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleClickCancelDeleteCommentModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t('details_offer.title_dialog_delete_comment')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t('details_offer.description_dialog_delete_comment')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClickCancelDeleteCommentModal} color=\"neutral\">\r\n                        {t('common.label_cancel')}\r\n                    </Button>\r\n                    <Button onClick={handleClickDeleteDeleteCommentModal} color=\"error\">\r\n                        {t('common.label_delete')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const reportCommentOffer = (comment: ICommentOffer) => {\r\n        setCommentReport(comment);\r\n        setOpenReportCommentOfferModal(true);\r\n    }\r\n    const handleCloseReportCommentOfferModal = () => {\r\n        setOpenReportCommentOfferModal(false);\r\n    }\r\n    const handleAddReportCommentOfferModal = () => {\r\n        setOpenReportCommentOfferModal(false);\r\n        parentCallbackReportComment(commentReport);\r\n    }\r\n    const renderDialogReportCommentOffer = () => {\r\n        return (\r\n            <Dialog\r\n                open={openReportCommentOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseReportCommentOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t('details_offer.title_dialog_report_comment')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t('details_offer.description_dialog_report_comment')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseReportCommentOfferModal}>\r\n                        {t('common.label_cancel')}\r\n                    </Button>\r\n                    <Button color=\"success\" onClick={handleAddReportCommentOfferModal}>\r\n                        {t('common.label_report')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <List sx={{bgcolor: 'background.paper', mt: 2}}>\r\n                <Box>\r\n\r\n                    {\r\n                        totalItems > 0 ? <ListItem alignItems=\"flex-start\" button onClick={() => setShowComments(!showComments)}>\r\n                            <ListItemText>\r\n                                <Typography variant=\"subtitle1\" component=\"a\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                                    <u>\r\n                                        {\r\n                                            !showComments ? t('comment_offer.show_comment_details_offer') : t('comment_offer.hide_comment_details_offer')\r\n                                        }\r\n                                        ({totalItems})\r\n                                    </u>\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem> : null\r\n                    }\r\n\r\n                    {\r\n                        showComments ?\r\n                            <Box>\r\n                                {\r\n                                    listCommentsByOffer.map((comment: ICommentOffer, index: number) => (\r\n                                        <div key={`comment-${index}`}>\r\n                                            <ListItem\r\n                                                alignItems=\"flex-start\"\r\n                                                secondaryAction={\r\n                                                    <Box>\r\n                                                        {isAuthenticated && comment?.user?.id === account.id ? (\r\n                                                            <IconButton edge=\"end\" aria-label=\"edit\" color=\"success\"\r\n                                                                        onClick={() => setUpdateComment(comment.id || -1)}\r\n                                                                        sx={{mr: 0.5, display: 'block'}}>\r\n                                                                <ModeEditIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                        {isAuthenticated && (offerEntity?.user?.id === account.id || comment?.user?.id === account.id) ? (\r\n                                                            <IconButton\r\n                                                                edge=\"end\"\r\n                                                                aria-label=\"delete\"\r\n                                                                color=\"error\"\r\n                                                                onClick={() => handleClickOpenDeleteCommentModal(comment.id || -1)}\r\n                                                                sx={{display: 'block'}}>\r\n                                                                <DeleteIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                        {isAuthenticated && comment?.user?.id !== account.id ? (\r\n                                                            <IconButton edge=\"end\" aria-label=\"report\"\r\n                                                                        onClick={() => reportCommentOffer(comment)}\r\n                                                                        sx={{mr: 0.5, display: 'block'}}>\r\n                                                                <FlagIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                    </Box>\r\n                                                }\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar alt=\"Avatar\"\r\n                                                            src={getUserAvatar(comment.user?.id, comment.user?.imageUrl, comment.user?.sourceRegister)}\r\n                                                            sx={{border: '1px solid #b9b9b9'}}>{getFullnameUser(comment?.user)?.charAt(0)}</Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={getFullnameUser(comment?.user)}\r\n                                                    secondary={\r\n                                                        <React.Fragment>\r\n                                                            <Typography sx={{display: 'block'}} component=\"span\" variant=\"body2\"\r\n                                                                        color=\"text.primary\">\r\n                                                                <ConvertReactTimeAgo convertDate={comment.createdDate} />\r\n                                                            </Typography>\r\n                                                            {\r\n                                                                commentUpdateId !== comment.id ? <ReadMoreText\r\n                                                                    lines={2}\r\n                                                                    text={comment.content || ''}\r\n                                                                    readMoreText={t('details_offer.label_show_more')}\r\n                                                                    readLessText={t('details_offer.label_show_less')}/> : null\r\n                                                            }\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            {commentUpdateId === comment.id ? (\r\n                                                <Box sx={{mr: 2, ml: 9}}>\r\n                                                    <UpdateComment\r\n                                                        parentCallbackUpdateComment={(content: string) => handleCallbackUpdateComment(content, (comment.id || -1))}\r\n                                                        parentCallbackCancelUpdateComment={parentCallbackCancelUpdateComment}\r\n                                                        defaultValueUpdate={comment.content}\r\n                                                        loadingUpdateEntity={loadingUpdateEntity}\r\n                                                    />\r\n                                                </Box>\r\n                                            ) : null}\r\n                                            <Divider variant=\"inset\" component=\"li\"/>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n\r\n                                {\r\n                                    loadingListComments ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', m:2}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                        </Box> : null\r\n                                }\r\n\r\n                                {\r\n                                    totalItems>listCommentsByOffer.length ? <ListItem alignItems=\"center\" button onClick={() => parentCallbackLoadMoreComments()}>\r\n                                        <ListItemText>\r\n                                            <Typography variant=\"subtitle1\" component=\"h5\" color=\"text.secondary\" sx={{ mt: 1, textAlign: 'center' }}>\r\n                                                <u>\r\n                                                    {t('comment_offer.show_more_comment')}\r\n                                                </u>\r\n                                            </Typography>\r\n                                        </ListItemText>\r\n                                    </ListItem> : null\r\n                                }\r\n\r\n                            </Box> : null\r\n                    }\r\n\r\n                </Box>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt={account.imageUrl}\r\n                                src={getUserAvatar(account.id, account.imageUrl, account?.sourceRegister)}\r\n                                sx={{border: '1px solid #b9b9b9'}}>{getFullnameUser(account)?.charAt(0)}</Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText>\r\n                        <AddComment parentCallbackAddComment={handleCallbackAddComment}\r\n                                    loadingAddEntity={loadingAddEntity}/>\r\n                    </ListItemText>\r\n                </ListItem>\r\n            </List>\r\n            <div>{renderDialogDeleteComment()}</div>\r\n            <div>{renderDialogReportCommentOffer()}</div>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction AddComment({parentCallbackAddComment, loadingAddEntity}: { parentCallbackAddComment: any, loadingAddEntity: boolean }) {\r\n\r\n    const { t} = useTranslation();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddCommentOffer,\r\n        onSubmit: values => {\r\n            parentCallbackAddComment(values.content);\r\n            formik.setFieldValue('content', '');\r\n        },\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    id=\"content\"\r\n                    name=\"content\"\r\n                    label={t('comment_offer.label_add_comment')}\r\n                    value={formik.values.content}\r\n                    onChange={formik.handleChange}\r\n                    multiline\r\n                    fullWidth\r\n                    maxRows={4}\r\n                />\r\n                <LoadingButton\r\n                    loading={loadingAddEntity}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    disabled={!formik.values.content}\r\n                    sx={{my: 1}}\r\n                    color=\"neutral\"\r\n                >\r\n                    {t('comment_offer.label_comment')}\r\n                </LoadingButton>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction UpdateComment({parentCallbackUpdateComment, parentCallbackCancelUpdateComment, defaultValueUpdate, loadingUpdateEntity}:\r\n                           { parentCallbackUpdateComment: any, parentCallbackCancelUpdateComment: any, defaultValueUpdate: any, loadingUpdateEntity: boolean }) {\r\n\r\n    const [valueBeforCancelUpdate] = React.useState(defaultValueUpdate);\r\n\r\n    const { t} = useTranslation();\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddCommentOffer,\r\n        onSubmit: values => {\r\n            parentCallbackUpdateComment(values.content);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        formik.setFieldValue('content', defaultValueUpdate);\r\n    }, []);\r\n\r\n    const cancelUpdate = () => {\r\n        parentCallbackCancelUpdateComment(valueBeforCancelUpdate);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    id=\"content\"\r\n                    name=\"content\"\r\n                    label=\"Add comment\"\r\n                    value={formik.values.content}\r\n                    onChange={formik.handleChange}\r\n                    multiline\r\n                    fullWidth\r\n                    maxRows={4}\r\n                />\r\n                <Box sx={{my: 1}}>\r\n                    <LoadingButton\r\n                        loading={false}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"button\"\r\n                        sx={{mr: 1}}\r\n                        color=\"neutral\"\r\n                        onClick={cancelUpdate}\r\n                    >\r\n                        {t('common.label_cancel')}\r\n                    </LoadingButton>\r\n                    <LoadingButton\r\n                        loading={loadingUpdateEntity}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"submit\"\r\n                        disabled={!formik.values.content}\r\n                        color=\"success\"\r\n                    >\r\n                        {t('common.label_update')}\r\n                    </LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {checkMobileDesktopBrowser} from \"../../utils/utils-functions\";\r\nimport FacebookShareButton from \"react-share/lib/FacebookShareButton\";\r\nimport {SourceProvider} from \"../../enums/source-provider\";\r\nimport IconButton from \"@mui/material/IconButton/IconButton\";\r\n\r\nclass CustomShare extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            shareData: {\r\n                title: 'MDN',\r\n                text: 'Learn web development on MDN!',\r\n                url: 'https://developer.mozilla.org'\r\n            }\r\n        }\r\n        this.handleShare = this.handleShare.bind(this);\r\n    }\r\n\r\n    handleShare(){\r\n        navigator.share(this.state.shareData).then((result) => {});\r\n    }\r\n\r\n    render() {\r\n        return checkMobileDesktopBrowser()===SourceProvider.MOBILE_BROWSER ?\r\n            <IconButton onClick={this.handleShare}>\r\n                {this.props.children}\r\n            </IconButton>\r\n            :\r\n            <FacebookShareButton\r\n                url={this.props.url}\r\n                quote=\"quote\" >\r\n                {this.props.children}\r\n            </FacebookShareButton>\r\n    }\r\n}\r\n\r\nexport default CustomShare;","import React from 'react';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport CardActions from '@mui/material/CardActions/CardActions';\r\nimport Button from '@mui/material/Button/Button';\r\nimport CardHeader from '@mui/material/CardHeader/CardHeader';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport EmailIcon from '@mui/icons-material/EmailOutlined';\r\nimport MessageIcon from '@mui/icons-material/MessageOutlined';\r\nimport Box from '@mui/material/Box/Box';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport DialogActions from '@mui/material/DialogActions/DialogActions';\r\nimport Dialog from '@mui/material/Dialog/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText/DialogContentText';\r\nimport {IOffer} from \"../../../../shared/model/offer.model\";\r\nimport {IUser} from \"../../../../shared/model/user.model\";\r\nimport {\r\n    convertDateTimeToServer,\r\n    getBaseImageUrl,\r\n    getFullnameUser,\r\n    getUserAvatar\r\n} from \"../../../../shared/utils/utils-functions\";\r\nimport {ALL_APP_ROUTES} from \"../../../../core/config/all-app-routes\";\r\nimport ListItemButton from \"@mui/material/ListItemButton/ListItemButton\";\r\nimport {TransitionModal} from \"../../../../shared/pages/transition-modal\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    initialValuesAddMessageDetailsOffer,\r\n    validationSchemaAddMessageDetailsOffer\r\n} from \"../validation/initial-values-add-comment-offer\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport CustomShare from \"../../../../shared/components/custom-share/CustomShare\";\r\nimport Snackbar from \"@mui/material/Snackbar/Snackbar\";\r\nimport ProblemeDeclaration from \"../../../probleme-declaration/ProblemeDeclaration\";\r\nimport {StyledBadge} from \"../../../../shared/pages/styled-badge\";\r\n\r\n\r\n\r\n\r\nconst initialValues = initialValuesAddMessageDetailsOffer;\r\n\r\nexport default function RightDetailsOffer({offerEntity, parentCallback, currentUser, isAuthenticated, myFavoriteUser, createConversationCallback, addSuccessConversation, isOnLine}:\r\n                                              {\r\n                                                  offerEntity: IOffer | undefined,\r\n                                                  parentCallback: any,\r\n                                                  currentUser: IUser,\r\n                                                  isAuthenticated: boolean,\r\n                                                  myFavoriteUser: boolean,\r\n                                                  createConversationCallback: any,\r\n                                                  addSuccessConversation: boolean,\r\n                                                  isOnLine: any\r\n                                              }) {\r\n\r\n    const [defaultValues, setDefaultValues] = React.useState<any>();\r\n    const [messageAlert, setMessageAlert] = React.useState('');\r\n    const [openAlert, setOpenAlert] = React.useState(false);\r\n    const [contactWithPhone, setContactWithPhone] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddMessageDetailsOffer,\r\n        onSubmit: values => {\r\n            if (currentUser.id !== offerEntity?.user?.id && isAuthenticated) {\r\n                setDefaultValues(values);\r\n                sendMessage(values.content);\r\n            }\r\n        },\r\n    });\r\n\r\n    const setResetValues = () => {\r\n        formik.setFieldValue('fullName', getFullnameUser(currentUser));\r\n        formik.setFieldValue('email', currentUser.email);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if( !isEmpty(currentUser)) {\r\n            setResetValues();\r\n        }\r\n    }, [currentUser])\r\n\r\n    React.useEffect(() =>{\r\n        if(addSuccessConversation){\r\n            formik.resetForm();\r\n            setResetValues();\r\n        }\r\n    }, [addSuccessConversation])\r\n\r\n    const sendMessage = (content: string) => {\r\n        const entity = {\r\n            content: content,\r\n            conversation: {\r\n                dateCreated: convertDateTimeToServer(new Date()),\r\n                senderUser: null,\r\n                receiverUser: {\r\n                    id: offerEntity?.user?.id,\r\n                    email: offerEntity?.user?.email,\r\n                },\r\n            },\r\n        };\r\n        createConversationCallback(entity);\r\n    };\r\n\r\n    const [openFavoriteModal, setOpenFavoriteModal] = React.useState(false);\r\n    const handleClickOpenFavoriteModal = (event: any) => {\r\n        event.stopPropagation();\r\n        if (!myFavoriteUser) {\r\n            setOpenFavoriteModal(true);\r\n        }\r\n    };\r\n    const handleCloseFavoriteModal = () => {\r\n        setOpenFavoriteModal(false);\r\n    };\r\n\r\n    const handleAddFavoriteModal = () => {\r\n        setOpenFavoriteModal(false);\r\n        parentCallback(offerEntity?.user?.id);\r\n    };\r\n\r\n    const handleExpandClick = () => {\r\n    };\r\n\r\n    const redirectToPorfile = (userId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.PROFILE + '/' + userId);\r\n        }, 300);\r\n    };\r\n\r\n    const getFavoriteUserColor = () => {\r\n        if (myFavoriteUser) {\r\n            return 'red';\r\n        }\r\n        return 'color: rgba(0, 0, 0, 0.54)';\r\n    };\r\n\r\n    const renderDialogFavoriteUser = () => {\r\n        return (\r\n            <Dialog\r\n                open={openFavoriteModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseFavoriteModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t('details_offer.title_add_favrite_user')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t('details_offer.description_add_favrite_user')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseFavoriteModal} color=\"neutral\">\r\n                        {t('common.label_cancel')}\r\n                    </Button>\r\n                    <Button onClick={handleAddFavoriteModal} color=\"success\">\r\n                        {t('common.label_favorite')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const openPositionInGoogleMap = () => {\r\n        console.log('offerEntity ', offerEntity);\r\n        if(!offerEntity?.address){\r\n            setMessageAlert(t('details_offer.not_address_found_itenarary'));\r\n            setOpenAlert(true);\r\n        }\r\n        else{\r\n            window.open('https://www.google.com/maps/@35.8235978,10.6309176,15z', '_new');\r\n        }\r\n\r\n    }\r\n\r\n    const openItenraireGoogleMap = () => {\r\n        console.log('offerEntity ', offerEntity);\r\n        if(!offerEntity?.address){\r\n            setMessageAlert(t('details_offer.not_address_found_itenarary'));\r\n            setOpenAlert(true);\r\n        }\r\n        else if(!currentUser?.address){\r\n            setMessageAlert(t('details_offer.miss_address_account'));\r\n            setOpenAlert(true);\r\n        }\r\n        else{\r\n            window.open('https://www.google.com/maps/dir/'+currentUser?.address?.lng+','+currentUser?.address?.lng+'/'+offerEntity?.address?.lng+','+offerEntity?.address?.lng+'', '_new');\r\n        }\r\n\r\n    }\r\n\r\n    const handleCloseAlert = () => {\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    const contactWithFacebookcontactWithFacebook = () => {\r\n        if(!offerEntity?.user?.linkProfileFacebook){\r\n            setMessageAlert(t('details_offer.message_not_link_profile_facebook_exist'));\r\n            setOpenAlert(true);\r\n        }else{\r\n            window.open(offerEntity?.user?.linkProfileFacebook, '_new');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} sm={12}>\r\n            <Card>\r\n                <Typography paragraph sx={{m: 2}}>\r\n                    {t('details_offer.about_seller')}\r\n                </Typography>\r\n                <ListItemButton  onClick={() => redirectToPorfile(offerEntity?.user?.id)} sx={{display: 'block'}}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            offerEntity ? (\r\n                                    <StyledBadge\r\n                                        overlap=\"circular\"\r\n                                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                        variant=\"dot\"\r\n                                        color={isOnLine(offerEntity.user?.email) ? 'success' : 'error'}>\r\n                                            <Avatar\r\n                                                aria-label=\"recipe\"\r\n                                                alt={offerEntity.user?.imageUrl}\r\n                                                src={getUserAvatar(offerEntity.user?.id, offerEntity.user?.imageUrl, offerEntity.user?.sourceRegister)}\r\n                                                sx={{border: '1px solid #b9b9b9'}}\r\n                                            >{getFullnameUser(offerEntity?.user)?.charAt(0)}</Avatar>\r\n                                    </StyledBadge>\r\n                            ) : null\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\"\r\n                                        sx={{color: getFavoriteUserColor()}}\r\n                                        onClick={(event: any) => handleClickOpenFavoriteModal(event)}\r\n                                        disabled={offerEntity?.user?.id === currentUser?.id}>\r\n                                <FavoriteIcon/>\r\n                            </IconButton>\r\n                        }\r\n                        title={\r\n                            <React.Fragment>\r\n                                {getFullnameUser(offerEntity?.user)}\r\n                            </React.Fragment>\r\n                        }\r\n                        subheader={offerEntity?.user?.email}\r\n                        onClick={() => redirectToPorfile(offerEntity?.user?.id)}\r\n                        role=\"button\"\r\n                    />\r\n                </ListItemButton >\r\n\r\n                {offerEntity?.user?.address ? (\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {offerEntity?.user?.address.city}, {offerEntity?.user?.address.country}\r\n                        </Typography>\r\n                    </CardContent>\r\n                ) : null}\r\n\r\n                <CardActions disableSpacing sx={{backgroundColor: 'rgba(0, 0, 0, 0.74);'}}>\r\n                    <IconButton\r\n                        aria-label=\"add to favorites\"\r\n                        sx={{color: getFavoriteUserColor()}}\r\n                        onClick={handleClickOpenFavoriteModal}\r\n                        disabled={offerEntity?.user?.id === currentUser?.id}\r\n                    >\r\n                        <FavoriteIcon/>\r\n                    </IconButton>\r\n\r\n                    <CustomShare url=\"https://github.com/nygardk/react-share/blob/master/demo/Demo.tsx\">\r\n                        <Box sx={{color: '#fff'}}>\r\n                            <ShareIcon/>\r\n                        </Box>\r\n                    </CustomShare>\r\n\r\n                    <IconButton sx={{marginLeft: 'auto', color: '#fff'}} onClick={handleExpandClick}>\r\n                        <ExpandMoreIcon/>\r\n                    </IconButton>\r\n                </CardActions>\r\n\r\n                <Grid container item sx={{mt: 3}}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Box sx={{'& > :not(style)': {m: 1}}}>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <Typography paragraph className=\"text-center\">\r\n                                    {t('details_offer.send_message')}\r\n                                </Typography>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <AccountCircle sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"fullName\"\r\n                                               name=\"fullName\"\r\n                                               label={t('common.label_name')}\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               disabled={!(formik.touched.fullName && Boolean(formik.errors.fullName))}\r\n                                               value={formik.values.fullName}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.fullName && Boolean(formik.errors.fullName)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end', my: 2}}>\r\n                                    <EmailIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"email\"\r\n                                               name=\"email\"\r\n                                               label={t('common.label_email')}\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               disabled={!(formik.touched.email && Boolean(formik.errors.email))}\r\n                                               value={formik.values.email}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.email && Boolean(formik.errors.email)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <MessageIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"content\"\r\n                                               name=\"content\"\r\n                                               label=\"Message\"\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               multiline\r\n                                               rows={4}\r\n                                               value={formik.values.content}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.content && Boolean(formik.errors.content)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <Button variant=\"outlined\" size=\"small\" fullWidth sx={{mt: 2, mb: 2}}\r\n                                            color=\"neutral\"\r\n                                            type=\"submit\"\r\n                                            disabled={currentUser.id === offerEntity?.user?.id}>\r\n                                        {t('common.label_send')}\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} sx={{p: 2, borderLeft: '1px solid #cfcbcb;'}}>\r\n                        <Typography paragraph className=\"text-center\">\r\n                            {t('details_offer.contact_with')}\r\n                        </Typography>\r\n\r\n                        <Button variant=\"outlined\" startIcon={<FacebookIcon/>} fullWidth sx={{mt: 3}} onClick={() => contactWithFacebookcontactWithFacebook()}>\r\n                            Facebook\r\n                        </Button>\r\n\r\n                        <Button variant=\"outlined\" startIcon={<PhoneIcon/>} fullWidth sx={{mt: 3}} onClick={() => setContactWithPhone(!contactWithPhone)}>\r\n                            {contactWithPhone ? offerEntity?.user?.phone : t('details_offer.show_number')}\r\n                        </Button>\r\n\r\n                        <a href={`mailto:${offerEntity?.user?.email}`} style={{textDecoration: 'none'}}>\r\n                            <Button variant=\"outlined\" startIcon={<EmailIcon/>} fullWidth sx={{mt: 3}}>\r\n                                {t('details_offer.send_email')}\r\n                            </Button>\r\n                        </a>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n\r\n            <Grid container item spacing={2} sx={{mt: 1}}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card onClick={openPositionInGoogleMap}>\r\n                        <CardContent>\r\n                            <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                Découvrir le quartier\r\n                            </Typography>\r\n                            <div style={{maxHeight: 400, marginTop: 30}}>\r\n                                <img\r\n                                    className=\"img-fluid\"\r\n                                    src={getBaseImageUrl('/assets/images/offer/details-offer/desktop-map-neighbourhood.ext.svg')}\r\n                                    alt=\"desktop-map-neighbourhood\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card onClick={openItenraireGoogleMap}>\r\n                        <CardContent>\r\n                            <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                Découvrir le quartier\r\n                            </Typography>\r\n                            <div style={{maxHeight: 400, marginTop: 30}}>\r\n                                <img\r\n                                    className=\"img-fluid\"\r\n                                    src={getBaseImageUrl('/assets/images/offer/details-offer/desktop-time-of-travel-address.ext.svg')}\r\n                                    alt=\"desktop-time-of-travel-address\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item spacing={2} sx={{mt: 1}}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ProblemeDeclaration />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <div>{renderDialogFavoriteUser()}</div>\r\n            <div>\r\n                <Snackbar\r\n                    open={openAlert}\r\n                    autoHideDuration={5000}\r\n                    onClose={handleCloseAlert}\r\n                    message={messageAlert}\r\n                />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Divider from \"@mui/material/Divider/Divider\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {getBaseImageUrl} from \"../../../../shared/utils/utils-functions\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton/LoadingButton\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {InputQuantity} from \"../../../../shared/components/input-quantity/InputQuantity\";\r\n\r\nexport default function CartSellDetailsOffer({parentCallbackAddCart, loadingAddCart}:\r\n    {parentCallbackAddCart: Function, loadingAddCart: boolean}) {\r\n    const [value, setValue] = React.useState<string>('1');\r\n    const [valueQuantity, setValueQuantity] = React.useState<number>(1);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const changeQuantity = (data: any) => {\r\n        console.log('data ', data);\r\n        setValueQuantity(data);\r\n    }\r\n\r\n    const addNewCart = () => {\r\n        console.log('valueQuantity ', valueQuantity);\r\n        parentCallbackAddCart({\r\n            quantity: valueQuantity\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', typography: 'body1', my: 3 }}>\r\n            <TabContext value={value}>\r\n                <TabPanel value=\"1\">\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                                <InfoOutlinedIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                En Stock\r\n                            </Typography>\r\n                            <Box sx={{my: 2}}>\r\n                                <InputQuantity parentCallChangeQuantity={changeQuantity} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item  xs={12} md={6}>\r\n                            <List sx={{ }}>\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Remy Sharp\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/creditcard.svg')} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Paiement facile\"\r\n                                        secondary=\"Payer vos articles commandés au comptant lors de la livraison\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Travis Howard\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/local-shipping.svg')}/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Politique de livraison\"\r\n                                        secondary=\"Remise de 5% à partir de 50dt d'achats sur les produits mazroub exclusive\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Cindy Baker\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/loop.svg')}/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Politique de retours\"\r\n                                        secondary=\"Remboursement entre 3 et 12 jours à partir la date de réception de votre retour\"\r\n                                    />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{  my: 2 }} display=\"flex\" justifyContent=\"center\">\r\n                        <LoadingButton loading={loadingAddCart} fullWidth\r\n                                       variant=\"contained\"\r\n                                       color=\"success\"\r\n                                       onClick={addNewCart}>\r\n                            {t('common.label_add')}\r\n                        </LoadingButton>\r\n                    </Box>\r\n                </TabPanel>\r\n                <TabPanel value=\"2\">Acheter directement</TabPanel>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <TabList onChange={handleChange} aria-label=\"lab API tabs example\" centered>\r\n                        <Tab label=\"Ajouter au panier\" value=\"1\" />\r\n                        <Tab label=\"Acheter directement\" value=\"2\" />\r\n                    </TabList>\r\n                </Box>\r\n            </TabContext>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {\r\n    addCommentOffer,\r\n    getEntitiesByOffer as getListCommentsByOffer\r\n} from \"../../../shared/reducers/comment-offer.reducer\";\r\n\r\nimport {getEntitywithFavorite} from \"../../../shared/reducers/offer.reducer\";\r\nimport { reset as resetAllFavoriteOfferUser } from '../../../shared/reducers/offer.reducer';\r\nimport { reset as resetCommentOffer } from '../../../shared/reducers/comment-offer.reducer';\r\nimport {useParams} from \"react-router\";\r\nimport Zoom from \"@mui/material/Zoom/Zoom\";\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress/CircularProgress\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport Card from \"@mui/material/Card/Card\";\r\nimport CardContent from \"@mui/material/CardContent/CardContent\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddLocation from '@mui/icons-material/AddLocation';\r\nimport EmojiObjectsIcon from '@mui/icons-material/EmojiObjects';\r\nimport CardActions from \"@mui/material/CardActions/CardActions\";\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport FlagIcon from '@mui/icons-material/Flag';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport SwiperDetailsOffer from \"./ui-segments/SwiperDetailsOffer\";\r\nimport CommentDetailsOffer from \"./ui-segments/CommentDetailsOffer\";\r\nimport RightDetailsOffer from './ui-segments/RightDetailsOffer';\r\nimport {ICommentOffer} from \"../../../shared/model/comment-offer.model\";\r\nimport { createEntity as createEntityFavoriteUser } from '../../../shared/reducers/favorite-user.reducer';\r\nimport { updateEntity as updateComment } from '../../../shared/reducers/comment-offer.reducer';\r\nimport { deleteEntity as deleteComment } from '../../../shared/reducers/comment-offer.reducer';\r\nimport { createEntity as reportComment } from '../../../shared/reducers/report-comment-offer.reducer';\r\nimport { createEntity as createEntityReportOffer } from '../../../shared/reducers/report-offer.reducer';\r\nimport { createEntity as addCart } from '../../../shared/reducers/cart.reducer';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\n\r\nimport './DetailsOffer.scss';\r\nimport {convertDateTimeToServer} from \"../../../shared/utils/utils-functions\";\r\nimport Dialog from \"@mui/material/Dialog/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions/DialogActions\";\r\nimport {TransitionModal} from \"../../../shared/pages/transition-modal\";\r\nimport {IReportOffer} from \"../../../shared/model/report-offer.model\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {addEventGA, AllModulesEventGA} from \"../../../shared/providers/google-anaylitics\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {createConversation} from \"../../../shared/reducers/conversation.reducer\";\r\nimport {IConversationContent} from \"../../../shared/model/conversation-content\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary/AccordionSummary\";\r\nimport Accordion from \"@mui/material/Accordion/Accordion\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport CustomShare from \"../../../shared/components/custom-share/CustomShare\";\r\nimport i18n from \"i18next\";\r\nimport CartSellDetailsOffer from \"./ui-segments/CartSellDetailsOffer\";\r\nimport Tooltip from \"@mui/material/Tooltip/Tooltip\";\r\nimport {ICart} from \"../../../shared/model/cart.model\";\r\nimport {OfferTypeContact} from \"../../../shared/enums/offer-type-contact.enum\";\r\nimport Alert from '@mui/material/Alert';\r\n\r\nexport interface IDetailsOfferProps extends StateProps, DispatchProps{}\r\n\r\nexport const DetailsOffer = (props: IDetailsOfferProps) => {\r\n    const [startAnimation, setStartAnimation] = React.useState(false);\r\n    const [isFavoriteUser, setIsFavoriteUser] = React.useState(false);\r\n    const [openReportOfferModal, setOpenReportOfferModal] = React.useState(false);\r\n    const [activeCommentPage, setActiveCommentPage] = React.useState(-1);\r\n    const [expandedDetailsOffer, setExpandedDetailsOffer] = React.useState<boolean>(true);\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        resetAllFavoriteOfferUser,\r\n        resetCommentOffer,\r\n        getEntitywithFavorite,\r\n        updateComment,\r\n        favoriteUserOffer,\r\n        loadingEntityFavoriteUserOffer,\r\n        isAuthenticated,\r\n        getListCommentsByOffer,\r\n        loadingCommentsByOffer,\r\n        listCommentsByOffer,\r\n        account,\r\n        loadingUpdateEntity,\r\n        addSuccessComment,\r\n        updateSuccessComment,\r\n\r\n        addSuccessFavoriteUser,\r\n        createEntityFavoriteUser,\r\n        loadingAddComment,\r\n        totalItemsCommentsByOffer,\r\n        deleteSuccessComment,\r\n        deleteComment\r\n    } = props;\r\n\r\n    React.useEffect(() => {\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n\r\n        resetAllFavoriteOfferUser();\r\n        resetCommentOffer();\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        if(!favoriteUserOffer?.offer?.id && id){\r\n            getEntitywithFavorite(id);\r\n            setActiveCommentPage(0);\r\n        }\r\n    }, [favoriteUserOffer])\r\n\r\n    React.useEffect(() => {\r\n        if(activeCommentPage>=0){\r\n            if(isAuthenticated){\r\n                getListCommentsByOffer(Number(id), activeCommentPage, AllAppConfig.COMMENTS_PER_PAGE, '');\r\n            }\r\n        }\r\n    }, [activeCommentPage])\r\n\r\n    React.useEffect(() => {\r\n        if (favoriteUserOffer && favoriteUserOffer.offer && !loadingEntityFavoriteUserOffer) {\r\n            setIsFavoriteUser(favoriteUserOffer.myFavoriteUser || false);\r\n            setTimeout(() => {\r\n                setStartAnimation(true);\r\n            }, 300)\r\n        }\r\n    }, [favoriteUserOffer]);\r\n\r\n    React.useEffect(() => {\r\n        if(addSuccessComment || updateSuccessComment || deleteSuccessComment){\r\n            resetCommentOffer();\r\n            const idOffer = favoriteUserOffer?.offer?.id || -1;\r\n            getListCommentsByOffer(idOffer, 0, 20, '');\r\n        }\r\n    }, [addSuccessComment, updateSuccessComment, deleteSuccessComment])\r\n\r\n    React.useEffect(() => {\r\n        if(addSuccessFavoriteUser){\r\n            setIsFavoriteUser(true);\r\n        }\r\n    }, [addSuccessFavoriteUser])\r\n\r\n    const handleCallbackAddComment = (content: string) => {\r\n        if (content) {\r\n            const entity: ICommentOffer = {\r\n                createdDate: convertDateTimeToServer(new Date()),\r\n                content: content,\r\n                offer: {\r\n                    id: favoriteUserOffer?.offer?.id,\r\n                    user: {\r\n                        id: favoriteUserOffer?.offer?.user?.id,\r\n                        email: favoriteUserOffer?.offer?.user?.email,\r\n                    },\r\n                },\r\n                user: {},\r\n            };\r\n            props.addCommentOffer(entity);\r\n\r\n            // Add event GA\r\n            addEventGA(AllModulesEventGA.EventOffer.AddCommentOffer.eventName,\r\n                AllModulesEventGA.EventOffer.AddCommentOffer.eventCategory,\r\n                AllModulesEventGA.EventOffer.AddCommentOffer.eventLabel);\r\n        }\r\n    }\r\n\r\n    const handleCallbackDeleteComment = (commentId: number) => {\r\n        deleteComment(commentId);\r\n    }\r\n\r\n    const parentCallbackUpdateComment = (content: string, commentid: number) => {\r\n        let commentUpdate = listCommentsByOffer.find(comment => comment.id === commentid);\r\n        commentUpdate = {\r\n            ...commentUpdate,\r\n            content: content\r\n        }\r\n        updateComment(commentUpdate);\r\n\r\n        // Add event GA\r\n        addEventGA(AllModulesEventGA.EventOffer.UpdateCommentOffer.eventName,\r\n            AllModulesEventGA.EventOffer.UpdateCommentOffer.eventCategory,\r\n            AllModulesEventGA.EventOffer.UpdateCommentOffer.eventLabel);\r\n    };\r\n\r\n    const handleCallbackFavorite = (userId: number) => {\r\n        if (isAuthenticated) {\r\n            if (favoriteUserOffer?.offer?.user?.id !== account?.id) {\r\n                const entity = {\r\n                    favoriteUser: {\r\n                        id: favoriteUserOffer?.offer?.user?.id,\r\n                        username: favoriteUserOffer?.offer?.user?.username,\r\n                    },\r\n                    favoriteDate: convertDateTimeToServer(new Date()),\r\n                };\r\n                createEntityFavoriteUser(entity);\r\n            }\r\n        } else {\r\n            navigate(ALL_APP_ROUTES.LOGIN);\r\n        }\r\n    };\r\n\r\n    const createConversation = (conversation: IConversationContent) => {\r\n        props.createConversation(conversation);\r\n    }\r\n\r\n    const parentCallbackReportComment = (comment: ICommentOffer) => {\r\n        const entity = {\r\n            commentOffer: comment,\r\n            user: {}\r\n        }\r\n        props.reportComment(entity);\r\n    }\r\n\r\n    const parentCallbackLoadMoreComments = () => {\r\n        setActiveCommentPage(activeCommentPage+1);\r\n    }\r\n\r\n    const reportOffer = () => {\r\n        setOpenReportOfferModal(true);\r\n    }\r\n    const handleCloseReportOfferModal = () => {\r\n        setOpenReportOfferModal(false);\r\n    }\r\n    const handleAddReportOfferModal = () => {\r\n        setOpenReportOfferModal(false);\r\n        const entity: IReportOffer = {\r\n            offer: favoriteUserOffer?.offer,\r\n            user: {}\r\n        }\r\n        props.createEntityReportOffer(entity);\r\n    }\r\n    const renderDialogReportOffer = () => {\r\n        return (\r\n            <Dialog\r\n                open={openReportOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseReportOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\" >\r\n                <DialogTitle>\r\n                    {t('details_offer.title_dialog_report_offer')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t('details_offer.description_dialog_report_offer')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseReportOfferModal} color=\"neutral\">\r\n                        {t('common.label_cancel')}\r\n                    </Button>\r\n                    <Button color=\"success\" onClick={handleAddReportOfferModal}>\r\n                        {t('common.label_report')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const handleChangeDetailsOffer = () => {\r\n        setExpandedDetailsOffer(!expandedDetailsOffer);\r\n    }\r\n\r\n    const getNameCategory = (): string => {\r\n        if( defaultLanguage==='en' ){\r\n            return favoriteUserOffer?.offer?.category?.titleEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return favoriteUserOffer?.offer?.category?.titleFr || '';\r\n        }\r\n        return favoriteUserOffer?.offer?.category?.titleAr || '';\r\n    }\r\n\r\n    const isOnLine = (email: string) => {\r\n        return props.listConnectedUsers.findIndex(item => item.principal.email==email) >=0;\r\n    }\r\n\r\n    const addCart = (cart: ICart) => {\r\n        if( isAuthenticated){\r\n            const entity: ICart = {\r\n                quantity: cart.quantity,\r\n                sellOffer: {\r\n                    id: favoriteUserOffer?.offer?.id\r\n                }\r\n            }\r\n            console.log('entity ', entity);\r\n            props.addCart(entity);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n\r\n            {\r\n                loadingEntityFavoriteUserOffer ?\r\n                    <Box sx={{ paddingTop: 10, textAlign: 'center' }}>\r\n                        <CircularProgress color=\"inherit\"  />\r\n                    </Box> : null\r\n            }\r\n            {/*<Zoom in={startAnimation}>*/}\r\n                <Container maxWidth=\"xl\" className=\"details-offer-client\">\r\n                    <Grid\r\n                        container\r\n                        style={{\r\n                            paddingTop: 10,\r\n                        }} >\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                                    SRF\r\n                                </Link>\r\n                                <Link color=\"inherit\" to={ALL_APP_ROUTES.SEARCH}>\r\n                                    {t('common.label_search')}\r\n                                </Link>\r\n                                <Typography color=\"text.primary\">{favoriteUserOffer?.offer?.title}</Typography>\r\n                            </Breadcrumbs>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {\r\n                        loadingEntityFavoriteUserOffer ?\r\n                            null :\r\n                            <Grid\r\n                                container\r\n                                style={{\r\n                                    paddingTop: 50,\r\n                                }}\r\n                            >\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <SwiperDetailsOffer {...favoriteUserOffer?.offer} />\r\n                                    <Zoom in={startAnimation}>\r\n                                        <Card sx={{mb: 3}}>\r\n                                            <CardContent>\r\n                                                {favoriteUserOffer?.offer?.amount ? (\r\n                                                    <Typography variant=\"h4\" sx={{ textAlign: 'center', fontWeight: 600 }}  className=\"red-color\">\r\n                                                        $ {favoriteUserOffer?.offer?.amount} DT\r\n                                                    </Typography>\r\n                                                ) : null}\r\n\r\n                                                <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                                                    <InfoOutlinedIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                    {favoriteUserOffer?.offer?.typeOffer === TypeOfferEnum.Sell ? (\r\n                                                        t('common.for_sell')\r\n                                                    ) : favoriteUserOffer?.offer?.typeOffer === TypeOfferEnum.Rent ? (\r\n                                                        t('common.for_rent')\r\n                                                    ) : favoriteUserOffer?.offer?.typeOffer === TypeOfferEnum.Find ? (\r\n                                                        t('common.for_find')\r\n                                                    ) : null}\r\n                                                </Typography>\r\n\r\n                                                {favoriteUserOffer?.offer?.startDate && favoriteUserOffer?.offer?.endDate ? (\r\n                                                    <Box>\r\n                                                        <Typography color=\"text.secondary\" gutterBottom>\r\n                                                            {t('common.label_start_date')}:&nbsp;<strong><ConvertReactTimeAgo convertDate={favoriteUserOffer?.offer?.startDate} /></strong>\r\n                                                        </Typography>\r\n                                                        <Typography color=\"text.secondary\" gutterBottom display=\"flex\">\r\n                                                            {t('common.label_end_date')}:&nbsp;<strong><ConvertReactTimeAgo convertDate={favoriteUserOffer?.offer?.endDate} /></strong>\r\n                                                        </Typography>\r\n                                                    </Box>\r\n                                                ) : null}\r\n\r\n                                                {\r\n                                                    favoriteUserOffer?.offer?.typePeriodRent ? <Typography color=\"text.secondary\" gutterBottom display=\"flex\">\r\n                                                        {t('common.label_period')}:&nbsp;\r\n                                                        <strong>{t('common.type_periode_rent_'+favoriteUserOffer?.offer?.typePeriodRent)}&nbsp;</strong>\r\n                                                    </Typography> : null\r\n                                                }\r\n\r\n\r\n                                                <Typography variant=\"h5\" component=\"div\" sx={{ mt: 2 }}>\r\n                                                    {favoriteUserOffer?.offer?.title}\r\n                                                </Typography>\r\n\r\n                                                <Typography sx={{ fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                    <AccessTimeIcon fontSize=\"small\" sx={{mr: 0.9}}/> <ConvertReactTimeAgo convertDate={favoriteUserOffer?.offer?.dateCreated} />\r\n                                                </Typography>\r\n                                                {\r\n                                                    favoriteUserOffer?.offer?.address ?\r\n                                                        <Typography sx={{ mb: 1.8, fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                            <AddLocation fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                            {favoriteUserOffer?.offer?.address?.city}, {favoriteUserOffer?.offer?.address?.country}\r\n                                                        </Typography> : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    favoriteUserOffer?.offer?.category ?\r\n                                                        <Typography sx={{ mb: 1.8, fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                            <EmojiObjectsIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                            {t('details_offer.label_category')} {getNameCategory()}\r\n                                                        </Typography> : null\r\n                                                }\r\n\r\n                                                <Accordion sx={{mt: '40px !important'}} elevation={0} expanded={expandedDetailsOffer} onChange={handleChangeDetailsOffer}>\r\n                                                    <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon sx={{backgroundColor: 'yellow', borderRadius: '50%'}}/>}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        className=\"bg-brown\">\r\n                                                        {t('details_offer.label_details_offer')}\r\n                                                    </AccordionSummary>\r\n                                                    <AccordionDetails>\r\n                                                        <div dangerouslySetInnerHTML={{ __html: favoriteUserOffer?.offer?.description || '' }}></div>\r\n                                                    </AccordionDetails>\r\n                                                </Accordion>\r\n\r\n                                            </CardContent>\r\n                                            <CardActions disableSpacing>\r\n\r\n                                                <CustomShare url=\"https://github.com/nygardk/react-share/blob/master/demo/Demo.tsx\">\r\n                                                    <Tooltip title={\r\n                                                        <React.Fragment>\r\n                                                            {t('common.label_share')}\r\n                                                        </React.Fragment>\r\n                                                    }>\r\n                                                        <ShareIcon/>\r\n                                                    </Tooltip>\r\n                                                </CustomShare>\r\n\r\n                                                <IconButton sx={{marginLeft: 'auto'}} onClick={reportOffer}>\r\n                                                    <Tooltip title={\r\n                                                        <React.Fragment>\r\n                                                            {t('common.label_report')}\r\n                                                        </React.Fragment>\r\n                                                    }>\r\n                                                        <FlagIcon/>\r\n                                                    </Tooltip>\r\n                                                </IconButton>\r\n\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Zoom>\r\n\r\n                                    {isAuthenticated ? (\r\n                                        <Box sx={{mb: 3}}>\r\n                                            <CommentDetailsOffer\r\n                                                offerEntity={favoriteUserOffer?.offer}\r\n                                                listCommentsByOffer={listCommentsByOffer}\r\n                                                account={account}\r\n                                                isAuthenticated={isAuthenticated}\r\n                                                loadingListComments={loadingCommentsByOffer}\r\n                                                loadingUpdateEntity={loadingUpdateEntity}\r\n                                                loadingAddEntity={loadingAddComment}\r\n                                                parentCallbackAddComment={handleCallbackAddComment}\r\n                                                parentCallbackDeleteComment={handleCallbackDeleteComment}\r\n                                                parentCallbackUpdateComment={parentCallbackUpdateComment}\r\n                                                parentCallbackReportComment={parentCallbackReportComment}\r\n                                                parentCallbackLoadMoreComments={parentCallbackLoadMoreComments}\r\n                                                totalItems={totalItemsCommentsByOffer}\r\n                                            />\r\n                                        </Box>\r\n                                    ) : null}\r\n\r\n                                    {\r\n                                        favoriteUserOffer?.offer?.typeContactClient !== OfferTypeContact.direct && favoriteUserOffer.offer?.typeOffer=== TypeOfferEnum.Sell?\r\n                                            <CartSellDetailsOffer parentCallbackAddCart={addCart}\r\n                                                                  loadingAddCart={props.loadingAddCart}/> : null\r\n                                    }\r\n\r\n                                    {\r\n                                        favoriteUserOffer?.offer?.typeContactClient === OfferTypeContact.direct && favoriteUserOffer.offer?.typeOffer=== TypeOfferEnum.Sell?\r\n                                        <Alert severity=\"warning\">{t('details_offer.offer_contact_direct')}</Alert> : null\r\n                                    }\r\n\r\n                                </Grid>\r\n\r\n                                <Grid container item xs={12} sm={6} sx={{ pl: { xs: 0, sm: 4 } }} spacing={2}>\r\n                                    <RightDetailsOffer\r\n                                        parentCallback={handleCallbackFavorite}\r\n                                        offerEntity={favoriteUserOffer?.offer}\r\n                                        currentUser={account}\r\n                                        isAuthenticated={isAuthenticated}\r\n                                        myFavoriteUser={isFavoriteUser}\r\n                                        createConversationCallback={createConversation}\r\n                                        addSuccessConversation={props.addSuccessConversation}\r\n                                        isOnLine={isOnLine}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                    }\r\n\r\n                </Container>\r\n            {/*</Zoom>*/}\r\n            {renderDialogReportOffer()}\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ user, offer, comment, favoriteUser, reportOffer, reportCommentOffer, conversation, webSocketState, cart }: IRootState) => ({\r\n    isAuthenticated: user.isAuthenticated,\r\n    account: user.currentUser,\r\n\r\n    loadingEntityFavoriteUserOffer: offer.loadingEntityWithFavoriteUser,\r\n    favoriteUserOffer: offer.entityWithFavoriteUser,\r\n\r\n    loadingCommentsByOffer: comment.loadingEntitiesByOffer,\r\n    listCommentsByOffer: comment.entitiesByOffer,\r\n    loadingUpdateEntity: comment.loadingUpdateEntity,\r\n    loadingAddComment: comment.loadingAddEntity,\r\n    addSuccessComment: comment.addSuccess,\r\n    updateSuccessComment: comment.updateSuccess,\r\n    totalItemsCommentsByOffer: comment.totalItemsEntitiesByOffer,\r\n    loadingDeleteComment: comment.loadingDeleteEntity,\r\n    deleteSuccessComment: comment.deleteSuccess,\r\n\r\n    loadingEntityFavoriteUser: favoriteUser.loadingEntity,\r\n    entityFavoriteUser: favoriteUser.entity,\r\n    addSuccessFavoriteUser: favoriteUser.addSuccess,\r\n\r\n    addSuccessReportOffer: reportOffer.reportSuccess,\r\n    loadingEntityReportOffer: reportOffer.loadingReportEntity,\r\n\r\n    addSuccessReportCommentOffer: reportCommentOffer.reportSuccess,\r\n    loadingEntityReportCommentOffer: reportCommentOffer.loadingReportEntity,\r\n\r\n    addSuccessConversation: conversation.addSuccess,\r\n\r\n    listConnectedUsers: webSocketState.listConnectedUsers,\r\n\r\n    loadingAddCart: cart.loadingEntity\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitywithFavorite,\r\n    getListCommentsByOffer,\r\n    addCommentOffer,\r\n    createEntityFavoriteUser,\r\n    resetAllFavoriteOfferUser,\r\n    resetCommentOffer,\r\n    updateComment,\r\n    deleteComment,\r\n    createEntityReportOffer,\r\n    reportComment,\r\n    createConversation,\r\n    addCart\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailsOffer);","import * as Yup from 'yup';\r\n\r\nexport const initialValuesAddCommentOffer = {\r\n    content: '',\r\n};\r\n\r\nexport const validationSchemaAddCommentOffer = Yup.object({\r\n    content: Yup.string().required('Type Offer is required'),\r\n});\r\n\r\n\r\nexport const initialValuesAddMessageDetailsOffer = {\r\n    fullName: '',\r\n    email: '',\r\n    content: '',\r\n};\r\n\r\nexport const validationSchemaAddMessageDetailsOffer = Yup.object({\r\n    fullName: Yup.string().required('Message is required'),\r\n    email: Yup.string().email().required('email_is_required'),\r\n    content: Yup.string().required('Message is required'),\r\n});\r\n\r\nexport const initialValuesQuantityOffer = {\r\n    quantity: 1\r\n}\r\n\r\nexport const validationSchemaQuantityOffer = Yup.object({\r\n    quantity: Yup.number().required('Quantity is required'),\r\n});","import React from 'react';\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {IRootState} from \"../../shared/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@mui/material/TextField/TextField\";\r\nimport MessageIcon from '@mui/icons-material/MessageOutlined';\r\nimport Card from \"@mui/material/Card/Card\";\r\nimport CardContent from \"@mui/material/CardContent/CardContent\";\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport {createEntity} from \"../../shared/reducers/report-probleme.reducer\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nconst initialValuesAddMessage = {\r\n    content: '',\r\n};\r\n\r\nconst validationSchemaAddMessage = Yup.object({\r\n    content: Yup.string().required('Message is required').min(5, 'Min 5 digits').max(2000, 'Max 2000 digits'),\r\n});\r\n\r\nconst initialValues = initialValuesAddMessage;\r\n\r\nexport interface IProblemeDeclarationProps extends StateProps, DispatchProps{}\r\n\r\nexport const ProblemeDeclaration = (props: IProblemeDeclarationProps) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddMessage,\r\n        onSubmit: values => {\r\n            if (props.isAuthenticated) {\r\n                props.createEntity(values);\r\n            }\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(props.addSuccess){\r\n            formik.resetForm();\r\n        }\r\n    }, [props.addSuccess])\r\n\r\n    return(\r\n        <Box>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                            <MessageIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                            <TextField id=\"content\"\r\n                                       name=\"content\"\r\n                                       label=\"Declarer votre probleme\"\r\n                                       variant=\"standard\"\r\n                                       fullWidth\r\n                                       multiline\r\n                                       value={formik.values.content}\r\n                                       onChange={formik.handleChange}\r\n                                       error={formik.touched.content && Boolean(formik.errors.content)}\r\n                                       rows={4}/>\r\n                        </Box>\r\n                        {\r\n                            formik.touched.content && Boolean(formik.errors.content) ? <Box className=\"red-color\">{formik.errors.content}</Box> : null\r\n                        }\r\n                        <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                            <Button variant=\"outlined\" size=\"small\" fullWidth sx={{mt: 2}}\r\n                                    color=\"neutral\"\r\n                                    type=\"submit\">\r\n                                Declarer\r\n                            </Button>\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\nconst mapStateToProps = ({reportProbleme, user}: IRootState) => ({\r\n    loading: reportProbleme.loadingEntity,\r\n    entity: reportProbleme.entity,\r\n    addSuccess: reportProbleme.addSuccess,\r\n\r\n    isAuthenticated: user.isAuthenticated,\r\n    currentUser: user.currentUser,\r\n})\r\nconst mapDispatchToProps = {\r\n    createEntity\r\n}\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProblemeDeclaration);","import Typography from \"@mui/material/Typography/Typography\";\r\nimport ShortcutIcon from \"@mui/icons-material/Shortcut\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Box from \"@mui/material/Box\";\r\nimport * as React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    initialValuesQuantityOffer,\r\n    validationSchemaQuantityOffer\r\n} from \"../../../main-features/offer/details/validation/initial-values-add-comment-offer\";\r\n\r\nconst initialValues = initialValuesQuantityOffer;\r\n\r\nexport function InputQuantity({parentCallChangeQuantity, defaultValue}: {parentCallChangeQuantity: Function, defaultValue?:number | null | undefined}) {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaQuantityOffer,\r\n        onSubmit: values => {\r\n            // parentCallbackAddCart(values)\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(defaultValue){\r\n            formik.setFieldValue('quantity', defaultValue);\r\n        }\r\n    }, [defaultValue])\r\n\r\n    const changeQuantity = (event: any, type: string) => {\r\n        event.stopPropagation();\r\n        if(type==='+' && formik.values.quantity < 100){\r\n            formik.setFieldValue('quantity', formik.values.quantity+1);\r\n            parentCallChangeQuantity(formik.values.quantity+1);\r\n        }\r\n        else if( formik.values.quantity > 1 ){\r\n            formik.setFieldValue('quantity', formik.values.quantity-1);\r\n            parentCallChangeQuantity(formik.values.quantity-1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                <ShortcutIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                Quantité\r\n            </Typography>\r\n            <Paper\r\n                sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 150 }} >\r\n                <IconButton sx={{ p: '10px' }} aria-label=\"menu\"  onClick={(event: any) => changeQuantity(event, '-')}>\r\n                    <RemoveIcon />\r\n                </IconButton>\r\n                <InputBase\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    placeholder=\"1\"\r\n                    inputProps={{ 'aria-label': '1' }}\r\n                    type=\"number\"\r\n                    value={formik.values.quantity}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <IconButton sx={{ p: '10px' }} aria-label=\"directions\" onClick={(event: any) =>  changeQuantity(event, '+')}>\r\n                    <AddIcon />\r\n                </IconButton>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}","export enum OfferTypeContact {\r\n    direct = 'ContactDirect',\r\n    perCommmande = 'PerCommande'\r\n}","export enum TypeOfferEnum {\r\n  Sell = 'SellOffer',\r\n  Rent = 'RentOffer',\r\n  Find = 'FindOffer',\r\n}\r\n\r\nexport enum PeriodeRent {\r\n  PerYear = 'PerYear',\r\n  PerMonth = 'PerMonth',\r\n  PerDay = 'PerDay',\r\n}\r\n\r\nexport enum TypesFindOffer{\r\n    Carpooling = 'Carpooling',\r\n    Travels = 'Travels',\r\n    Transporter = 'Transporter',\r\n    Job = 'Job'\r\n}\r\n\r\nexport enum TypeDisplaySearchOffers {\r\n    List = 'LIST',\r\n    Grid = 'GRID'\r\n}","import * as React from 'react';\r\nimport ReactTimeAgo from 'react-time-ago';\r\n\r\nexport const ConvertReactTimeAgo = (date: any, locale?: any) => {\r\n  if (date && date.convertDate) {\r\n    return <ReactTimeAgo date={new Date(date.convertDate)} locale='fr-FR' />;\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","import { styled } from '@mui/material/styles';\r\nimport Badge from '@mui/material/Badge';\r\n\r\nexport const StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        backgroundColor: theme.palette.success,\r\n        color: theme.palette.success,\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: 'ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}));","import React from \"react\";\r\nimport {TransitionProps} from \"@mui/material/transitions\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\n\r\n\r\nexport const TransitionModal = React.forwardRef(function Transition(\r\n    props: TransitionProps & {\r\n        children: React.ReactElement<any, any>;\r\n    },\r\n    ref: React.Ref<unknown>\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});"],"names":["images","ImageLightbox","props","state","index","isOpen","listImagesLightBox","listImages","thumbs","titles","listTitles","captions","openLightbox","bind","closeLightbox","moveNext","movePrev","this","setState","callbackClose","prevState","length","lightbox","openLightBox","mainSrc","nextSrc","prevSrc","mainSrcThumbnail","nextSrcThumbnail","prevSrcThumbnail","onCloseRequest","onMovePrevRequest","onMoveNextRequest","onImageLoadError","imageTitle","imageCaption","onContextMenu","e","preventDefault","Component","SwiperDetailsOffer","offerEntity","React","thumbsSwiper","setThumbsSwiper","setOpenLightBox","offerImages","Box","map","item","getImageForOffer","id","path","getFullListImages","title","toString","getFullListTitles","listCaptions","description","getFullListCaptions","Card","sx","mb","spaceBetween","navigation","pagination","clickable","swiper","zoom","lazy","effect","loop","autoplay","delay","disableOnInteraction","className","offerImage","src","onClick","onSwiper","slidesPerView","freeMode","watchSlidesProgress","SwiperCore","Autoplay","EffectFade","Lazy","Zoom","Navigation","Thumbs","useState","setIsOverflowing","expanded","setExpanded","containerRef","useRef","useEffect","el","current","scrollHeight","clientHeight","lines","toggleExpand","type","text","readMoreText","readLessText","onAction","_html","replace","formatText","ref","substring","AllAppConfig","initialValues","initialValuesAddCommentOffer","CommentDetailsOffer","listCommentsByOffer","account","isAuthenticated","loadingListComments","loadingUpdateEntity","loadingAddEntity","parentCallbackAddComment","parentCallbackDeleteComment","parentCallbackUpdateComment","parentCallbackReportComment","parentCallbackLoadMoreComments","totalItems","commentDeleteId","setCommentDeleteId","commentUpdateId","setCommentUpdateId","showComments","setShowComments","openReportCommentOfferModal","setOpenReportCommentOfferModal","defaultValue","commentReport","setCommentReport","t","useTranslation","handleCallbackUpdateComment","content","commentId","openDeleteCommentModal","setDeleteCommentModal","handleClickCancelDeleteCommentModal","handleClickDeleteDeleteCommentModal","parentCallbackCancelUpdateComment","handleCloseReportCommentOfferModal","handleAddReportCommentOfferModal","List","bgcolor","mt","ListItem","alignItems","button","ListItemText","Typography","variant","component","color","comment","secondaryAction","user","IconButton","edge","mr","display","ModeEdit","cmtId","Delete","reportCommentOffer","Flag","ListItemAvatar","Avatar","alt","getUserAvatar","imageUrl","sourceRegister","border","getFullnameUser","charAt","primary","secondary","convertDate","createdDate","ml","UpdateComment","defaultValueUpdate","Divider","justifyContent","m","CircularProgress","textAlign","AddComment","Dialog","open","TransitionComponent","TransitionModal","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","formik","useFormik","validationSchema","validationSchemaAddCommentOffer","onSubmit","values","setFieldValue","handleSubmit","TextField","name","label","value","onChange","handleChange","multiline","fullWidth","maxRows","LoadingButton","loading","size","disabled","my","valueBeforCancelUpdate","CustomShare","shareData","url","handleShare","navigator","share","then","result","checkMobileDesktopBrowser","SourceProvider","children","quote","initialValuesAddMessageDetailsOffer","RightDetailsOffer","parentCallback","currentUser","myFavoriteUser","createConversationCallback","addSuccessConversation","isOnLine","setDefaultValues","messageAlert","setMessageAlert","openAlert","setOpenAlert","contactWithPhone","setContactWithPhone","navigate","useNavigate","validationSchemaAddMessageDetailsOffer","sendMessage","setResetValues","email","isEmpty","resetForm","entity","conversation","dateCreated","convertDateTimeToServer","Date","senderUser","receiverUser","openFavoriteModal","setOpenFavoriteModal","handleClickOpenFavoriteModal","event","stopPropagation","handleCloseFavoriteModal","handleAddFavoriteModal","redirectToPorfile","userId","setTimeout","ALL_APP_ROUTES","getFavoriteUserColor","Grid","xs","sm","paragraph","ListItemButton","CardHeader","avatar","overlap","anchorOrigin","vertical","horizontal","action","Favorite","subheader","role","address","CardContent","city","country","CardActions","disableSpacing","backgroundColor","Share","marginLeft","ExpandMore","container","AccountCircle","touched","fullName","Boolean","errors","error","rows","p","borderLeft","startIcon","Facebook","linkProfileFacebook","window","contactWithFacebookcontactWithFacebook","Phone","phone","href","style","textDecoration","spacing","console","log","fontSize","gutterBottom","maxHeight","marginTop","getBaseImageUrl","lng","ProblemeDeclaration","Snackbar","autoHideDuration","message","CartSellDetailsOffer","parentCallbackAddCart","loadingAddCart","setValue","valueQuantity","setValueQuantity","width","typography","TabContext","TabPanel","md","InfoOutlined","InputQuantity","parentCallChangeQuantity","data","quantity","borderBottom","borderColor","TabList","newValue","centered","Tab","DetailsOffer","startAnimation","setStartAnimation","isFavoriteUser","setIsFavoriteUser","openReportOfferModal","setOpenReportOfferModal","activeCommentPage","setActiveCommentPage","expandedDetailsOffer","setExpandedDetailsOffer","defaultLanguage","setDefaultLanguage","useParams","resetAllFavoriteOfferUser","resetCommentOffer","getEntitywithFavorite","updateComment","favoriteUserOffer","loadingEntityFavoriteUserOffer","getListCommentsByOffer","loadingCommentsByOffer","addSuccessComment","updateSuccessComment","addSuccessFavoriteUser","createEntityFavoriteUser","loadingAddComment","totalItemsCommentsByOffer","deleteSuccessComment","deleteComment","i18n","lang","offer","Number","idOffer","handleCloseReportOfferModal","handleAddReportOfferModal","createEntityReportOffer","paddingTop","Container","maxWidth","Breadcrumbs","to","Z","in","amount","fontWeight","typeOffer","TypeOfferEnum","startDate","endDate","typePeriodRent","AccessTime","AddLocation","category","EmojiObjects","titleEn","titleFr","titleAr","getNameCategory","Accordion","elevation","AccordionSummary","expandIcon","borderRadius","AccordionDetails","dangerouslySetInnerHTML","__html","Tooltip","addCommentOffer","addEventGA","AllModulesEventGA","commentid","commentUpdate","find","commentOffer","reportComment","typeContactClient","OfferTypeContact","cart","sellOffer","addCart","Alert","severity","pl","favoriteUser","username","favoriteDate","createConversation","listConnectedUsers","findIndex","principal","mapDispatchToProps","connect","reportOffer","webSocketState","loadingEntityWithFavoriteUser","entityWithFavoriteUser","loadingEntitiesByOffer","entitiesByOffer","addSuccess","updateSuccess","totalItemsEntitiesByOffer","loadingDeleteComment","loadingDeleteEntity","deleteSuccess","loadingEntityFavoriteUser","loadingEntity","entityFavoriteUser","addSuccessReportOffer","reportSuccess","loadingEntityReportOffer","loadingReportEntity","addSuccessReportCommentOffer","loadingEntityReportCommentOffer","Yup","required","initialValuesQuantityOffer","validationSchemaQuantityOffer","validationSchemaAddMessage","min","max","createEntity","reportProbleme","changeQuantity","flex","placeholder","inputProps","PeriodeRent","TypesFindOffer","TypeDisplaySearchOffers","ConvertReactTimeAgo","date","locale","StyledBadge","styled","Badge","theme","palette","success","boxShadow","background","paper","position","top","left","height","animation","transform","opacity","direction"],"sourceRoot":""}