{"version":3,"file":"static/js/181.d67876c3.chunk.js","mappings":"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","sources":["shared/pages/image-lightbox.tsx","main-features/offer/details/ui-segments/SwiperDetailsOffer.tsx","shared/components/read-more-text/ReadMoreText.tsx","main-features/offer/details/ui-segments/CommentDetailsOffer.tsx","shared/components/custom-share/CustomShare.tsx","main-features/offer/details/ui-segments/RightDetailsOffer.tsx","main-features/offer/details/ui-segments/CartSellDetailsOffer.tsx","main-features/offer/details/DetailsOffer.tsx","main-features/offer/details/validation/initial-values-add-comment-offer.ts","main-features/probleme-declaration/ProblemeDeclaration.tsx","shared/components/input-quantity/InputQuantity.tsx","shared/components/lazy-image/LazyImageFull.tsx","shared/components/lazy-image/LazyImage.tsx","shared/enums/offer-type-contact.enum.ts","shared/enums/type-offer.enum.ts","shared/pages/react-time-ago.tsx","shared/pages/styled-badge.tsx","shared/pages/transition-modal.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\n// import Lightbox from 'react-image-lightbox';\r\n// In your own app, you would need to use import styles once in the app\r\n// import 'react-image-lightbox/styles.css';\r\n// import './stylesheets/vendor/stylesheet.css';\r\n// import './stylesheets/vendor/github-light.css';\r\n// import './stylesheets/app.css';\r\n// import image1 from './images/1.jpg';\r\n// import image2 from './images/2.jpg';\r\n// import image3 from './images/3.jpg';\r\n// import image4 from './images/4.jpg';\r\n// import image1Thumb from './images/1_thumb.jpg';\r\n// import image2Thumb from './images/2_thumb.jpg';\r\n// import image3Thumb from './images/3_thumb.jpg';\r\n// import image4Thumb from './images/4_thumb.jpg';\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n//\r\n// const images = [image1, image2, image3, image4];\r\n// const thumbs = [image1Thumb, image2Thumb, image3Thumb, image4Thumb];\r\n\r\nconst images = ['//placekitten.com/1500/500', '//placekitten.com/4000/3000', '//placekitten.com/800/1200', '//placekitten.com/1500/1500'];\r\n// const thumbs = ['//placekitten.com/4000/3000', 'https://source.unsplash.com/random', 'https://source.unsplash.com/random', 'https://source.unsplash.com/random'];\r\n\r\n// const titles = [\r\n//     '',\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/titrans/\">\r\n//       quatre mains\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by/2.0/\"\r\n//         title=\"Attribution License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/lachlanrogers/\">\r\n//       latch.r\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by-sa/2.0/\"\r\n//         title=\"Attribution-ShareAlike License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/fazen/\">\r\n//       fazen\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by/2.0/\"\r\n//         title=\"Attribution License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n// ];\r\n//\r\n// const captions = [\r\n//     'Cat in the snow',\r\n//     '',\r\n//     <p>\r\n//         .. not in the&nbsp;\r\n//         <em>mood</em>\r\n//         &nbsp;for games right now\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         C&#39;mon. Seriously.\r\n//     </p>,\r\n//     '',\r\n// ];\r\n//\r\n// interface IImageLightBox {\r\n//     images: string[];\r\n//     thumbs: string[];\r\n//     titles: (string | JSX.Element)[];\r\n//     captions: (string | JSX.Element)[];\r\n// }\r\n\r\n// let listImagesLightBox: IImageLightBox = {\r\n//     images: [],\r\n//     thumbs: [],\r\n//     titles: [],\r\n//     captions: []\r\n// }\r\n\r\nclass ImageLightbox extends Component<any, any> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: 0,\r\n            isOpen: false,\r\n            listImagesLightBox : {\r\n                images: this.props.listImages,\r\n                thumbs: this.props.listImages,\r\n                titles: this.props.listTitles,\r\n                captions: []// this.props.listCaptions\r\n            }\r\n        };\r\n\r\n        this.openLightbox = this.openLightbox.bind(this);\r\n        this.closeLightbox = this.closeLightbox.bind(this);\r\n        this.moveNext = this.moveNext.bind(this);\r\n        this.movePrev = this.movePrev.bind(this);\r\n    }\r\n\r\n    static onImageLoadError(): void {\r\n        // console.error(`Could not load image at ${imageSrc}`, errorEvent); // eslint-disable-line no-console\r\n    }\r\n\r\n    openLightbox() {\r\n        this.setState({ isOpen: true });\r\n    }\r\n\r\n    closeLightbox() {\r\n        this.setState({ isOpen: false });\r\n        this.props.callbackClose();\r\n    }\r\n\r\n    moveNext() {\r\n        this.setState((prevState: any) => ({\r\n            index: (prevState.index + 1) % images.length,\r\n        }));\r\n    }\r\n\r\n    movePrev() {\r\n        this.setState((prevState: any) => ({\r\n            index: (prevState.index + images.length - 1) % images.length,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n\r\n        let lightbox;\r\n        if (this.props.openLightBox) {\r\n            lightbox = (\r\n                <Lightbox\r\n                    mainSrc={this.state.listImagesLightBox.images[this.state.index]}\r\n                    nextSrc={this.state.listImagesLightBox.images[(this.state.index + 1) % images.length]}\r\n                    prevSrc={\r\n                        this.state.listImagesLightBox.images[(this.state.index + images.length - 1) % images.length]\r\n                    }\r\n                    mainSrcThumbnail={this.state.listImagesLightBox.thumbs[this.state.index]}\r\n                    nextSrcThumbnail={this.state.listImagesLightBox.thumbs[(this.state.index + 1) % images.length]}\r\n                    prevSrcThumbnail={\r\n                        this.state.listImagesLightBox.thumbs[(this.state.index + images.length - 1) % images.length]\r\n                    }\r\n                    onCloseRequest={this.closeLightbox}\r\n                    onMovePrevRequest={this.movePrev}\r\n                    onMoveNextRequest={this.moveNext}\r\n                    onImageLoadError={ImageLightbox.onImageLoadError}\r\n                    imageTitle={this.state.listImagesLightBox.titles[this.state.index]}\r\n                    imageCaption={this.state.listImagesLightBox.captions[this.state.index]}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div  onContextMenu={(e) => e.preventDefault()}>\r\n                {lightbox}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageLightbox;","import * as React from 'react';\r\n\r\n// Import Swiper React components\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport Card from '@mui/material/Card/Card';\r\nimport {Autoplay, EffectFade, Lazy, Navigation, Thumbs, Zoom} from 'swiper';\r\nimport SwiperCore from 'swiper';\r\nimport {IOffer} from \"../../../../shared/model/offer.model\";\r\nimport {IOfferImages} from \"../../../../shared/model/offer-images.model\";\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../../shared/utils/utils-functions\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-fade\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\nimport ImageLightbox from \"../../../../shared/pages/image-lightbox\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {AllAppConfig} from \"../../../../core/config/all-config\";\r\nimport {LazyImage} from \"../../../../shared/components/lazy-image\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Autoplay, EffectFade, Lazy, Zoom, Navigation, Thumbs]);\r\n\r\nexport default function SwiperDetailsOffer(offerEntity: IOffer) {\r\n    const [thumbsSwiper, setThumbsSwiper] = React.useState<any | null>(null);// useState(null);\r\n    const [openLightBox, setOpenLightBox] = React.useState(false);\r\n\r\n    const closeLightBox = () => {\r\n        setOpenLightBox(false);\r\n    }\r\n\r\n    const getFullListImages = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => getImageForOffer(offerEntity.id, item.path));\r\n    }\r\n\r\n    const getFullListTitles = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => (offerEntity?.title || '').toString());\r\n    }\r\n\r\n    const getFullListCaptions = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => (offerEntity?.description || '').toString());\r\n    }\r\n\r\n    return offerEntity && offerEntity.offerImages && offerEntity.offerImages.length > 0 ? (\r\n\r\n        <Box>\r\n            <ImageLightbox openLightBox={openLightBox}\r\n                           callbackClose={closeLightBox}\r\n                           listImages={getFullListImages()}\r\n                           listTitles={getFullListTitles()}\r\n                           listCaptions={getFullListCaptions()}/>\r\n\r\n            <Card sx={{mb: 2}}>\r\n                <Swiper\r\n                    spaceBetween={10}\r\n                    navigation={offerEntity.offerImages.length>1 ? true : false}\r\n                    pagination={{clickable: true}}\r\n                    thumbs={{swiper: thumbsSwiper}}\r\n                    zoom={true}\r\n                    lazy={true}\r\n                    effect={'fade'}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 5000,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    className=\"mySwiper2\"\r\n                >\r\n                    {offerEntity.offerImages.map((offerImage: IOfferImages, index) => (\r\n                        <SwiperSlide key={offerImage.id}>\r\n                            <div className=\"swiper-zoom-container\">\r\n                                {/*<img src={getImageForOffer(offerEntity.id, offerImage.path)}*/}\r\n                                {/*     onClick={() => setOpenLightBox(true)} onContextMenu={(e) => e.preventDefault()}/>*/}\r\n\r\n                                <LazyImage\r\n                                    src={getImageForOffer(offerEntity.id, offerImage.path)}\r\n                                    alt=\"Image swiper\"\r\n                                    actual={({ imageProps }) => <img {...imageProps} className=\"full-img-responsive\" onClick={() => setOpenLightBox(true)} onContextMenu={(e) => e.preventDefault()}/>}\r\n                                    placeholder={({ ref }) => <div ref={ref} />}\r\n                                    loading={() => (\r\n                                        <div>\r\n                                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                        </div>\r\n                                    )}\r\n                                    error={() => (\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n                <Swiper\r\n                    onSwiper={setThumbsSwiper}\r\n                    spaceBetween={10}\r\n                    slidesPerView={4}\r\n                    freeMode={true}\r\n                    watchSlidesProgress={true}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {offerEntity.offerImages.map((offerImage: IOfferImages, index) => (\r\n                        <SwiperSlide key={offerImage.id}>\r\n                            {/*<img src={getImageForOffer(offerEntity.id, offerImage.path)}/>*/}\r\n                            <LazyImage\r\n                                src={getImageForOffer(offerEntity.id, offerImage.path)}\r\n                                alt=\"Image swiper\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"full-img-responsive\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Card>\r\n        </Box>\r\n    ) : null;\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\n\r\n\r\nexport interface ReadMoreTextProps {\r\n    text: string\r\n    type?: 'plainText' | 'html'\r\n    readMoreText?: string\r\n    readLessText?: string\r\n    containerHeight?: string\r\n    onAction?: () => void\r\n    lines?: number\r\n}\r\n\r\n\r\nconst ReadMoreText: React.FC<ReadMoreTextProps> = (props) => {\r\n    const [isOverflowing, setIsOverflowing] = useState(false)\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const el = containerRef.current;\r\n        if (!el) return;\r\n\r\n        if (el.scrollHeight > el.clientHeight) {\r\n            setIsOverflowing(true);\r\n        }\r\n\r\n    }, [props.lines])\r\n\r\n\r\n    const toggleExpand = () => {\r\n        setExpanded(!expanded)\r\n    }\r\n\r\n    const formatText = (text: string) => text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\r\n\r\n    const {\r\n        type = 'plainText',\r\n        text = '',\r\n        readMoreText = 'More',\r\n        readLessText = 'Less',\r\n        onAction = toggleExpand\r\n    } = props\r\n\r\n    const _html = formatText(text);\r\n\r\n    return (\r\n        <span className=\"rm-container\">\r\n            <span ref={containerRef} className=\"rm-text-wrapper\">\r\n                {\r\n                    expanded ? _html : _html.substring(0, AllAppConfig.NBE_WORD_SHOW_MORE_LESS)\r\n                }\r\n\r\n            </span>\r\n            {\r\n                _html.length > AllAppConfig.NBE_WORD_SHOW_MORE_LESS ?\r\n                <span className=\"rm-action-button-container\">\r\n                    {\r\n                        !expanded ?\r\n                            <span className=\"rm-more-button\" onClick={onAction} >{readMoreText}</span> :\r\n                            <span className=\"rm-less-button\" onClick={toggleExpand}>{readLessText}</span>\r\n                    }\r\n                </span> : null\r\n            }\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default (ReadMoreText)","import React from 'react';\r\nimport List from '@mui/material/List/List';\r\nimport ListItem from '@mui/material/ListItem/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText/ListItemText';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Divider from '@mui/material/Divider/Divider';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Button from '@mui/material/Button/Button';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\n\r\nimport {useFormik} from 'formik';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport Dialog from '@mui/material/Dialog/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions/DialogActions';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport FlagIcon from '@mui/icons-material/Flag';\r\nimport {useEffect} from 'react';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {\r\n    initialValuesAddCommentOffer,\r\n    validationSchemaAddCommentOffer\r\n} from \"../validation/initial-values-add-comment-offer\";\r\nimport {defaultValue, ICommentOffer} from \"../../../../shared/model/comment-offer.model\";\r\nimport {getFullnameUser, getUserAvatar} from \"../../../../shared/utils/utils-functions\";\r\nimport {IOffer} from \"../../../../shared/model/offer.model\";\r\nimport {IUser} from \"../../../../shared/model/user.model\";\r\nimport {TransitionModal} from \"../../../../shared/pages/transition-modal\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {ConvertReactTimeAgo} from \"../../../../shared/pages/react-time-ago\";\r\nimport ReadMoreText from \"../../../../shared/components/read-more-text/ReadMoreText\";\r\n\r\nconst initialValues = initialValuesAddCommentOffer;\r\n\r\nexport default function CommentDetailsOffer({\r\n                                                offerEntity,\r\n                                                listCommentsByOffer,\r\n                                                account,\r\n                                                isAuthenticated,\r\n                                                loadingListComments,\r\n                                                loadingUpdateEntity,\r\n                                                loadingAddEntity,\r\n                                                parentCallbackAddComment,\r\n                                                parentCallbackDeleteComment,\r\n                                                parentCallbackUpdateComment,\r\n                                                parentCallbackReportComment,\r\n                                                parentCallbackLoadMoreComments,\r\n                                                totalItems\r\n                                            }: {\r\n    offerEntity: IOffer | undefined,\r\n    listCommentsByOffer: ReadonlyArray<ICommentOffer>,\r\n    account: IUser,\r\n    isAuthenticated: boolean,\r\n    loadingListComments: boolean,\r\n    loadingUpdateEntity: boolean,\r\n    loadingAddEntity: boolean,\r\n    parentCallbackAddComment: any,\r\n    parentCallbackDeleteComment: any,\r\n    parentCallbackUpdateComment: any,\r\n    parentCallbackReportComment: any,\r\n    parentCallbackLoadMoreComments: any,\r\n    totalItems: number\r\n}) {\r\n    const [commentDeleteId, setCommentDeleteId] = React.useState(-1);\r\n    const [commentUpdateId, setCommentUpdateId] = React.useState(-1);\r\n    const [showComments, setShowComments] = React.useState<boolean>(false);\r\n    const [openReportCommentOfferModal, setOpenReportCommentOfferModal] = React.useState(false);\r\n    const [commentReport, setCommentReport] = React.useState<ICommentOffer>(defaultValue);\r\n\r\n\r\n    const { t} = useTranslation();\r\n\r\n    const handleCallbackAddComment = (content: string) => {\r\n        parentCallbackAddComment(content);\r\n    };\r\n\r\n    const handleCallbackUpdateComment = (content: string, commentId: number) => {\r\n        parentCallbackUpdateComment(content, commentId);\r\n        setCommentUpdateId(-1);\r\n    };\r\n\r\n    const [openDeleteCommentModal, setDeleteCommentModal] = React.useState(false);\r\n    const handleClickOpenDeleteCommentModal = (cmtId: number) => {\r\n        setCommentDeleteId(cmtId);\r\n        setDeleteCommentModal(true);\r\n    };\r\n    const handleClickCancelDeleteCommentModal = () => {\r\n        setDeleteCommentModal(false);\r\n    };\r\n\r\n    const handleClickDeleteDeleteCommentModal = () => {\r\n        setDeleteCommentModal(false);\r\n        parentCallbackDeleteComment(commentDeleteId);\r\n    };\r\n\r\n    const setUpdateComment = (commentId: number) => {\r\n        setCommentUpdateId(commentId);\r\n    };\r\n\r\n    const parentCallbackCancelUpdateComment = () => {\r\n        setCommentUpdateId(-1);\r\n    };\r\n\r\n    const renderDialogDeleteComment = () => {\r\n        return (\r\n            <Dialog\r\n                open={openDeleteCommentModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleClickCancelDeleteCommentModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t('details_offer.title_dialog_delete_comment')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t('details_offer.description_dialog_delete_comment')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClickCancelDeleteCommentModal} color=\"neutral\">\r\n                        {t('common.label_cancel')}\r\n                    </Button>\r\n                    <Button onClick={handleClickDeleteDeleteCommentModal} color=\"error\">\r\n                        {t('common.label_delete')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const reportCommentOffer = (comment: ICommentOffer) => {\r\n        setCommentReport(comment);\r\n        setOpenReportCommentOfferModal(true);\r\n    }\r\n    const handleCloseReportCommentOfferModal = () => {\r\n        setOpenReportCommentOfferModal(false);\r\n    }\r\n    const handleAddReportCommentOfferModal = () => {\r\n        setOpenReportCommentOfferModal(false);\r\n        parentCallbackReportComment(commentReport);\r\n    }\r\n    const renderDialogReportCommentOffer = () => {\r\n        return (\r\n            <Dialog\r\n                open={openReportCommentOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseReportCommentOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t('details_offer.title_dialog_report_comment')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t('details_offer.description_dialog_report_comment')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseReportCommentOfferModal}>\r\n                        {t('common.label_cancel')}\r\n                    </Button>\r\n                    <Button color=\"success\" onClick={handleAddReportCommentOfferModal}>\r\n                        {t('common.label_report')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <List sx={{bgcolor: 'background.paper', mt: 2}}>\r\n                <Box>\r\n\r\n                    {\r\n                        totalItems > 0 ? <ListItem alignItems=\"flex-start\" button onClick={() => setShowComments(!showComments)}>\r\n                            <ListItemText>\r\n                                <Typography variant=\"subtitle1\" component=\"a\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                                    <u>\r\n                                        {\r\n                                            !showComments ? t('comment_offer.show_comment_details_offer') : t('comment_offer.hide_comment_details_offer')\r\n                                        }\r\n                                        ({totalItems})\r\n                                    </u>\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem> : null\r\n                    }\r\n\r\n                    {\r\n                        showComments ?\r\n                            <Box>\r\n                                {\r\n                                    listCommentsByOffer.map((comment: ICommentOffer, index: number) => (\r\n                                        <div key={`comment-${index}`}>\r\n                                            <ListItem\r\n                                                alignItems=\"flex-start\"\r\n                                                secondaryAction={\r\n                                                    <Box>\r\n                                                        {isAuthenticated && comment?.user?.id === account.id ? (\r\n                                                            <IconButton edge=\"end\" aria-label=\"edit\" color=\"success\"\r\n                                                                        onClick={() => setUpdateComment(comment.id || -1)}\r\n                                                                        sx={{mr: 0.5, display: 'block'}}>\r\n                                                                <ModeEditIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                        {isAuthenticated && (offerEntity?.user?.id === account.id || comment?.user?.id === account.id) ? (\r\n                                                            <IconButton\r\n                                                                edge=\"end\"\r\n                                                                aria-label=\"delete\"\r\n                                                                color=\"error\"\r\n                                                                onClick={() => handleClickOpenDeleteCommentModal(comment.id || -1)}\r\n                                                                sx={{display: 'block'}}>\r\n                                                                <DeleteIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                        {isAuthenticated && comment?.user?.id !== account.id ? (\r\n                                                            <IconButton edge=\"end\" aria-label=\"report\"\r\n                                                                        onClick={() => reportCommentOffer(comment)}\r\n                                                                        sx={{mr: 0.5, display: 'block'}}>\r\n                                                                <FlagIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                    </Box>\r\n                                                }\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar alt=\"Avatar\"\r\n                                                            src={getUserAvatar(comment.user?.id, comment.user?.imageUrl, comment.user?.sourceRegister)}\r\n                                                            sx={{border: '1px solid #b9b9b9'}}>{getFullnameUser(comment?.user)?.charAt(0)}</Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={getFullnameUser(comment?.user)}\r\n                                                    secondary={\r\n                                                        <React.Fragment>\r\n                                                            <Typography sx={{display: 'block'}} component=\"span\" variant=\"body2\"\r\n                                                                        color=\"text.primary\">\r\n                                                                <ConvertReactTimeAgo convertDate={comment.createdDate} />\r\n                                                            </Typography>\r\n                                                            {\r\n                                                                commentUpdateId !== comment.id ? <ReadMoreText\r\n                                                                    lines={2}\r\n                                                                    text={comment.content || ''}\r\n                                                                    readMoreText={t('details_offer.label_show_more')}\r\n                                                                    readLessText={t('details_offer.label_show_less')}/> : null\r\n                                                            }\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            {commentUpdateId === comment.id ? (\r\n                                                <Box sx={{mr: 2, ml: 9}}>\r\n                                                    <UpdateComment\r\n                                                        parentCallbackUpdateComment={(content: string) => handleCallbackUpdateComment(content, (comment.id || -1))}\r\n                                                        parentCallbackCancelUpdateComment={parentCallbackCancelUpdateComment}\r\n                                                        defaultValueUpdate={comment.content}\r\n                                                        loadingUpdateEntity={loadingUpdateEntity}\r\n                                                    />\r\n                                                </Box>\r\n                                            ) : null}\r\n                                            <Divider variant=\"inset\" component=\"li\"/>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n\r\n                                {\r\n                                    loadingListComments ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', m:2}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                        </Box> : null\r\n                                }\r\n\r\n                                {\r\n                                    totalItems>listCommentsByOffer.length ? <ListItem alignItems=\"center\" button onClick={() => parentCallbackLoadMoreComments()}>\r\n                                        <ListItemText>\r\n                                            <Typography variant=\"subtitle1\" component=\"h5\" color=\"text.secondary\" sx={{ mt: 1, textAlign: 'center' }}>\r\n                                                <u>\r\n                                                    {t('comment_offer.show_more_comment')}\r\n                                                </u>\r\n                                            </Typography>\r\n                                        </ListItemText>\r\n                                    </ListItem> : null\r\n                                }\r\n\r\n                            </Box> : null\r\n                    }\r\n\r\n                </Box>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt={account.imageUrl}\r\n                                src={getUserAvatar(account.id, account.imageUrl, account?.sourceRegister)}\r\n                                sx={{border: '1px solid #b9b9b9'}}>{getFullnameUser(account)?.charAt(0)}</Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText>\r\n                        <AddComment parentCallbackAddComment={handleCallbackAddComment}\r\n                                    loadingAddEntity={loadingAddEntity}/>\r\n                    </ListItemText>\r\n                </ListItem>\r\n            </List>\r\n            <div>{renderDialogDeleteComment()}</div>\r\n            <div>{renderDialogReportCommentOffer()}</div>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction AddComment({parentCallbackAddComment, loadingAddEntity}: { parentCallbackAddComment: any, loadingAddEntity: boolean }) {\r\n\r\n    const { t} = useTranslation();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddCommentOffer,\r\n        onSubmit: values => {\r\n            parentCallbackAddComment(values.content);\r\n            formik.setFieldValue('content', '');\r\n        },\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    id=\"content\"\r\n                    name=\"content\"\r\n                    label={t('comment_offer.label_add_comment')}\r\n                    value={formik.values.content}\r\n                    onChange={formik.handleChange}\r\n                    multiline\r\n                    fullWidth\r\n                    maxRows={4}\r\n                />\r\n                <LoadingButton\r\n                    loading={loadingAddEntity}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    disabled={!formik.values.content}\r\n                    sx={{my: 1}}\r\n                    color=\"neutral\"\r\n                >\r\n                    {t('comment_offer.label_comment')}\r\n                </LoadingButton>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction UpdateComment({parentCallbackUpdateComment, parentCallbackCancelUpdateComment, defaultValueUpdate, loadingUpdateEntity}:\r\n                           { parentCallbackUpdateComment: any, parentCallbackCancelUpdateComment: any, defaultValueUpdate: any, loadingUpdateEntity: boolean }) {\r\n\r\n    const [valueBeforCancelUpdate] = React.useState(defaultValueUpdate);\r\n\r\n    const { t} = useTranslation();\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddCommentOffer,\r\n        onSubmit: values => {\r\n            parentCallbackUpdateComment(values.content);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        formik.setFieldValue('content', defaultValueUpdate);\r\n    }, []);\r\n\r\n    const cancelUpdate = () => {\r\n        parentCallbackCancelUpdateComment(valueBeforCancelUpdate);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    id=\"content\"\r\n                    name=\"content\"\r\n                    label=\"Add comment\"\r\n                    value={formik.values.content}\r\n                    onChange={formik.handleChange}\r\n                    multiline\r\n                    fullWidth\r\n                    maxRows={4}\r\n                />\r\n                <Box sx={{my: 1}}>\r\n                    <LoadingButton\r\n                        loading={false}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"button\"\r\n                        sx={{mr: 1}}\r\n                        color=\"neutral\"\r\n                        onClick={cancelUpdate}\r\n                    >\r\n                        {t('common.label_cancel')}\r\n                    </LoadingButton>\r\n                    <LoadingButton\r\n                        loading={loadingUpdateEntity}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"submit\"\r\n                        disabled={!formik.values.content}\r\n                        color=\"success\"\r\n                    >\r\n                        {t('common.label_update')}\r\n                    </LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {checkMobileDesktopBrowser} from \"../../utils/utils-functions\";\r\nimport FacebookShareButton from \"react-share/lib/FacebookShareButton\";\r\nimport {SourceProvider} from \"../../enums/source-provider\";\r\nimport IconButton from \"@mui/material/IconButton/IconButton\";\r\n\r\nclass CustomShare extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            shareData: {\r\n                title: 'MDN',\r\n                text: 'Learn web development on MDN!',\r\n                url: 'https://developer.mozilla.org'\r\n            }\r\n        }\r\n        this.handleShare = this.handleShare.bind(this);\r\n    }\r\n\r\n    handleShare(){\r\n        navigator.share(this.state.shareData).then((result) => {});\r\n    }\r\n\r\n    render() {\r\n        return checkMobileDesktopBrowser()===SourceProvider.MOBILE_BROWSER ?\r\n            <IconButton onClick={this.handleShare}>\r\n                {this.props.children}\r\n            </IconButton>\r\n            :\r\n            <FacebookShareButton\r\n                url={this.props.url}\r\n                quote=\"quote\" >\r\n                {this.props.children}\r\n            </FacebookShareButton>\r\n    }\r\n}\r\n\r\nexport default CustomShare;","import React from 'react';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport CardActions from '@mui/material/CardActions/CardActions';\r\nimport Button from '@mui/material/Button/Button';\r\nimport CardHeader from '@mui/material/CardHeader/CardHeader';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport EmailIcon from '@mui/icons-material/EmailOutlined';\r\nimport MessageIcon from '@mui/icons-material/MessageOutlined';\r\nimport Box from '@mui/material/Box/Box';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport DialogActions from '@mui/material/DialogActions/DialogActions';\r\nimport Dialog from '@mui/material/Dialog/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText/DialogContentText';\r\nimport {IOffer} from \"../../../../shared/model/offer.model\";\r\nimport {IUser} from \"../../../../shared/model/user.model\";\r\nimport {\r\n    convertDateTimeToServer,\r\n    getBaseImageUrl,\r\n    getFullnameUser,\r\n    getUserAvatar\r\n} from \"../../../../shared/utils/utils-functions\";\r\nimport {ALL_APP_ROUTES} from \"../../../../core/config/all-app-routes\";\r\nimport ListItemButton from \"@mui/material/ListItemButton/ListItemButton\";\r\nimport {TransitionModal} from \"../../../../shared/pages/transition-modal\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    initialValuesAddMessageDetailsOffer,\r\n    validationSchemaAddMessageDetailsOffer\r\n} from \"../validation/initial-values-add-comment-offer\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport CustomShare from \"../../../../shared/components/custom-share/CustomShare\";\r\nimport Snackbar from \"@mui/material/Snackbar/Snackbar\";\r\nimport ProblemeDeclaration from \"../../../probleme-declaration/ProblemeDeclaration\";\r\nimport {StyledBadge} from \"../../../../shared/pages/styled-badge\";\r\n\r\n\r\n\r\n\r\nconst initialValues = initialValuesAddMessageDetailsOffer;\r\n\r\nexport default function RightDetailsOffer({offerEntity, parentCallback, currentUser, isAuthenticated, myFavoriteUser, createConversationCallback, addSuccessConversation, isOnLine}:\r\n                                              {\r\n                                                  offerEntity: IOffer | undefined,\r\n                                                  parentCallback: any,\r\n                                                  currentUser: IUser,\r\n                                                  isAuthenticated: boolean,\r\n                                                  myFavoriteUser: boolean,\r\n                                                  createConversationCallback: any,\r\n                                                  addSuccessConversation: boolean,\r\n                                                  isOnLine: any\r\n                                              }) {\r\n\r\n    const [defaultValues, setDefaultValues] = React.useState<any>();\r\n    const [messageAlert, setMessageAlert] = React.useState('');\r\n    const [openAlert, setOpenAlert] = React.useState(false);\r\n    const [contactWithPhone, setContactWithPhone] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddMessageDetailsOffer,\r\n        onSubmit: values => {\r\n            if (currentUser.id !== offerEntity?.user?.id && isAuthenticated) {\r\n                setDefaultValues(values);\r\n                sendMessage(values.content);\r\n            }\r\n        },\r\n    });\r\n\r\n    const setResetValues = () => {\r\n        formik.setFieldValue('fullName', getFullnameUser(currentUser));\r\n        formik.setFieldValue('email', currentUser.email);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if( !isEmpty(currentUser)) {\r\n            setResetValues();\r\n        }\r\n    }, [currentUser])\r\n\r\n    React.useEffect(() =>{\r\n        if(addSuccessConversation){\r\n            formik.resetForm();\r\n            setResetValues();\r\n        }\r\n    }, [addSuccessConversation])\r\n\r\n    const sendMessage = (content: string) => {\r\n        const entity = {\r\n            content: content,\r\n            conversation: {\r\n                dateCreated: convertDateTimeToServer(new Date()),\r\n                senderUser: null,\r\n                receiverUser: {\r\n                    id: offerEntity?.user?.id,\r\n                    email: offerEntity?.user?.email,\r\n                },\r\n            },\r\n        };\r\n        createConversationCallback(entity);\r\n    };\r\n\r\n    const [openFavoriteModal, setOpenFavoriteModal] = React.useState(false);\r\n    const handleClickOpenFavoriteModal = (event: any) => {\r\n        event.stopPropagation();\r\n        if (!myFavoriteUser) {\r\n            setOpenFavoriteModal(true);\r\n        }\r\n    };\r\n    const handleCloseFavoriteModal = () => {\r\n        setOpenFavoriteModal(false);\r\n    };\r\n\r\n    const handleAddFavoriteModal = () => {\r\n        setOpenFavoriteModal(false);\r\n        parentCallback(offerEntity?.user?.id);\r\n    };\r\n\r\n    const handleExpandClick = () => {\r\n    };\r\n\r\n    const redirectToPorfile = (userId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.PROFILE + '/' + userId);\r\n        }, 300);\r\n    };\r\n\r\n    const getFavoriteUserColor = () => {\r\n        if (myFavoriteUser) {\r\n            return 'red';\r\n        }\r\n        return 'color: rgba(0, 0, 0, 0.54)';\r\n    };\r\n\r\n    const renderDialogFavoriteUser = () => {\r\n        return (\r\n            <Dialog\r\n                open={openFavoriteModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseFavoriteModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t('details_offer.title_add_favrite_user')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t('details_offer.description_add_favrite_user')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseFavoriteModal} color=\"neutral\">\r\n                        {t('common.label_cancel')}\r\n                    </Button>\r\n                    <Button onClick={handleAddFavoriteModal} color=\"success\">\r\n                        {t('common.label_favorite')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const openPositionInGoogleMap = () => {\r\n        console.log('offerEntity ', offerEntity);\r\n        if(!offerEntity?.address){\r\n            setMessageAlert(t('details_offer.not_address_found_itenarary'));\r\n            setOpenAlert(true);\r\n        }\r\n        else{\r\n            window.open('https://www.google.com/maps/@35.8235978,10.6309176,15z', '_new');\r\n        }\r\n\r\n    }\r\n\r\n    const openItenraireGoogleMap = () => {\r\n        console.log('offerEntity ', offerEntity);\r\n        if(!offerEntity?.address){\r\n            setMessageAlert(t('details_offer.not_address_found_itenarary'));\r\n            setOpenAlert(true);\r\n        }\r\n        else if(!currentUser?.address){\r\n            setMessageAlert(t('details_offer.miss_address_account'));\r\n            setOpenAlert(true);\r\n        }\r\n        else{\r\n            window.open('https://www.google.com/maps/dir/'+currentUser?.address?.lng+','+currentUser?.address?.lng+'/'+offerEntity?.address?.lng+','+offerEntity?.address?.lng+'', '_new');\r\n        }\r\n\r\n    }\r\n\r\n    const handleCloseAlert = () => {\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    const contactWithFacebookcontactWithFacebook = () => {\r\n        if(!offerEntity?.user?.linkProfileFacebook){\r\n            setMessageAlert(t('details_offer.message_not_link_profile_facebook_exist'));\r\n            setOpenAlert(true);\r\n        }else{\r\n            window.open(offerEntity?.user?.linkProfileFacebook, '_new');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} sm={12}>\r\n            <Card>\r\n                <Typography paragraph sx={{m: 2}}>\r\n                    {t('details_offer.about_seller')}\r\n                </Typography>\r\n                <ListItemButton  onClick={() => redirectToPorfile(offerEntity?.user?.id)} sx={{display: 'block'}}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            offerEntity ? (\r\n                                    <StyledBadge\r\n                                        overlap=\"circular\"\r\n                                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                        variant=\"dot\"\r\n                                        color={isOnLine(offerEntity.user?.email) ? 'success' : 'error'}>\r\n                                            <Avatar\r\n                                                aria-label=\"recipe\"\r\n                                                alt={offerEntity.user?.imageUrl}\r\n                                                src={getUserAvatar(offerEntity.user?.id, offerEntity.user?.imageUrl, offerEntity.user?.sourceRegister)}\r\n                                                sx={{border: '1px solid #b9b9b9'}}\r\n                                            >{getFullnameUser(offerEntity?.user)?.charAt(0)}</Avatar>\r\n                                    </StyledBadge>\r\n                            ) : null\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\"\r\n                                        sx={{color: getFavoriteUserColor()}}\r\n                                        onClick={(event: any) => handleClickOpenFavoriteModal(event)}\r\n                                        disabled={offerEntity?.user?.id === currentUser?.id}>\r\n                                <FavoriteIcon/>\r\n                            </IconButton>\r\n                        }\r\n                        title={\r\n                            <React.Fragment>\r\n                                {getFullnameUser(offerEntity?.user)}\r\n                            </React.Fragment>\r\n                        }\r\n                        subheader={offerEntity?.user?.email}\r\n                        onClick={() => redirectToPorfile(offerEntity?.user?.id)}\r\n                        role=\"button\"\r\n                    />\r\n                </ListItemButton >\r\n\r\n                {offerEntity?.user?.address ? (\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {offerEntity?.user?.address.city}, {offerEntity?.user?.address.country}\r\n                        </Typography>\r\n                    </CardContent>\r\n                ) : null}\r\n\r\n                <CardActions disableSpacing sx={{backgroundColor: 'rgba(0, 0, 0, 0.74);'}}>\r\n                    <IconButton\r\n                        aria-label=\"add to favorites\"\r\n                        sx={{color: getFavoriteUserColor()}}\r\n                        onClick={handleClickOpenFavoriteModal}\r\n                        disabled={offerEntity?.user?.id === currentUser?.id}\r\n                    >\r\n                        <FavoriteIcon/>\r\n                    </IconButton>\r\n\r\n                    <CustomShare url=\"https://github.com/nygardk/react-share/blob/master/demo/Demo.tsx\">\r\n                        <Box sx={{color: '#fff'}}>\r\n                            <ShareIcon/>\r\n                        </Box>\r\n                    </CustomShare>\r\n\r\n                    <IconButton sx={{marginLeft: 'auto', color: '#fff'}} onClick={handleExpandClick}>\r\n                        <ExpandMoreIcon/>\r\n                    </IconButton>\r\n                </CardActions>\r\n\r\n                <Grid container item sx={{mt: 3}}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Box sx={{'& > :not(style)': {m: 1}}}>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <Typography paragraph className=\"text-center\">\r\n                                    {t('details_offer.send_message')}\r\n                                </Typography>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <AccountCircle sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"fullName\"\r\n                                               name=\"fullName\"\r\n                                               label={t('common.label_name')}\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               disabled={!(formik.touched.fullName && Boolean(formik.errors.fullName))}\r\n                                               value={formik.values.fullName}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.fullName && Boolean(formik.errors.fullName)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end', my: 2}}>\r\n                                    <EmailIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"email\"\r\n                                               name=\"email\"\r\n                                               label={t('common.label_email')}\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               disabled={!(formik.touched.email && Boolean(formik.errors.email))}\r\n                                               value={formik.values.email}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.email && Boolean(formik.errors.email)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <MessageIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"content\"\r\n                                               name=\"content\"\r\n                                               label=\"Message\"\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               multiline\r\n                                               rows={4}\r\n                                               value={formik.values.content}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.content && Boolean(formik.errors.content)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <Button variant=\"outlined\" size=\"small\" fullWidth sx={{mt: 2, mb: 2}}\r\n                                            color=\"neutral\"\r\n                                            type=\"submit\"\r\n                                            disabled={currentUser.id === offerEntity?.user?.id}>\r\n                                        {t('common.label_send')}\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} sx={{p: 2, borderLeft: '1px solid #cfcbcb;'}}>\r\n                        <Typography paragraph className=\"text-center\">\r\n                            {t('details_offer.contact_with')}\r\n                        </Typography>\r\n\r\n                        <Button variant=\"outlined\" startIcon={<FacebookIcon/>} fullWidth sx={{mt: 3}} onClick={() => contactWithFacebookcontactWithFacebook()}>\r\n                            Facebook\r\n                        </Button>\r\n\r\n                        <Button variant=\"outlined\" startIcon={<PhoneIcon/>} fullWidth sx={{mt: 3}} onClick={() => setContactWithPhone(!contactWithPhone)}>\r\n                            {contactWithPhone ? offerEntity?.user?.phone : t('details_offer.show_number')}\r\n                        </Button>\r\n\r\n                        <a href={`mailto:${offerEntity?.user?.email}`} style={{textDecoration: 'none'}}>\r\n                            <Button variant=\"outlined\" startIcon={<EmailIcon/>} fullWidth sx={{mt: 3}}>\r\n                                {t('details_offer.send_email')}\r\n                            </Button>\r\n                        </a>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n\r\n            <Grid container item spacing={2} sx={{mt: 1}}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card onClick={openPositionInGoogleMap}>\r\n                        <CardContent>\r\n                            <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                Découvrir le quartier\r\n                            </Typography>\r\n                            <div style={{maxHeight: 400, marginTop: 30}}>\r\n                                <img\r\n                                    className=\"img-fluid\"\r\n                                    src={getBaseImageUrl('/assets/images/offer/details-offer/desktop-map-neighbourhood.ext.svg')}\r\n                                    alt=\"desktop-map-neighbourhood\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card onClick={openItenraireGoogleMap}>\r\n                        <CardContent>\r\n                            <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                Découvrir le quartier\r\n                            </Typography>\r\n                            <div style={{maxHeight: 400, marginTop: 30}}>\r\n                                <img\r\n                                    className=\"img-fluid\"\r\n                                    src={getBaseImageUrl('/assets/images/offer/details-offer/desktop-time-of-travel-address.ext.svg')}\r\n                                    alt=\"desktop-time-of-travel-address\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item spacing={2} sx={{mt: 1}}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ProblemeDeclaration />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <div>{renderDialogFavoriteUser()}</div>\r\n            <div>\r\n                <Snackbar\r\n                    open={openAlert}\r\n                    autoHideDuration={5000}\r\n                    onClose={handleCloseAlert}\r\n                    message={messageAlert}\r\n                />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Divider from \"@mui/material/Divider/Divider\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {getBaseImageUrl} from \"../../../../shared/utils/utils-functions\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton/LoadingButton\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {InputQuantity} from \"../../../../shared/components/input-quantity/InputQuantity\";\r\n\r\nexport default function CartSellDetailsOffer({parentCallbackAddCart, loadingAddCart}:\r\n    {parentCallbackAddCart: Function, loadingAddCart: boolean}) {\r\n    const [value, setValue] = React.useState<string>('1');\r\n    const [valueQuantity, setValueQuantity] = React.useState<number>(1);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const changeQuantity = (data: any) => {\r\n        console.log('data ', data);\r\n        setValueQuantity(data);\r\n    }\r\n\r\n    const addNewCart = () => {\r\n        console.log('valueQuantity ', valueQuantity);\r\n        parentCallbackAddCart({\r\n            quantity: valueQuantity\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', typography: 'body1', my: 3 }}>\r\n            <TabContext value={value}>\r\n                <TabPanel value=\"1\">\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                                <InfoOutlinedIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                En Stock\r\n                            </Typography>\r\n                            <Box sx={{my: 2}}>\r\n                                <InputQuantity parentCallChangeQuantity={changeQuantity} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item  xs={12} md={6}>\r\n                            <List sx={{ }}>\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Remy Sharp\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/creditcard.svg')} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Paiement facile\"\r\n                                        secondary=\"Payer vos articles commandés au comptant lors de la livraison\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Travis Howard\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/local-shipping.svg')}/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Politique de livraison\"\r\n                                        secondary=\"Remise de 5% à partir de 50dt d'achats sur les produits mazroub exclusive\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Cindy Baker\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/loop.svg')}/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Politique de retours\"\r\n                                        secondary=\"Remboursement entre 3 et 12 jours à partir la date de réception de votre retour\"\r\n                                    />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{  my: 2 }} display=\"flex\" justifyContent=\"center\">\r\n                        <LoadingButton loading={loadingAddCart} fullWidth\r\n                                       variant=\"contained\"\r\n                                       color=\"success\"\r\n                                       onClick={addNewCart}>\r\n                            {t('common.label_add')}\r\n                        </LoadingButton>\r\n                    </Box>\r\n                </TabPanel>\r\n                <TabPanel value=\"2\">Acheter directement</TabPanel>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <TabList onChange={handleChange} aria-label=\"lab API tabs example\" centered>\r\n                        <Tab label=\"Ajouter au panier\" value=\"1\" />\r\n                        <Tab label=\"Acheter directement\" value=\"2\" />\r\n                    </TabList>\r\n                </Box>\r\n            </TabContext>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {\r\n    addCommentOffer,\r\n    getEntitiesByOffer as getListCommentsByOffer\r\n} from \"../../../shared/reducers/comment-offer.reducer\";\r\n\r\nimport {getEntitywithFavorite} from \"../../../shared/reducers/offer.reducer\";\r\nimport { reset as resetAllFavoriteOfferUser } from '../../../shared/reducers/offer.reducer';\r\nimport { reset as resetCommentOffer } from '../../../shared/reducers/comment-offer.reducer';\r\nimport {useParams} from \"react-router\";\r\nimport Zoom from \"@mui/material/Zoom/Zoom\";\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress/CircularProgress\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport Card from \"@mui/material/Card/Card\";\r\nimport CardContent from \"@mui/material/CardContent/CardContent\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddLocation from '@mui/icons-material/AddLocation';\r\nimport EmojiObjectsIcon from '@mui/icons-material/EmojiObjects';\r\nimport CardActions from \"@mui/material/CardActions/CardActions\";\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport FlagIcon from '@mui/icons-material/Flag';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport SwiperDetailsOffer from \"./ui-segments/SwiperDetailsOffer\";\r\nimport CommentDetailsOffer from \"./ui-segments/CommentDetailsOffer\";\r\nimport RightDetailsOffer from './ui-segments/RightDetailsOffer';\r\nimport {ICommentOffer} from \"../../../shared/model/comment-offer.model\";\r\nimport { createEntity as createEntityFavoriteUser } from '../../../shared/reducers/favorite-user.reducer';\r\nimport { updateEntity as updateComment } from '../../../shared/reducers/comment-offer.reducer';\r\nimport { deleteEntity as deleteComment } from '../../../shared/reducers/comment-offer.reducer';\r\nimport { createEntity as reportComment } from '../../../shared/reducers/report-comment-offer.reducer';\r\nimport { createEntity as createEntityReportOffer } from '../../../shared/reducers/report-offer.reducer';\r\nimport { createEntity as addCart } from '../../../shared/reducers/cart.reducer';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\n\r\nimport './DetailsOffer.scss';\r\nimport {convertDateTimeToServer} from \"../../../shared/utils/utils-functions\";\r\nimport Dialog from \"@mui/material/Dialog/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions/DialogActions\";\r\nimport {TransitionModal} from \"../../../shared/pages/transition-modal\";\r\nimport {IReportOffer} from \"../../../shared/model/report-offer.model\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {addEventGA, AllModulesEventGA} from \"../../../shared/providers/google-anaylitics\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {createConversation} from \"../../../shared/reducers/conversation.reducer\";\r\nimport {IConversationContent} from \"../../../shared/model/conversation-content\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary/AccordionSummary\";\r\nimport Accordion from \"@mui/material/Accordion/Accordion\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport CustomShare from \"../../../shared/components/custom-share/CustomShare\";\r\nimport i18n from \"i18next\";\r\nimport CartSellDetailsOffer from \"./ui-segments/CartSellDetailsOffer\";\r\nimport Tooltip from \"@mui/material/Tooltip/Tooltip\";\r\nimport {ICart} from \"../../../shared/model/cart.model\";\r\nimport {OfferTypeContact} from \"../../../shared/enums/offer-type-contact.enum\";\r\nimport Alert from '@mui/material/Alert';\r\n\r\nexport interface IDetailsOfferProps extends StateProps, DispatchProps{}\r\n\r\nexport const DetailsOffer = (props: IDetailsOfferProps) => {\r\n    const [startAnimation, setStartAnimation] = React.useState(false);\r\n    const [isFavoriteUser, setIsFavoriteUser] = React.useState(false);\r\n    const [openReportOfferModal, setOpenReportOfferModal] = React.useState(false);\r\n    const [activeCommentPage, setActiveCommentPage] = React.useState(-1);\r\n    const [expandedDetailsOffer, setExpandedDetailsOffer] = React.useState<boolean>(true);\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        resetAllFavoriteOfferUser,\r\n        resetCommentOffer,\r\n        getEntitywithFavorite,\r\n        updateComment,\r\n        favoriteUserOffer,\r\n        loadingEntityFavoriteUserOffer,\r\n        isAuthenticated,\r\n        getListCommentsByOffer,\r\n        loadingCommentsByOffer,\r\n        listCommentsByOffer,\r\n        account,\r\n        loadingUpdateEntity,\r\n        addSuccessComment,\r\n        updateSuccessComment,\r\n\r\n        addSuccessFavoriteUser,\r\n        createEntityFavoriteUser,\r\n        loadingAddComment,\r\n        totalItemsCommentsByOffer,\r\n        deleteSuccessComment,\r\n        deleteComment\r\n    } = props;\r\n\r\n    React.useEffect(() => {\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n\r\n        resetAllFavoriteOfferUser();\r\n        resetCommentOffer();\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        if(!favoriteUserOffer?.offer?.id && id){\r\n            getEntitywithFavorite(id);\r\n            setActiveCommentPage(0);\r\n        }\r\n    }, [favoriteUserOffer])\r\n\r\n    React.useEffect(() => {\r\n        if(activeCommentPage>=0){\r\n            if(isAuthenticated){\r\n                getListCommentsByOffer(Number(id), activeCommentPage, AllAppConfig.COMMENTS_PER_PAGE, '');\r\n            }\r\n        }\r\n    }, [activeCommentPage])\r\n\r\n    React.useEffect(() => {\r\n        if (favoriteUserOffer && favoriteUserOffer.offer && !loadingEntityFavoriteUserOffer) {\r\n            setIsFavoriteUser(favoriteUserOffer.myFavoriteUser || false);\r\n            setTimeout(() => {\r\n                setStartAnimation(true);\r\n            }, 300)\r\n        }\r\n    }, [favoriteUserOffer]);\r\n\r\n    React.useEffect(() => {\r\n        if(addSuccessComment || updateSuccessComment || deleteSuccessComment){\r\n            resetCommentOffer();\r\n            const idOffer = favoriteUserOffer?.offer?.id || -1;\r\n            getListCommentsByOffer(idOffer, 0, 20, '');\r\n        }\r\n    }, [addSuccessComment, updateSuccessComment, deleteSuccessComment])\r\n\r\n    React.useEffect(() => {\r\n        if(addSuccessFavoriteUser){\r\n            setIsFavoriteUser(true);\r\n        }\r\n    }, [addSuccessFavoriteUser])\r\n\r\n    const handleCallbackAddComment = (content: string) => {\r\n        if (content) {\r\n            const entity: ICommentOffer = {\r\n                createdDate: convertDateTimeToServer(new Date()),\r\n                content: content,\r\n                offer: {\r\n                    id: favoriteUserOffer?.offer?.id,\r\n                    user: {\r\n                        id: favoriteUserOffer?.offer?.user?.id,\r\n                        email: favoriteUserOffer?.offer?.user?.email,\r\n                    },\r\n                },\r\n                user: {},\r\n            };\r\n            props.addCommentOffer(entity);\r\n\r\n            // Add event GA\r\n            addEventGA(AllModulesEventGA.EventOffer.AddCommentOffer.eventName,\r\n                AllModulesEventGA.EventOffer.AddCommentOffer.eventCategory,\r\n                AllModulesEventGA.EventOffer.AddCommentOffer.eventLabel);\r\n        }\r\n    }\r\n\r\n    const handleCallbackDeleteComment = (commentId: number) => {\r\n        deleteComment(commentId);\r\n    }\r\n\r\n    const parentCallbackUpdateComment = (content: string, commentid: number) => {\r\n        let commentUpdate = listCommentsByOffer.find(comment => comment.id === commentid);\r\n        commentUpdate = {\r\n            ...commentUpdate,\r\n            content: content\r\n        }\r\n        updateComment(commentUpdate);\r\n\r\n        // Add event GA\r\n        addEventGA(AllModulesEventGA.EventOffer.UpdateCommentOffer.eventName,\r\n            AllModulesEventGA.EventOffer.UpdateCommentOffer.eventCategory,\r\n            AllModulesEventGA.EventOffer.UpdateCommentOffer.eventLabel);\r\n    };\r\n\r\n    const handleCallbackFavorite = (userId: number) => {\r\n        if (isAuthenticated) {\r\n            if (favoriteUserOffer?.offer?.user?.id !== account?.id) {\r\n                const entity = {\r\n                    favoriteUser: {\r\n                        id: favoriteUserOffer?.offer?.user?.id,\r\n                        username: favoriteUserOffer?.offer?.user?.username,\r\n                    },\r\n                    favoriteDate: convertDateTimeToServer(new Date()),\r\n                };\r\n                createEntityFavoriteUser(entity);\r\n            }\r\n        } else {\r\n            navigate(ALL_APP_ROUTES.LOGIN);\r\n        }\r\n    };\r\n\r\n    const createConversation = (conversation: IConversationContent) => {\r\n        props.createConversation(conversation);\r\n    }\r\n\r\n    const parentCallbackReportComment = (comment: ICommentOffer) => {\r\n        const entity = {\r\n            commentOffer: comment,\r\n            user: {}\r\n        }\r\n        props.reportComment(entity);\r\n    }\r\n\r\n    const parentCallbackLoadMoreComments = () => {\r\n        setActiveCommentPage(activeCommentPage+1);\r\n    }\r\n\r\n    const reportOffer = () => {\r\n        setOpenReportOfferModal(true);\r\n    }\r\n    const handleCloseReportOfferModal = () => {\r\n        setOpenReportOfferModal(false);\r\n    }\r\n    const handleAddReportOfferModal = () => {\r\n        setOpenReportOfferModal(false);\r\n        const entity: IReportOffer = {\r\n            offer: favoriteUserOffer?.offer,\r\n            user: {}\r\n        }\r\n        props.createEntityReportOffer(entity);\r\n    }\r\n    const renderDialogReportOffer = () => {\r\n        return (\r\n            <Dialog\r\n                open={openReportOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseReportOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\" >\r\n                <DialogTitle>\r\n                    {t('details_offer.title_dialog_report_offer')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t('details_offer.description_dialog_report_offer')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseReportOfferModal} color=\"neutral\">\r\n                        {t('common.label_cancel')}\r\n                    </Button>\r\n                    <Button color=\"success\" onClick={handleAddReportOfferModal}>\r\n                        {t('common.label_report')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const handleChangeDetailsOffer = () => {\r\n        setExpandedDetailsOffer(!expandedDetailsOffer);\r\n    }\r\n\r\n    const getNameCategory = (): string => {\r\n        if( defaultLanguage==='en' ){\r\n            return favoriteUserOffer?.offer?.category?.titleEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return favoriteUserOffer?.offer?.category?.titleFr || '';\r\n        }\r\n        return favoriteUserOffer?.offer?.category?.titleAr || '';\r\n    }\r\n\r\n    const isOnLine = (email: string) => {\r\n        return props.listConnectedUsers.findIndex(item => item.principal.email==email) >=0;\r\n    }\r\n\r\n    const addCart = (cart: ICart) => {\r\n        if( isAuthenticated){\r\n            const entity: ICart = {\r\n                quantity: cart.quantity,\r\n                sellOffer: {\r\n                    id: favoriteUserOffer?.offer?.id\r\n                }\r\n            }\r\n            console.log('entity ', entity);\r\n            props.addCart(entity);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n\r\n            {\r\n                loadingEntityFavoriteUserOffer ?\r\n                    <Box sx={{ paddingTop: 10, textAlign: 'center' }}>\r\n                        <CircularProgress color=\"inherit\"  />\r\n                    </Box> : null\r\n            }\r\n            {/*<Zoom in={startAnimation}>*/}\r\n                <Container maxWidth=\"xl\" className=\"details-offer-client\">\r\n                    <Grid\r\n                        container\r\n                        style={{\r\n                            paddingTop: 10,\r\n                        }} >\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                                    SRF\r\n                                </Link>\r\n                                <Link color=\"inherit\" to={ALL_APP_ROUTES.SEARCH}>\r\n                                    {t('common.label_search')}\r\n                                </Link>\r\n                                <Typography color=\"text.primary\">{favoriteUserOffer?.offer?.title}</Typography>\r\n                            </Breadcrumbs>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {\r\n                        loadingEntityFavoriteUserOffer ?\r\n                            null :\r\n                            <Grid\r\n                                container\r\n                                style={{\r\n                                    paddingTop: 50,\r\n                                }}\r\n                            >\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <SwiperDetailsOffer {...favoriteUserOffer?.offer} />\r\n                                    <Zoom in={startAnimation}>\r\n                                        <Card sx={{mb: 3}}>\r\n                                            <CardContent>\r\n                                                {favoriteUserOffer?.offer?.amount ? (\r\n                                                    <Typography variant=\"h4\" sx={{ textAlign: 'center', fontWeight: 600 }}  className=\"red-color\">\r\n                                                        $ {favoriteUserOffer?.offer?.amount} DT\r\n                                                    </Typography>\r\n                                                ) : null}\r\n\r\n                                                <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                                                    <InfoOutlinedIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                    {favoriteUserOffer?.offer?.typeOffer === TypeOfferEnum.Sell ? (\r\n                                                        t('common.for_sell')\r\n                                                    ) : favoriteUserOffer?.offer?.typeOffer === TypeOfferEnum.Rent ? (\r\n                                                        t('common.for_rent')\r\n                                                    ) : favoriteUserOffer?.offer?.typeOffer === TypeOfferEnum.Find ? (\r\n                                                        t('common.for_find')\r\n                                                    ) : null}\r\n                                                </Typography>\r\n\r\n                                                {favoriteUserOffer?.offer?.startDate && favoriteUserOffer?.offer?.endDate ? (\r\n                                                    <Box>\r\n                                                        <Typography color=\"text.secondary\" gutterBottom>\r\n                                                            {t('common.label_start_date')}:&nbsp;<strong><ConvertReactTimeAgo convertDate={favoriteUserOffer?.offer?.startDate} /></strong>\r\n                                                        </Typography>\r\n                                                        <Typography color=\"text.secondary\" gutterBottom display=\"flex\">\r\n                                                            {t('common.label_end_date')}:&nbsp;<strong><ConvertReactTimeAgo convertDate={favoriteUserOffer?.offer?.endDate} /></strong>\r\n                                                        </Typography>\r\n                                                    </Box>\r\n                                                ) : null}\r\n\r\n                                                {\r\n                                                    favoriteUserOffer?.offer?.typePeriodRent ? <Typography color=\"text.secondary\" gutterBottom display=\"flex\">\r\n                                                        {t('common.label_period')}:&nbsp;\r\n                                                        <strong>{t('common.type_periode_rent_'+favoriteUserOffer?.offer?.typePeriodRent)}&nbsp;</strong>\r\n                                                    </Typography> : null\r\n                                                }\r\n\r\n\r\n                                                <Typography variant=\"h5\" component=\"div\" sx={{ mt: 2 }}>\r\n                                                    {favoriteUserOffer?.offer?.title}\r\n                                                </Typography>\r\n\r\n                                                <Typography sx={{ fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                    <AccessTimeIcon fontSize=\"small\" sx={{mr: 0.9}}/> <ConvertReactTimeAgo convertDate={favoriteUserOffer?.offer?.dateCreated} />\r\n                                                </Typography>\r\n                                                {\r\n                                                    favoriteUserOffer?.offer?.address ?\r\n                                                        <Typography sx={{ mb: 1.8, fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                            <AddLocation fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                            {favoriteUserOffer?.offer?.address?.city}, {favoriteUserOffer?.offer?.address?.country}\r\n                                                        </Typography> : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    favoriteUserOffer?.offer?.category ?\r\n                                                        <Typography sx={{ mb: 1.8, fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                            <EmojiObjectsIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                            {t('details_offer.label_category')} {getNameCategory()}\r\n                                                        </Typography> : null\r\n                                                }\r\n\r\n                                                <Accordion sx={{mt: '40px !important'}} elevation={0} expanded={expandedDetailsOffer} onChange={handleChangeDetailsOffer}>\r\n                                                    <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon sx={{backgroundColor: 'yellow', borderRadius: '50%'}}/>}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        className=\"bg-brown\">\r\n                                                        {t('details_offer.label_details_offer')}\r\n                                                    </AccordionSummary>\r\n                                                    <AccordionDetails>\r\n                                                        <div dangerouslySetInnerHTML={{ __html: favoriteUserOffer?.offer?.description || '' }}></div>\r\n                                                    </AccordionDetails>\r\n                                                </Accordion>\r\n\r\n                                            </CardContent>\r\n                                            <CardActions disableSpacing>\r\n\r\n                                                <CustomShare url=\"https://github.com/nygardk/react-share/blob/master/demo/Demo.tsx\">\r\n                                                    <Tooltip title={\r\n                                                        <React.Fragment>\r\n                                                            {t('common.label_share')}\r\n                                                        </React.Fragment>\r\n                                                    }>\r\n                                                        <ShareIcon/>\r\n                                                    </Tooltip>\r\n                                                </CustomShare>\r\n\r\n                                                <IconButton sx={{marginLeft: 'auto'}} onClick={reportOffer}>\r\n                                                    <Tooltip title={\r\n                                                        <React.Fragment>\r\n                                                            {t('common.label_report')}\r\n                                                        </React.Fragment>\r\n                                                    }>\r\n                                                        <FlagIcon/>\r\n                                                    </Tooltip>\r\n                                                </IconButton>\r\n\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Zoom>\r\n\r\n                                    {isAuthenticated ? (\r\n                                        <Box sx={{mb: 3}}>\r\n                                            <CommentDetailsOffer\r\n                                                offerEntity={favoriteUserOffer?.offer}\r\n                                                listCommentsByOffer={listCommentsByOffer}\r\n                                                account={account}\r\n                                                isAuthenticated={isAuthenticated}\r\n                                                loadingListComments={loadingCommentsByOffer}\r\n                                                loadingUpdateEntity={loadingUpdateEntity}\r\n                                                loadingAddEntity={loadingAddComment}\r\n                                                parentCallbackAddComment={handleCallbackAddComment}\r\n                                                parentCallbackDeleteComment={handleCallbackDeleteComment}\r\n                                                parentCallbackUpdateComment={parentCallbackUpdateComment}\r\n                                                parentCallbackReportComment={parentCallbackReportComment}\r\n                                                parentCallbackLoadMoreComments={parentCallbackLoadMoreComments}\r\n                                                totalItems={totalItemsCommentsByOffer}\r\n                                            />\r\n                                        </Box>\r\n                                    ) : null}\r\n\r\n                                    {\r\n                                        favoriteUserOffer?.offer?.typeContactClient !== OfferTypeContact.direct && favoriteUserOffer.offer?.typeOffer=== TypeOfferEnum.Sell?\r\n                                            <CartSellDetailsOffer parentCallbackAddCart={addCart}\r\n                                                                  loadingAddCart={props.loadingAddCart}/> : null\r\n                                    }\r\n\r\n                                    {\r\n                                        favoriteUserOffer?.offer?.typeContactClient === OfferTypeContact.direct && favoriteUserOffer.offer?.typeOffer=== TypeOfferEnum.Sell?\r\n                                        <Alert severity=\"warning\">{t('details_offer.offer_contact_direct')}</Alert> : null\r\n                                    }\r\n\r\n                                </Grid>\r\n\r\n                                <Grid container item xs={12} sm={6} sx={{ pl: { xs: 0, sm: 4 } }} spacing={2}>\r\n                                    <RightDetailsOffer\r\n                                        parentCallback={handleCallbackFavorite}\r\n                                        offerEntity={favoriteUserOffer?.offer}\r\n                                        currentUser={account}\r\n                                        isAuthenticated={isAuthenticated}\r\n                                        myFavoriteUser={isFavoriteUser}\r\n                                        createConversationCallback={createConversation}\r\n                                        addSuccessConversation={props.addSuccessConversation}\r\n                                        isOnLine={isOnLine}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                    }\r\n\r\n                </Container>\r\n            {/*</Zoom>*/}\r\n            {renderDialogReportOffer()}\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ user, offer, comment, favoriteUser, reportOffer, reportCommentOffer, conversation, webSocketState, cart }: IRootState) => ({\r\n    isAuthenticated: user.isAuthenticated,\r\n    account: user.currentUser,\r\n\r\n    loadingEntityFavoriteUserOffer: offer.loadingEntityWithFavoriteUser,\r\n    favoriteUserOffer: offer.entityWithFavoriteUser,\r\n\r\n    loadingCommentsByOffer: comment.loadingEntitiesByOffer,\r\n    listCommentsByOffer: comment.entitiesByOffer,\r\n    loadingUpdateEntity: comment.loadingUpdateEntity,\r\n    loadingAddComment: comment.loadingAddEntity,\r\n    addSuccessComment: comment.addSuccess,\r\n    updateSuccessComment: comment.updateSuccess,\r\n    totalItemsCommentsByOffer: comment.totalItemsEntitiesByOffer,\r\n    loadingDeleteComment: comment.loadingDeleteEntity,\r\n    deleteSuccessComment: comment.deleteSuccess,\r\n\r\n    loadingEntityFavoriteUser: favoriteUser.loadingEntity,\r\n    entityFavoriteUser: favoriteUser.entity,\r\n    addSuccessFavoriteUser: favoriteUser.addSuccess,\r\n\r\n    addSuccessReportOffer: reportOffer.reportSuccess,\r\n    loadingEntityReportOffer: reportOffer.loadingReportEntity,\r\n\r\n    addSuccessReportCommentOffer: reportCommentOffer.reportSuccess,\r\n    loadingEntityReportCommentOffer: reportCommentOffer.loadingReportEntity,\r\n\r\n    addSuccessConversation: conversation.addSuccess,\r\n\r\n    listConnectedUsers: webSocketState.listConnectedUsers,\r\n\r\n    loadingAddCart: cart.loadingEntity\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitywithFavorite,\r\n    getListCommentsByOffer,\r\n    addCommentOffer,\r\n    createEntityFavoriteUser,\r\n    resetAllFavoriteOfferUser,\r\n    resetCommentOffer,\r\n    updateComment,\r\n    deleteComment,\r\n    createEntityReportOffer,\r\n    reportComment,\r\n    createConversation,\r\n    addCart\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailsOffer);","import * as Yup from 'yup';\r\n\r\nexport const initialValuesAddCommentOffer = {\r\n    content: '',\r\n};\r\n\r\nexport const validationSchemaAddCommentOffer = Yup.object({\r\n    content: Yup.string().required('Type Offer is required'),\r\n});\r\n\r\n\r\nexport const initialValuesAddMessageDetailsOffer = {\r\n    fullName: '',\r\n    email: '',\r\n    content: '',\r\n};\r\n\r\nexport const validationSchemaAddMessageDetailsOffer = Yup.object({\r\n    fullName: Yup.string().required('Message is required'),\r\n    email: Yup.string().email().required('email_is_required'),\r\n    content: Yup.string().required('Message is required'),\r\n});\r\n\r\nexport const initialValuesQuantityOffer = {\r\n    quantity: 1\r\n}\r\n\r\nexport const validationSchemaQuantityOffer = Yup.object({\r\n    quantity: Yup.number().required('Quantity is required'),\r\n});","import React from 'react';\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {IRootState} from \"../../shared/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@mui/material/TextField/TextField\";\r\nimport MessageIcon from '@mui/icons-material/MessageOutlined';\r\nimport Card from \"@mui/material/Card/Card\";\r\nimport CardContent from \"@mui/material/CardContent/CardContent\";\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport {createEntity} from \"../../shared/reducers/report-probleme.reducer\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nconst initialValuesAddMessage = {\r\n    content: '',\r\n};\r\n\r\nconst validationSchemaAddMessage = Yup.object({\r\n    content: Yup.string().required('Message is required').min(5, 'Min 5 digits').max(2000, 'Max 2000 digits'),\r\n});\r\n\r\nconst initialValues = initialValuesAddMessage;\r\n\r\nexport interface IProblemeDeclarationProps extends StateProps, DispatchProps{}\r\n\r\nexport const ProblemeDeclaration = (props: IProblemeDeclarationProps) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddMessage,\r\n        onSubmit: values => {\r\n            if (props.isAuthenticated) {\r\n                props.createEntity(values);\r\n            }\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(props.addSuccess){\r\n            formik.resetForm();\r\n        }\r\n    }, [props.addSuccess])\r\n\r\n    return(\r\n        <Box>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                            <MessageIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                            <TextField id=\"content\"\r\n                                       name=\"content\"\r\n                                       label=\"Declarer votre probleme\"\r\n                                       variant=\"standard\"\r\n                                       fullWidth\r\n                                       multiline\r\n                                       value={formik.values.content}\r\n                                       onChange={formik.handleChange}\r\n                                       error={formik.touched.content && Boolean(formik.errors.content)}\r\n                                       rows={4}/>\r\n                        </Box>\r\n                        {\r\n                            formik.touched.content && Boolean(formik.errors.content) ? <Box className=\"red-color\">{formik.errors.content}</Box> : null\r\n                        }\r\n                        <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                            <Button variant=\"outlined\" size=\"small\" fullWidth sx={{mt: 2}}\r\n                                    color=\"neutral\"\r\n                                    type=\"submit\">\r\n                                Declarer\r\n                            </Button>\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\nconst mapStateToProps = ({reportProbleme, user}: IRootState) => ({\r\n    loading: reportProbleme.loadingEntity,\r\n    entity: reportProbleme.entity,\r\n    addSuccess: reportProbleme.addSuccess,\r\n\r\n    isAuthenticated: user.isAuthenticated,\r\n    currentUser: user.currentUser,\r\n})\r\nconst mapDispatchToProps = {\r\n    createEntity\r\n}\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProblemeDeclaration);","import Typography from \"@mui/material/Typography/Typography\";\r\nimport ShortcutIcon from \"@mui/icons-material/Shortcut\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Box from \"@mui/material/Box\";\r\nimport * as React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    initialValuesQuantityOffer,\r\n    validationSchemaQuantityOffer\r\n} from \"../../../main-features/offer/details/validation/initial-values-add-comment-offer\";\r\n\r\nconst initialValues = initialValuesQuantityOffer;\r\n\r\nexport function InputQuantity({parentCallChangeQuantity, defaultValue}: {parentCallChangeQuantity: Function, defaultValue?:number | null | undefined}) {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaQuantityOffer,\r\n        onSubmit: values => {\r\n            // parentCallbackAddCart(values)\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(defaultValue){\r\n            formik.setFieldValue('quantity', defaultValue);\r\n        }\r\n    }, [defaultValue])\r\n\r\n    const changeQuantity = (event: any, type: string) => {\r\n        event.stopPropagation();\r\n        if(type==='+' && formik.values.quantity < 100){\r\n            formik.setFieldValue('quantity', formik.values.quantity+1);\r\n            parentCallChangeQuantity(formik.values.quantity+1);\r\n        }\r\n        else if( formik.values.quantity > 1 ){\r\n            formik.setFieldValue('quantity', formik.values.quantity-1);\r\n            parentCallChangeQuantity(formik.values.quantity-1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                <ShortcutIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                Quantité\r\n            </Typography>\r\n            <Paper\r\n                sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 150 }} >\r\n                <IconButton sx={{ p: '10px' }} aria-label=\"menu\"  onClick={(event: any) => changeQuantity(event, '-')}>\r\n                    <RemoveIcon />\r\n                </IconButton>\r\n                <InputBase\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    placeholder=\"1\"\r\n                    inputProps={{ 'aria-label': '1' }}\r\n                    type=\"number\"\r\n                    value={formik.values.quantity}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <IconButton sx={{ p: '10px' }} aria-label=\"directions\" onClick={(event: any) =>  changeQuantity(event, '+')}>\r\n                    <AddIcon />\r\n                </IconButton>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}","import React from \"react\";\r\nimport Observer from \"react-intersection-observer\";\r\nimport { unionize, ofType, UnionOf } from \"unionize\";\r\n\r\n/**\r\n * Valid props for LazyImage components\r\n */\r\nexport type CommonLazyImageProps = ImageProps & {\r\n  // NOTE: if you add props here, remember to destructure them out of being\r\n  // passed to the children, in the render() callback.\r\n\r\n  /** Whether to skip checking for viewport and always show the 'actual' component\r\n   * @see https://github.com/fpapado/react-lazy-images/#eager-loading--server-side-rendering-ssr\r\n   */\r\n  loadEagerly?: boolean;\r\n\r\n  /** Subset of props for the IntersectionObserver\r\n   * @see https://github.com/thebuilder/react-intersection-observer#props\r\n   */\r\n  observerProps?: ObserverProps;\r\n\r\n  /** Use the Image Decode API;\r\n   * The call to a new HTML <img> element’s decode() function returns a promise, which,\r\n   * when fulfilled, ensures that the image can be appended to the DOM without causing\r\n   * a decoding delay on the next frame.\r\n   *  @see: https://www.chromestatus.com/feature/5637156160667648\r\n   */\r\n  experimentalDecode?: boolean;\r\n\r\n  /** Whether to log out internal state transitions for the component */\r\n  debugActions?: boolean;\r\n\r\n  /** Delay a certain duration before starting to load, in ms.\r\n   * This can help avoid loading images while the user scrolls quickly past them.\r\n   * TODO: naming things.\r\n   */\r\n  debounceDurationMs?: number;\r\n};\r\n\r\n/** Valid props for LazyImageFull */\r\nexport interface LazyImageFullProps extends CommonLazyImageProps {\r\n  /** Children should be either a function or a node */\r\n  children: (args: RenderCallbackArgs) => React.ReactNode;\r\n}\r\n\r\n/** Values that the render props take */\r\nexport interface RenderCallbackArgs {\r\n  imageState: ImageState;\r\n  imageProps: ImageProps;\r\n  /** When not loading eagerly, a ref to bind to the DOM element. This is needed for the intersection calculation to work. */\r\n  ref?: React.RefObject<any>;\r\n}\r\n\r\nexport interface ImageProps {\r\n  /** The source of the image to load */\r\n  src: string;\r\n\r\n  /** The source set of the image to load */\r\n  srcSet?: string;\r\n\r\n  /** The alt text description of the image you are loading */\r\n  alt?: string;\r\n\r\n  /** Sizes descriptor */\r\n  sizes?: string;\r\n}\r\n\r\n/** Subset of react-intersection-observer's props */\r\nexport interface ObserverProps {\r\n  /**\r\n   * Margin around the root that expands the area for intersection.\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\r\n   * @default \"50px 0px\"\r\n   * @example Declaration same as CSS margin:\r\n   *  `\"10px 20px 30px 40px\"` (top, right, bottom, left).\r\n   */\r\n  rootMargin?: string;\r\n\r\n  /** Number between 0 and 1 indicating the the percentage that should be\r\n   * visible before triggering.\r\n   * @default `0.01`\r\n   */\r\n  threshold?: number;\r\n}\r\n\r\n/** States that the image loading can be in.\r\n * Used together with LazyImageFull render props.\r\n * External representation of the internal state.\r\n * */\r\nexport enum ImageState {\r\n  NotAsked = \"NotAsked\",\r\n  Loading = \"Loading\",\r\n  LoadSuccess = \"LoadSuccess\",\r\n  LoadError = \"LoadError\"\r\n}\r\n\r\n/** The component's state */\r\nconst LazyImageFullState = unionize({\r\n  NotAsked: {},\r\n  Buffering: {},\r\n  // Could try to make it Promise<HTMLImageElement>,\r\n  // but we don't use the element anyway, and we cache promises\r\n  Loading: {},\r\n  LoadSuccess: {},\r\n  LoadError: ofType<{ msg: string }>()\r\n});\r\n\r\ntype LazyImageFullState = UnionOf<typeof LazyImageFullState>;\r\n\r\n/** Actions that change the component's state.\r\n * These are not unlike Actions in Redux or, the ones I'm inspired by,\r\n * Msg in Elm.\r\n */\r\nconst Action = unionize({\r\n  ViewChanged: ofType<{ inView: boolean }>(),\r\n  BufferingEnded: {},\r\n  // MAYBE: Load: {},\r\n  LoadSuccess: {},\r\n  LoadError: ofType<{ msg: string }>()\r\n});\r\n\r\ntype Action = UnionOf<typeof Action>;\r\n\r\n/** Commands (Cmd) describe side-effects as functions that take the instance */\r\n// FUTURE: These should be tied to giving back a Msg / asynchronoulsy giving a Msg with conditions\r\ntype Cmd = (instance: LazyImageFull) => void;\r\n\r\n/** The output from a reducer is the next state and maybe a command */\r\ntype ReducerResult = {\r\n  nextState: LazyImageFullState;\r\n  cmd?: Cmd;\r\n};\r\n\r\n///// Commands, things that perform side-effects /////\r\n/** Get a command that sets a buffering Promise */\r\nconst getBufferingCmd = (durationMs: number): Cmd => instance => {\r\n  // Make cancelable buffering Promise\r\n  const bufferingPromise = makeCancelable(delayedPromise(durationMs));\r\n\r\n  // Kick off promise chain\r\n  bufferingPromise.promise\r\n    .then(() => instance.update(Action.BufferingEnded()))\r\n    .catch(\r\n      _reason => {}\r\n      //console.log({ isCanceled: _reason.isCanceled })\r\n    );\r\n\r\n  // Side-effect; set the promise in the cache\r\n  instance.promiseCache.buffering = bufferingPromise;\r\n};\r\n\r\n/** Get a command that sets an image loading Promise */\r\nconst getLoadingCmd = (\r\n  imageProps: ImageProps,\r\n  experimentalDecode?: boolean\r\n): Cmd => instance => {\r\n  // Make cancelable loading Promise\r\n  const loadingPromise = makeCancelable(\r\n    loadImage(imageProps, experimentalDecode)\r\n  );\r\n\r\n  // Kick off request for Image and attach listeners for response\r\n  loadingPromise.promise\r\n    .then(_res => instance.update(Action.LoadSuccess({})))\r\n    .catch(e => {\r\n      // If the Loading Promise was canceled, it means we have stopped\r\n      // loading due to unmount, rather than an error.\r\n      if (!e.isCanceled) {\r\n        // TODO: think more about the error here\r\n        instance.update(Action.LoadError({ msg: \"Failed to load\" }));\r\n      }\r\n    });\r\n\r\n  // Side-effect; set the promise in the cache\r\n  instance.promiseCache.loading = loadingPromise;\r\n};\r\n\r\n/** Command that cancels the buffering Promise */\r\nconst cancelBufferingCmd: Cmd = instance => {\r\n  // Side-effect; cancel the promise in the cache\r\n  // We know this exists if we are in a Buffering state\r\n  instance.promiseCache.buffering.cancel();\r\n};\r\n\r\n/**\r\n * Component that preloads the image once it is in the viewport,\r\n * and then swaps it in. Takes a render prop that allows to specify\r\n * what is rendered based on the loading state.\r\n */\r\nexport class LazyImageFull extends React.Component<\r\n  LazyImageFullProps,\r\n  LazyImageFullState\r\n> {\r\n  static displayName = \"LazyImageFull\";\r\n\r\n  /** A central place to store promises.\r\n   * A bit silly, but passing promsises directly in the state\r\n   * was giving me weird timing issues. This way we can keep\r\n   * the promises in check, and pick them up from the respective methods.\r\n   * FUTURE: Could pass the relevant key in Buffering and Loading, so\r\n   * that at least we know where they are from a single source.\r\n   */\r\n  promiseCache: {\r\n    [key: string]: CancelablePromise;\r\n  } = {};\r\n\r\n  initialState = LazyImageFullState.NotAsked();\r\n\r\n  /** Emit the next state based on actions.\r\n   *  This is the core of the component!\r\n   */\r\n  static reducer(\r\n    action: Action,\r\n    prevState: LazyImageFullState,\r\n    props: LazyImageFullProps\r\n  ): ReducerResult {\r\n    return Action.match(action, {\r\n      ViewChanged: ({ inView }) => {\r\n        if (inView === true) {\r\n          // If src is not specified, then there is nothing to preload; skip to Loaded state\r\n          if (!props.src) {\r\n            return { nextState: LazyImageFullState.LoadSuccess() }; // Error wtf\r\n          } else {\r\n            // If in view, only load something if NotAsked, otherwise leave untouched\r\n            return LazyImageFullState.match(prevState, {\r\n              NotAsked: () => {\r\n                // If debounce is specified, then start buffering\r\n                if (!!props.debounceDurationMs) {\r\n                  return {\r\n                    nextState: LazyImageFullState.Buffering(),\r\n                    cmd: getBufferingCmd(props.debounceDurationMs)\r\n                  };\r\n                } else {\r\n                  // If no debounce is specified, then start loading immediately\r\n                  return {\r\n                    nextState: LazyImageFullState.Loading(),\r\n                    cmd: getLoadingCmd(props, props.experimentalDecode)\r\n                  };\r\n                }\r\n              },\r\n              // Do nothing in other states\r\n              default: () => ({ nextState: prevState })\r\n            });\r\n          }\r\n        } else {\r\n          // If out of view, cancel if Buffering, otherwise leave untouched\r\n          return LazyImageFullState.match(prevState, {\r\n            Buffering: () => ({\r\n              nextState: LazyImageFullState.NotAsked(),\r\n              cmd: cancelBufferingCmd\r\n            }),\r\n            // Do nothing in other states\r\n            default: () => ({ nextState: prevState })\r\n          });\r\n        }\r\n      },\r\n      // Buffering has ended/succeeded, kick off request for image\r\n      BufferingEnded: () => ({\r\n        nextState: LazyImageFullState.Loading(),\r\n        cmd: getLoadingCmd(props, props.experimentalDecode)\r\n      }),\r\n      // Loading the image succeeded, simple\r\n      LoadSuccess: () => ({ nextState: LazyImageFullState.LoadSuccess() }),\r\n      // Loading the image failed, simple\r\n      LoadError: e => ({ nextState: LazyImageFullState.LoadError(e) })\r\n    });\r\n  }\r\n\r\n  constructor(props: LazyImageFullProps) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n\r\n    // Bind methods\r\n    this.update = this.update.bind(this);\r\n  }\r\n\r\n  update(action: Action) {\r\n    // Get the next state and any effects\r\n    const { nextState, cmd } = LazyImageFull.reducer(\r\n      action,\r\n      this.state,\r\n      this.props\r\n    );\r\n\r\n    // Debugging\r\n    if (this.props.debugActions) {\r\n      if (process.env.NODE_ENV === \"production\") {\r\n        console.warn(\r\n          'You are running LazyImage with debugActions=\"true\" in production. This might have performance implications.'\r\n        );\r\n      }\r\n      console.log({ action, prevState: this.state, nextState });\r\n    }\r\n\r\n    // Actually set the state, and kick off any effects after that\r\n    this.setState(nextState, () => cmd && cmd(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Clear the Promise Cache\r\n    if (this.promiseCache.loading) {\r\n      // NOTE: This does not cancel the request, only the callback.\r\n      // We weould need fetch() and an AbortHandler for that.\r\n      this.promiseCache.loading.cancel();\r\n    }\r\n    if (this.promiseCache.buffering) {\r\n      this.promiseCache.buffering.cancel();\r\n    }\r\n    this.promiseCache = {};\r\n  }\r\n\r\n  // Render function\r\n  render() {\r\n    // This destructuring is silly\r\n    const {\r\n      children,\r\n      loadEagerly,\r\n      observerProps,\r\n      experimentalDecode,\r\n      debounceDurationMs,\r\n      debugActions,\r\n      ...imageProps\r\n    } = this.props;\r\n\r\n    if (loadEagerly) {\r\n      // If eager, skip the observer and view changing stuff; resolve the imageState as loaded.\r\n      return children({\r\n        // We know that the state tags and the enum match up\r\n        imageState: LazyImageFullState.LoadSuccess().tag as ImageState,\r\n        imageProps\r\n      });\r\n    } else {\r\n      return (\r\n        <Observer\r\n          rootMargin=\"50px 0px\"\r\n          // TODO: reconsider threshold\r\n          threshold={0.01}\r\n          {...observerProps}\r\n          onChange={(inView: any) => this.update(Action.ViewChanged({ inView }))}\r\n        >\r\n          {({ ref }: {ref: any}) =>\r\n            children({\r\n              // We know that the state tags and the enum match up, apart\r\n              // from Buffering not being exposed\r\n              imageState:\r\n                this.state.tag === \"Buffering\"\r\n                  ? ImageState.Loading\r\n                  : (this.state.tag as ImageState),\r\n              imageProps,\r\n              ref\r\n            })\r\n          }\r\n        </Observer>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n///// Utilities /////\r\n\r\n/** Promise constructor for loading an image */\r\nconst loadImage = (\r\n  { src, srcSet, alt, sizes }: ImageProps,\r\n  experimentalDecode = false\r\n) =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    if (srcSet) {\r\n      image.srcset = srcSet;\r\n    }\r\n    if (alt) {\r\n      image.alt = alt;\r\n    }\r\n    if (sizes) {\r\n      image.sizes = sizes;\r\n    }\r\n    image.src = src;\r\n\r\n    /** @see: https://www.chromestatus.com/feature/5637156160667648 */\r\n    if (experimentalDecode && \"decode\" in image) {\r\n      return (\r\n        image\r\n          // NOTE: .decode() is not in the TS defs yet\r\n          // TODO: consider writing the .decode() definition and sending a PR\r\n          //@ts-ignore\r\n          .decode()\r\n          .then((image: any) => resolve(image))\r\n          .catch((err: any) => reject(err))\r\n      );\r\n    }\r\n\r\n    image.onload = resolve;\r\n    image.onerror = reject;\r\n  });\r\n\r\n/** Promise that resolves after a specified number of ms */\r\nconst delayedPromise = (ms: number) =>\r\n  new Promise(resolve => setTimeout(resolve, ms));\r\n\r\ninterface CancelablePromise {\r\n  promise: Promise<{}>;\r\n  cancel: () => void;\r\n}\r\n\r\n/** Make a Promise \"cancelable\".\r\n *\r\n * Rejects with {isCanceled: true} if canceled.\r\n *\r\n * The way this works is by wrapping it with internal hasCanceled_ state\r\n * and checking it before resolving.\r\n */\r\nconst makeCancelable = (promise: Promise<any>): CancelablePromise => {\r\n  let hasCanceled_ = false;\r\n\r\n  const wrappedPromise = new Promise<{}>((resolve, reject) => {\r\n      promise.then(\r\n          (val: any) => (hasCanceled_ ? reject({ isCanceled: true }) : resolve(val))\r\n      ).catch(\r\n          (error: any) =>\r\n              hasCanceled_ ? reject({ isCanceled: true }) : reject(error)\r\n      );\r\n  });\r\n\r\n  return {\r\n    promise: wrappedPromise,\r\n    cancel() {\r\n      hasCanceled_ = true;\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  LazyImageFull,\r\n  CommonLazyImageProps,\r\n  ImageState,\r\n  ImageProps\r\n} from \"./LazyImageFull\";\r\n\r\n/**\r\n * Valid props for LazyImage\r\n */\r\nexport interface LazyImageRenderPropArgs {\r\n  imageProps: ImageProps;\r\n}\r\n\r\nexport interface RefArg {\r\n  /** When not loading eagerly, a ref to bind to the DOM element. This is needed for the intersection calculation to work. */\r\n  ref?: React.RefObject<any>;\r\n}\r\n\r\nexport interface LazyImageProps extends CommonLazyImageProps {\r\n  /** Component to display once image has loaded */\r\n  actual: (args: LazyImageRenderPropArgs) => React.ReactElement<{}>;\r\n\r\n  /** Component to display while image has not been requested\r\n   * @default: undefined\r\n   */\r\n  placeholder: (\r\n    args: LazyImageRenderPropArgs & RefArg\r\n  ) => React.ReactElement<{}>;\r\n\r\n  /** Component to display while the image is loading\r\n   * @default placeholder, if defined\r\n   */\r\n  loading?: () => React.ReactElement<{}>;\r\n\r\n  /** Component to display if the image fails to load\r\n   * @default actual (broken image)\r\n   */\r\n  error?: () => React.ReactElement<{}>;\r\n}\r\n\r\n/**\r\n * Component that preloads the image once it is in the viewport,\r\n * and then swaps it in. Has predefined rendering logic, but the\r\n * specifics are up to the caller.\r\n */\r\nexport const LazyImage: React.StatelessComponent<LazyImageProps> = ({\r\n  actual,\r\n  placeholder,\r\n  loading,\r\n  error,\r\n  ...rest\r\n}) => (\r\n  <LazyImageFull {...rest}>\r\n    {({ imageState, imageProps, ref }) => {\r\n      // Call the appropriate render callback based on the state\r\n      // and the props specified, passing on relevant props.\r\n      switch (imageState) {\r\n        case ImageState.NotAsked:\r\n          return !!placeholder && placeholder({ imageProps, ref });\r\n\r\n        case ImageState.Loading:\r\n          // Only render loading if specified, otherwise placeholder\r\n          return !!loading\r\n            ? loading()\r\n            : !!placeholder && placeholder({ imageProps, ref });\r\n\r\n        case ImageState.LoadSuccess:\r\n          return actual({ imageProps });\r\n\r\n        case ImageState.LoadError:\r\n          // Only render error if specified, otherwise actual (broken image)\r\n          return !!error ? error() : actual({ imageProps });\r\n      }\r\n    }}\r\n  </LazyImageFull>\r\n);\r\n\r\nLazyImage.displayName = \"LazyImage\";\r\n","export enum OfferTypeContact {\r\n    direct = 'ContactDirect',\r\n    perCommmande = 'PerCommande'\r\n}","export enum TypeOfferEnum {\r\n  Sell = 'SellOffer',\r\n  Rent = 'RentOffer',\r\n  Find = 'FindOffer',\r\n}\r\n\r\nexport enum PeriodeRent {\r\n  PerYear = 'PerYear',\r\n  PerMonth = 'PerMonth',\r\n  PerDay = 'PerDay',\r\n}\r\n\r\nexport enum TypesFindOffer{\r\n    Carpooling = 'Carpooling',\r\n    Travels = 'Travels',\r\n    Transporter = 'Transporter',\r\n    Job = 'Job'\r\n}\r\n\r\nexport enum TypeDisplaySearchOffers {\r\n    List = 'LIST',\r\n    Grid = 'GRID'\r\n}","import * as React from 'react';\r\nimport ReactTimeAgo from 'react-time-ago';\r\n\r\nexport const ConvertReactTimeAgo = (date: any, locale?: any) => {\r\n  if (date && date.convertDate) {\r\n    return <ReactTimeAgo date={new Date(date.convertDate)} locale='fr-FR' />;\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","import { styled } from '@mui/material/styles';\r\nimport Badge from '@mui/material/Badge';\r\n\r\nexport const StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        backgroundColor: theme.palette.success,\r\n        color: theme.palette.success,\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: 'ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}));","import React from \"react\";\r\nimport {TransitionProps} from \"@mui/material/transitions\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\n\r\n\r\nexport const TransitionModal = React.forwardRef(function Transition(\r\n    props: TransitionProps & {\r\n        children: React.ReactElement<any, any>;\r\n    },\r\n    ref: React.Ref<unknown>\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});"],"names":["images","ImageLightbox","props","state","index","isOpen","listImagesLightBox","listImages","thumbs","titles","listTitles","captions","openLightbox","bind","closeLightbox","moveNext","movePrev","this","setState","callbackClose","prevState","length","lightbox","openLightBox","mainSrc","nextSrc","prevSrc","mainSrcThumbnail","nextSrcThumbnail","prevSrcThumbnail","onCloseRequest","onMovePrevRequest","onMoveNextRequest","onImageLoadError","imageTitle","imageCaption","onContextMenu","e","preventDefault","Component","SwiperDetailsOffer","offerEntity","React","thumbsSwiper","setThumbsSwiper","setOpenLightBox","offerImages","Box","map","item","getImageForOffer","id","path","getFullListImages","title","toString","getFullListTitles","listCaptions","description","getFullListCaptions","Card","sx","mb","spaceBetween","navigation","pagination","clickable","swiper","zoom","lazy","effect","loop","autoplay","delay","disableOnInteraction","className","offerImage","src","alt","actual","imageProps","onClick","placeholder","ref","loading","getBaseImageUrl","AllAppConfig","error","onSwiper","slidesPerView","freeMode","watchSlidesProgress","SwiperCore","Autoplay","EffectFade","Lazy","Zoom","Navigation","Thumbs","useState","setIsOverflowing","expanded","setExpanded","containerRef","useRef","useEffect","el","current","scrollHeight","clientHeight","lines","toggleExpand","type","text","readMoreText","readLessText","onAction","_html","replace","formatText","substring","initialValues","initialValuesAddCommentOffer","CommentDetailsOffer","listCommentsByOffer","account","isAuthenticated","loadingListComments","loadingUpdateEntity","loadingAddEntity","parentCallbackAddComment","parentCallbackDeleteComment","parentCallbackUpdateComment","parentCallbackReportComment","parentCallbackLoadMoreComments","totalItems","commentDeleteId","setCommentDeleteId","commentUpdateId","setCommentUpdateId","showComments","setShowComments","openReportCommentOfferModal","setOpenReportCommentOfferModal","defaultValue","commentReport","setCommentReport","t","useTranslation","handleCallbackUpdateComment","content","commentId","openDeleteCommentModal","setDeleteCommentModal","handleClickCancelDeleteCommentModal","handleClickDeleteDeleteCommentModal","parentCallbackCancelUpdateComment","handleCloseReportCommentOfferModal","handleAddReportCommentOfferModal","List","bgcolor","mt","ListItem","alignItems","button","ListItemText","Typography","variant","component","color","comment","secondaryAction","user","IconButton","edge","mr","display","ModeEdit","cmtId","Delete","reportCommentOffer","Flag","ListItemAvatar","Avatar","getUserAvatar","imageUrl","sourceRegister","border","getFullnameUser","charAt","primary","secondary","convertDate","createdDate","ml","UpdateComment","defaultValueUpdate","Divider","justifyContent","m","CircularProgress","textAlign","AddComment","Dialog","open","TransitionComponent","TransitionModal","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","formik","useFormik","validationSchema","validationSchemaAddCommentOffer","onSubmit","values","setFieldValue","handleSubmit","TextField","name","label","value","onChange","handleChange","multiline","fullWidth","maxRows","LoadingButton","size","disabled","my","valueBeforCancelUpdate","CustomShare","shareData","url","handleShare","navigator","share","then","result","checkMobileDesktopBrowser","SourceProvider","children","quote","initialValuesAddMessageDetailsOffer","RightDetailsOffer","parentCallback","currentUser","myFavoriteUser","createConversationCallback","addSuccessConversation","isOnLine","setDefaultValues","messageAlert","setMessageAlert","openAlert","setOpenAlert","contactWithPhone","setContactWithPhone","navigate","useNavigate","validationSchemaAddMessageDetailsOffer","sendMessage","setResetValues","email","isEmpty","resetForm","entity","conversation","dateCreated","convertDateTimeToServer","Date","senderUser","receiverUser","openFavoriteModal","setOpenFavoriteModal","handleClickOpenFavoriteModal","event","stopPropagation","handleCloseFavoriteModal","handleAddFavoriteModal","redirectToPorfile","userId","setTimeout","ALL_APP_ROUTES","getFavoriteUserColor","Grid","xs","sm","paragraph","ListItemButton","CardHeader","avatar","overlap","anchorOrigin","vertical","horizontal","action","Favorite","subheader","role","address","CardContent","city","country","CardActions","disableSpacing","backgroundColor","Share","marginLeft","ExpandMore","container","AccountCircle","touched","fullName","Boolean","errors","rows","p","borderLeft","startIcon","Facebook","linkProfileFacebook","window","contactWithFacebookcontactWithFacebook","Phone","phone","href","style","textDecoration","spacing","console","log","fontSize","gutterBottom","maxHeight","marginTop","lng","ProblemeDeclaration","Snackbar","autoHideDuration","message","CartSellDetailsOffer","parentCallbackAddCart","loadingAddCart","setValue","valueQuantity","setValueQuantity","width","typography","TabContext","TabPanel","md","InfoOutlined","InputQuantity","parentCallChangeQuantity","data","quantity","borderBottom","borderColor","TabList","newValue","centered","Tab","DetailsOffer","startAnimation","setStartAnimation","isFavoriteUser","setIsFavoriteUser","openReportOfferModal","setOpenReportOfferModal","activeCommentPage","setActiveCommentPage","expandedDetailsOffer","setExpandedDetailsOffer","defaultLanguage","setDefaultLanguage","useParams","resetAllFavoriteOfferUser","resetCommentOffer","getEntitywithFavorite","updateComment","favoriteUserOffer","loadingEntityFavoriteUserOffer","getListCommentsByOffer","loadingCommentsByOffer","addSuccessComment","updateSuccessComment","addSuccessFavoriteUser","createEntityFavoriteUser","loadingAddComment","totalItemsCommentsByOffer","deleteSuccessComment","deleteComment","i18n","lang","offer","Number","idOffer","handleCloseReportOfferModal","handleAddReportOfferModal","createEntityReportOffer","paddingTop","Container","maxWidth","Breadcrumbs","to","Z","in","amount","fontWeight","typeOffer","TypeOfferEnum","startDate","endDate","typePeriodRent","AccessTime","AddLocation","category","EmojiObjects","titleEn","titleFr","titleAr","getNameCategory","Accordion","elevation","AccordionSummary","expandIcon","borderRadius","AccordionDetails","dangerouslySetInnerHTML","__html","Tooltip","addCommentOffer","addEventGA","AllModulesEventGA","commentid","commentUpdate","find","commentOffer","reportComment","typeContactClient","OfferTypeContact","cart","sellOffer","addCart","Alert","severity","pl","favoriteUser","username","favoriteDate","createConversation","listConnectedUsers","findIndex","principal","mapDispatchToProps","connect","reportOffer","webSocketState","loadingEntityWithFavoriteUser","entityWithFavoriteUser","loadingEntitiesByOffer","entitiesByOffer","addSuccess","updateSuccess","totalItemsEntitiesByOffer","loadingDeleteComment","loadingDeleteEntity","deleteSuccess","loadingEntityFavoriteUser","loadingEntity","entityFavoriteUser","addSuccessReportOffer","reportSuccess","loadingEntityReportOffer","loadingReportEntity","addSuccessReportCommentOffer","loadingEntityReportCommentOffer","Yup","required","initialValuesQuantityOffer","validationSchemaQuantityOffer","validationSchemaAddMessage","min","max","createEntity","reportProbleme","changeQuantity","flex","inputProps","ImageState","LazyImageFullState","unionize","NotAsked","Buffering","Loading","LoadSuccess","LoadError","ofType","Action","ViewChanged","BufferingEnded","getLoadingCmd","experimentalDecode","instance","loadingPromise","makeCancelable","loadImage","promise","_res","update","catch","isCanceled","msg","promiseCache","cancelBufferingCmd","buffering","cancel","LazyImageFull","initialState","reducer","nextState","cmd","debugActions","warn","loadEagerly","observerProps","debounceDurationMs","imageState","tag","rootMargin","threshold","inView","match","durationMs","bufferingPromise","delayedPromise","_reason","default","displayName","srcSet","sizes","Promise","resolve","reject","image","Image","srcset","decode","err","onload","onerror","ms","hasCanceled_","val","LazyImage","rest","PeriodeRent","TypesFindOffer","TypeDisplaySearchOffers","ConvertReactTimeAgo","date","locale","StyledBadge","styled","Badge","theme","palette","success","boxShadow","background","paper","position","top","left","height","animation","transform","opacity","direction"],"sourceRoot":""}