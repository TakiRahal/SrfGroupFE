{"version":3,"file":"static/js/358.5ddddaa3.chunk.js","mappings":"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","sources":["main-features/offer/add-update/validation/init-value-add-offer.ts","main-features/offer/add-update/ui-segments/OptionsSellAddOffer.tsx","main-features/offer/add-update/ui-segments/OptionsRentAddOffer.tsx","main-features/offer/add-update/ui-segments/OptionsFindAddOffer.tsx","main-features/offer/add-update/ui-segments/OoptionsCommonAddOffer.tsx","shared/components/sun-editor/CustomSunEditor.tsx","main-features/offer/add-update/AddUpdateOffer.tsx","shared/enums/offer-type-contact.enum.ts","shared/enums/type-offer.enum.ts","shared/pages/transition-modal.tsx","shared/utils/image-url.ts","../node_modules/suneditor/src/lang|sync|/^/.*/.js$"],"sourcesContent":["import * as Yup from 'yup';\r\n\r\nexport const initialValuesAddOffer = {\r\n    typeOffer: '',\r\n    title: '',\r\n    description: '',\r\n    amount: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    typePeriodRent: '',\r\n    address: null,\r\n    category: null,\r\n    typeFindOffer: '',\r\n    typeContactClient: ''\r\n};\r\n\r\nexport const validationSchemaAddOffer = Yup.object({\r\n    typeOffer: Yup.string().required('add_offer.type_offer_require'),\r\n    title: Yup.string().required('add_offer.title_required'),\r\n    description: Yup.string().required('add_offer.description_required'),\r\n    amount: Yup.number().nullable().notRequired(),\r\n    startDate: Yup.date().nullable().notRequired(),\r\n    endDate: Yup.date().nullable().notRequired(),\r\n    typePeriodRent: Yup.string().nullable().notRequired(),\r\n    address: Yup.object().nullable().notRequired().default(null),\r\n    category: Yup.object().nullable().notRequired().default(null),\r\n    typeFindOffer: Yup.string().nullable().notRequired(),\r\n    typeContactClient: Yup.string().nullable().notRequired()\r\n});\r\n\r\nexport const setDefaultsValues = (formik: any, offerEntity: any) => {\r\n    formik.setFieldValue('typeOffer', offerEntity.typeOffer ? offerEntity.typeOffer : '');\r\n    formik.setFieldValue('title', offerEntity.title ? offerEntity.title : '');\r\n    formik.setFieldValue('description', offerEntity.description ? offerEntity.description : '');\r\n    //\r\n    // if (offerEntity.typeOffer === TypeOfferEnum.Sell) {\r\n    //   formik.setFieldValue('amount', offerEntity.title ? offerEntity.amount : null);\r\n    // } else if (offerEntity.typeOffer === TypeOfferEnum.Rent) {\r\n    //   formik.setFieldValue('amount', offerEntity.title ? offerEntity.amount : null);\r\n    //   formik.setFieldValue('startDate', offerEntity.title ? offerEntity.startDate : null);\r\n    //   formik.setFieldValue('endDate', offerEntity.title ? offerEntity.endDate : null);\r\n    // } else if (offerEntity.typeOffer === TypeOfferEnum.Find) {\r\n    //   formik.setFieldValue('amount', offerEntity.title ? offerEntity.amount : null);\r\n    // }\r\n\r\n    formik.setFieldValue('address', offerEntity.address ? offerEntity.address : null);\r\n    formik.setFieldValue('category', offerEntity.category ? offerEntity.category : null);\r\n    return formik;\r\n};\r\n","import * as React from 'react';\r\nimport FormControl from '@mui/material/FormControl/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment/InputAdornment';\r\nimport FormHelperText from '@mui/material/FormHelperText/FormHelperText';\r\nimport Box from '@mui/material/Box/Box';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport FormLabel from \"@mui/material/FormLabel/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio/Radio\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {OfferTypeContact} from \"../../../../shared/enums/offer-type-contact.enum\";\r\n\r\n\r\n\r\nexport default function OptionsSellAddOffer(props: any) {\r\n    const {formik} = props;\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2} sx={{my: 2}}>\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.amount && Boolean(formik.errors.amount)}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">{t('common.label_amount')}</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"amount\"\r\n                            type=\"number\"\r\n                            value={formik.values.amount}\r\n                            onChange={formik.handleChange}\r\n                            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                            label={t('common.label_amount')}\r\n                            size=\"small\"\r\n                        />\r\n                        <FormHelperText\r\n                            id=\"component-helper-text\">{formik.touched.amount && formik.errors.amount}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2} sx={{my: 2}}>\r\n                <Grid item xs={12}>\r\n                    <FormControl>\r\n                        <FormLabel id=\"demo-radio-buttons-group-label\">{t('add_offer.label_type_contact_client')}</FormLabel>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"typeContactClient-label\"\r\n                            id=\"typeContactClient\"\r\n                            name=\"typeContactClient\"\r\n                            value={formik.values.typeContactClient}\r\n                            onChange={formik.handleChange}\r\n                        >\r\n                            <FormControlLabel value={OfferTypeContact.direct} control={<Radio/>} label={t('add_offer.direct_type_contact_client').toString()}/>\r\n                            <FormControlLabel value={OfferTypeContact.perCommmande} control={<Radio/>} label={t('add_offer.per_commande_type_contact_client').toString()}/>\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Box>\r\n    );\r\n}\r\n","import Grid from '@mui/material/Grid';\r\nimport * as React from 'react';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker/DatePicker';\r\nimport FormControl from '@mui/material/FormControl/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment/InputAdornment';\r\nimport FormHelperText from '@mui/material/FormHelperText/FormHelperText';\r\nimport MenuItem from '@mui/material/MenuItem/MenuItem';\r\nimport Select from '@mui/material/Select/Select';\r\nimport {PeriodeRent} from \"../../../../shared/enums/type-offer.enum\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport default function OptionsRentAddOffer(props: any) {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {formik} = props;\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <Grid container spacing={2} sx={{my: 2}}>\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.amount && Boolean(formik.errors.amount)} size=\"small\">\r\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"amount\"\r\n                            type=\"number\"\r\n                            value={formik.values.amount}\r\n                            onChange={formik.handleChange}\r\n                            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                            label=\"Amount\"\r\n                        />\r\n                        <FormHelperText\r\n                            id=\"component-helper-text\">{formik.touched.amount && formik.errors.amount}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.typePeriodRent && Boolean(formik.errors.typePeriodRent)}\r\n                                 className=\"form-control-type-offer\" size=\"small\">\r\n                        <InputLabel id=\"demo-simple-select-label\" className=\"type-offer-select\">\r\n                            {t('add_offer.per_periode')}\r\n                        </InputLabel>\r\n                        <Select\r\n                            id=\"typePeriodRent\"\r\n                            name=\"typePeriodRent\"\r\n                            label={t('add_offer.per_periode')}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            value={formik.values.typePeriodRent}\r\n                            onChange={formik.handleChange}\r\n                        >\r\n                            <MenuItem value={PeriodeRent.PerMonth}>\r\n                                {t('add_offer.per_month')}\r\n                            </MenuItem>\r\n                            <MenuItem value={PeriodeRent.PerDay}>\r\n                                {t('add_offer.per_day')}\r\n                            </MenuItem>\r\n                            <MenuItem value={PeriodeRent.PerYear}>\r\n                                {t('add_offer.per_year')}\r\n                            </MenuItem>\r\n                        </Select>\r\n                        <FormHelperText\r\n                            id=\"component-helper-text\">{formik.touched.typeOffer && formik.errors.typeOffer}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <DatePicker\r\n                        label={t('common.label_start_date')}\r\n                        value={formik.values.startDate}\r\n                        onChange={newValue => formik.setFieldValue('startDate', newValue)}\r\n                        renderInput={params => <TextField {...params} size=\"small\" fullWidth error={false}/>}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <DatePicker\r\n                        label={t('common.label_end_date')}\r\n                        value={formik.values.endDate}\r\n                        onChange={newValue => formik.setFieldValue('endDate', newValue)}\r\n                        renderInput={params => <TextField {...params} size=\"small\" fullWidth error={false}/>}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport {TypesFindOffer} from \"../../../../shared/enums/type-offer.enum\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport FormControl from \"@mui/material/FormControl/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem/MenuItem\";\r\nimport Select from \"@mui/material/Select/Select\";\r\nimport FormHelperText from \"@mui/material/FormHelperText/FormHelperText\";\r\n\r\nexport default function OptionsFindAddOffer(props: any) {\r\n\r\n    const {formik} = props;\r\n\r\n  return (\r\n      <Grid container spacing={1}>\r\n          <Grid item xs={12} md={6}>\r\n              <FormControl\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  error={formik.touched.typeFindOffer && Boolean(formik.errors.typeFindOffer)}\r\n                  className=\"form-control-type-find-offer\"\r\n              >\r\n                  <InputLabel id=\"form-control-type-find-offer\" className=\"type-find-offer-select\">\r\n                      Type Find Offre\r\n                  </InputLabel>\r\n                  <Select\r\n                      id=\"typeFindOffer\"\r\n                      name=\"typeFindOffer\"\r\n                      label=\"Type Find Offer\"\r\n                      labelId=\"demo-simple-select-label\"\r\n                      value={formik.values.typeFindOffer}\r\n                      onChange={formik.handleChange}>\r\n                      <MenuItem value={TypesFindOffer.Carpooling}>\r\n                          CoVoiiturage\r\n                      </MenuItem>\r\n                      <MenuItem value={TypesFindOffer.Travels}>\r\n                          Travels\r\n                      </MenuItem>\r\n                      <MenuItem value={TypesFindOffer.Transporter}>\r\n                          Transporter: from --- to\r\n                      </MenuItem>\r\n                      <MenuItem value={TypesFindOffer.Job}>\r\n                          Travail\r\n                      </MenuItem>\r\n                  </Select>\r\n                  <FormHelperText\r\n                      id=\"form-control-type-find-offer\">{formik.touched.typeFindOffer && formik.errors.typeFindOffer}</FormHelperText>\r\n              </FormControl>\r\n          </Grid>\r\n      </Grid>\r\n\r\n  );\r\n}\r\n\r\n\r\n{/*<div>*/}\r\n    {/*<p>CoVoiiturage</p>*/}\r\n    {/*<p>Travels</p>*/}\r\n    {/*<p>Transporteur: from --- to</p>*/}\r\n{/*</div>*/}","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl/FormControl';\r\nimport FormHelperText from '@mui/material/FormHelperText/FormHelperText';\r\nimport Box from '@mui/material/Box/Box';\r\nimport Autocomplete from '@mui/material/Autocomplete/Autocomplete';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport i18n from \"i18next\";\r\nimport {ICategory} from \"../../../../shared/model/category.model\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport default function OptionsCommonAddOffer(props: any) {\r\n    const {formik, cities, listCategories} = props;\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n    const { t } = useTranslation();\r\n\r\n    React.useEffect(() => {\r\n\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            console.log('lang ', lang);\r\n            setDefaultLanguage(lang);\r\n        });\r\n    }, []);\r\n\r\n    const getValueTitle = (option: ICategory) => {\r\n        if( defaultLanguage==='en' ){\r\n            return option.titleEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return option.titleFr || '';\r\n        }\r\n        return option.titleAr || '';\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2} sx={{my: 2}}>\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.category && Boolean(formik.errors.category)}>\r\n                        <Autocomplete\r\n                            id=\"country-select\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            options={listCategories}\r\n                            value={formik.values.category}\r\n                            onChange={(e, value) => formik.setFieldValue('category', value || null)}\r\n                            autoHighlight\r\n                            getOptionLabel={option => getValueTitle(option) || ''}\r\n                            renderOption={(propsRender, option) => (\r\n                                <Box component=\"li\" {...propsRender}>\r\n                                    {getValueTitle(option)}\r\n                                </Box>\r\n                            )}\r\n                            renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={t('common.label_category')}\r\n                                    inputProps={{\r\n                                        ...params.inputProps,\r\n                                        form: {\r\n                                            autocomplete: 'off',\r\n                                        },\r\n                                        autoComplete: 'off', // disable autocomplete and autofill\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <FormHelperText id=\"component-helper-text\">{formik.errors.category}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.address && Boolean(formik.errors.address)}>\r\n                        <Autocomplete\r\n                            id=\"country-select\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            options={cities}\r\n                            value={formik.values.address}\r\n                            onChange={(e, value) => formik.setFieldValue('address', value || '')}\r\n                            autoHighlight\r\n                            getOptionLabel={option => option?.city || ''}\r\n                            renderOption={(propsRender, option) => (\r\n                                <Box component=\"li\" {...propsRender}>\r\n                                    {option.city}\r\n                                </Box>\r\n                            )}\r\n                            renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={t('common.label_address')}\r\n                                    inputProps={{\r\n                                        ...params.inputProps,\r\n                                        form: {\r\n                                            autocomplete: 'off',\r\n                                        },\r\n                                        autoComplete: 'off', // disable autocomplete and autofill\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <FormHelperText\r\n                            id=\"component-helper-text\">{formik.touched.address && formik.errors.address}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SunEditor  from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nexport function CustomSunEditor({ defaultValue, callbcakHandleChange, placeholder }: { defaultValue: string, callbcakHandleChange: any, placeholder: string }) {\r\n\r\n    const handleChange = (content: any) => {\r\n        callbcakHandleChange(content);\r\n    }\r\n\r\n    return (\r\n        <SunEditor lang=\"en\"\r\n                   setContents={defaultValue}\r\n                   placeholder={placeholder}\r\n                   setOptions={{\r\n                       height: '200',\r\n                       buttonList: [\r\n                           ['undo', 'redo', 'font', 'fontSize', 'formatBlock']\r\n                       ]\r\n                   }}\r\n                   onChange={handleChange}/>\r\n    );\r\n}","import React from 'react';\r\nimport {initialValuesAddOffer, setDefaultsValues, validationSchemaAddOffer} from \"./validation/init-value-add-offer\";\r\nimport { useParams} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport Paper from \"@mui/material/Paper/Paper\";\r\nimport FormControl from \"@mui/material/FormControl/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem/MenuItem\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport Select from \"@mui/material/Select/Select\";\r\nimport FormHelperText from \"@mui/material/FormHelperText/FormHelperText\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput/OutlinedInput\";\r\nimport ImageList from \"@mui/material/ImageList/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem/ImageListItem\";\r\nimport IconButton from \"@mui/material/IconButton/IconButton\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Accordion from \"@mui/material/Accordion/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails/AccordionDetails\";\r\nimport OptionsSellAddOffer from \"./ui-segments/OptionsSellAddOffer\";\r\nimport OptionsRentAddOffer from \"./ui-segments/OptionsRentAddOffer\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport LoadingButton from \"@mui/lab/LoadingButton/LoadingButton\";\r\nimport OptionsFindAddOffer from \"./ui-segments/OptionsFindAddOffer\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    convertDateTimeToServer,\r\n    dataUrlToFile,\r\n    getBaseImageUrl,\r\n    getImageForOffer\r\n} from \"../../../shared/utils/utils-functions\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport Dialog from \"@mui/material/Dialog/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions/DialogActions\";\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {reset as resetOffer, resetFetchOffer} from '../../../shared/reducers/offer.reducer';\r\nimport { createEntity as createEntitySellerOffer } from '../../../shared/reducers/seller-offer.reducer';\r\nimport { updateEntity as updateEntitySell } from '../../../shared/reducers/seller-offer.reducer';\r\nimport { reset as resetSellerOffer } from '../../../shared/reducers/seller-offer.reducer';\r\nimport { createEntity as createEntityRentOffer } from '../../../shared/reducers/rent-offer.reducer';\r\nimport { updateEntity as updateEntityRent } from '../../../shared/reducers/rent-offer.reducer';\r\nimport { reset as resetRentOffer } from '../../../shared/reducers/rent-offer.reducer';\r\nimport { createEntity as createEntityFindOffer } from '../../../shared/reducers/find-offer.reducer';\r\nimport { updateEntity as updateEntityFind } from '../../../shared/reducers/find-offer.reducer';\r\nimport { reset as resetFindOffer } from '../../../shared/reducers/find-offer.reducer';\r\nimport {uploadFiles, getEntity as getEntityOffer} from \"../../../shared/reducers/offer.reducer\";\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport OptionsCommonAddOffer from \"./ui-segments/OoptionsCommonAddOffer\";\r\nimport {IOfferImages} from \"../../../shared/model/offer-images.model\";\r\nimport {TransitionModal} from \"../../../shared/pages/transition-modal\";\r\nimport {CustomSunEditor} from \"../../../shared/components/sun-editor/CustomSunEditor\";\r\nimport CircularProgress from \"@mui/material/CircularProgress/CircularProgress\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {addEventGA, AllModulesEventGA} from \"../../../shared/providers/google-anaylitics\";\r\nimport {getPublicEntity} from \"../../../shared/reducers/description-add-offer.reducer\";\r\nimport i18n from \"i18next\";\r\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\r\nimport './AddUpdateOffer.scss';\r\nimport {getImageUrl} from \"../../../shared/utils/image-url\";\r\n\r\ninterface initStateFiles {\r\n    selectedFiles: string[];\r\n    progress: number,\r\n    message: string,\r\n    fileInfos: string[],\r\n};\r\n\r\nconst defaultValueFiles : initStateFiles = {\r\n    selectedFiles: [],\r\n    progress: 0,\r\n    message: '',\r\n    fileInfos: [],\r\n}\r\n\r\nconst defaultValueOriginalListFiles: File[] = [];\r\n\r\nconst initialValues = initialValuesAddOffer;\r\n\r\nexport interface IAddUpdateOfferProps extends StateProps, DispatchProps {}\r\n\r\nexport const AddUpdateOffer = (props: IAddUpdateOfferProps) => {\r\n\r\n    const [startAnimation, setStartAnimation] = React.useState(false);\r\n    const [fileState, setFileState] = React.useState(defaultValueFiles);\r\n    const [originalListFiles, setOriginalListFiles] = React.useState(defaultValueOriginalListFiles);\r\n    const [openDeleteImageOfferModal, setOpenDeleteImageOfferModal] = React.useState(false);\r\n    const [indexDeleteImageOffer, setIndexDeleteImageOffer] = React.useState(-1);\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        loadingEntitySellerOffer,\r\n        loadingEntityRentOffer,\r\n        isAuthenticated,\r\n        getEntityOffer,\r\n        entitiesAddress,\r\n        entitiesCategory,\r\n        resetSellerOffer,\r\n        resetRentOffer,\r\n        resetFindOffer,\r\n        entityOffer,\r\n    } = props;\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddOffer,\r\n        onSubmit: values => {\r\n            if (isAuthenticated) {\r\n                saveEntity(values);\r\n            } else {\r\n                navigate(ALL_APP_ROUTES.LOGIN);\r\n            }\r\n        },\r\n    });\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    React.useEffect(() => {\r\n        if(id){ // For update\r\n            getEntityOffer(Number(id) || -1);\r\n        }\r\n        else{ // For new offer\r\n            formik.resetForm();\r\n            setFileState(defaultValueFiles);\r\n            props.resetFetchOffer();\r\n        }\r\n    }, [id])\r\n\r\n    React.useEffect(() => {\r\n\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setStartAnimation(true);\r\n        }, 300);\r\n\r\n        props.getPublicEntity();\r\n    }, []);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!isEmpty(entityOffer) && id) { // For update\r\n\r\n            // Defult values\r\n            setDefaultsValues(formik, entityOffer);\r\n\r\n            setFileState({\r\n                ...fileState,\r\n                selectedFiles: entityOffer?.offerImages && entityOffer?.offerImages.length > 0\r\n                        ? entityOffer?.offerImages.map((imgOffer: IOfferImages) => {\r\n                            return (imgOffer.path = getImageForOffer(entityOffer?.id, imgOffer?.path));\r\n                        })\r\n                        : [], // event.target.files\r\n            });\r\n        }\r\n    }, [entityOffer]);\r\n\r\n    React.useEffect(() => {\r\n        if (props.addSuccessSellerOffer || props.updateSuccessSellerOffer) {\r\n            const offerId: number = props.entitySellerOffer?.id || -1;\r\n            upladAllFiles(offerId);\r\n            resetSellerOffer();\r\n            navigate(ALL_APP_ROUTES.OFFER.MY_OFFERS);\r\n        }\r\n        else if (props.addSuccessRentOffer || props.updateSuccessRentOffer) {\r\n            const offerId: number = props.entityRentOffer?.id || -1;\r\n            upladAllFiles(offerId);\r\n            resetRentOffer();\r\n            navigate(ALL_APP_ROUTES.OFFER.MY_OFFERS);\r\n        }\r\n        else if ( props.addSuccessFindOffer || props.updateSuccessFindOffer) {\r\n            const offerId: number = props.entityFindOffer?.id || -1;\r\n            upladAllFiles(offerId);\r\n            resetFindOffer();\r\n            navigate(ALL_APP_ROUTES.OFFER.MY_OFFERS);\r\n        }\r\n    }, [props.addSuccessSellerOffer, props.updateSuccessSellerOffer,\r\n        props.addSuccessRentOffer, props.updateSuccessRentOffer ,\r\n        props.addSuccessFindOffer, props.updateSuccessFindOffer\r\n    ]);\r\n\r\n    const saveEntity = (values: any) => {\r\n        const tempOfferImages: any[] = [];\r\n        originalListFiles.forEach((item: any) => {\r\n            tempOfferImages.push({\r\n                path: item?.name,\r\n                dateCreated: convertDateTimeToServer(new Date()),\r\n            });\r\n        });\r\n\r\n        const entity = {\r\n            ...entityOffer,\r\n            dateCreated: convertDateTimeToServer(new Date()),\r\n            ...values,\r\n            user: {\r\n                id: props.currentUser.id\r\n            },\r\n            offerImages: tempOfferImages.slice()\r\n        };\r\n\r\n        // Set address if defined\r\n        if(values?.address){\r\n            entity.address = {\r\n                id: values?.address?.id,\r\n                city: values?.address?.city\r\n            }\r\n        }\r\n\r\n        // Set category if defined\r\n        if(values?.category){\r\n            entity.category = {\r\n                id: values?.category?.id,\r\n            }\r\n        }\r\n\r\n        // For Rent\r\n        if (entity.startDate && entity.endDate) {\r\n            entity.startDate = convertDateTimeToServer(entity.startDate);\r\n            entity.endDate = convertDateTimeToServer(entity.endDate);\r\n        }\r\n\r\n        if (!id) {\r\n          if (formik.values.typeOffer === TypeOfferEnum.Sell) {\r\n            props.createEntitySellerOffer(entity);\r\n          } else if (formik.values.typeOffer === TypeOfferEnum.Rent) {\r\n            props.createEntityRentOffer(entity);\r\n          } else if (formik.values.typeOffer === TypeOfferEnum.Find) {\r\n            props.createEntityFindOffer(entity);\r\n          }\r\n        }\r\n        else {\r\n            if (formik.values.typeOffer === TypeOfferEnum.Sell) {\r\n                props.updateEntitySell(entity);\r\n            } else if (formik.values.typeOffer === TypeOfferEnum.Rent) {\r\n                props.updateEntityRent(entity);\r\n            } else if (formik.values.typeOffer === TypeOfferEnum.Find) {\r\n                props.updateEntityFind(entity);\r\n            }\r\n        }\r\n    };\r\n\r\n    const selectFile = (event: any) => {\r\n        if (event.target.files && event.target.files.length <= AllAppConfig.MaxNbeImagePerOffer) {\r\n\r\n            const newSelectedFiles: string[] = [];\r\n            const newOrigSelectedFiles: File[] = [];\r\n\r\n            Array.from(event.target.files).forEach((file: any) => {\r\n                getImageUrl(file, 1000)\r\n                // getBase64(file)\r\n                    .then((resultBase64: any) => {\r\n                        dataUrlToFile(resultBase64, file.name)\r\n                            .then((valueFile: any) => {\r\n                                newOrigSelectedFiles.push(valueFile);\r\n                            });\r\n                        newSelectedFiles.push(resultBase64);\r\n\r\n                        setFileState({\r\n                            ...fileState,\r\n                            selectedFiles: newSelectedFiles.slice(), // event.target.files\r\n                        });\r\n\r\n                        // Set all files\r\n                        setOriginalListFiles(newOrigSelectedFiles);\r\n                    });\r\n\r\n            });\r\n        } else {\r\n            alert('Ouups, max number is 5');\r\n        }\r\n    };\r\n\r\n    const upladAllFiles = (offerId: number) => {\r\n        if(originalListFiles.length){\r\n            const formData = new FormData();\r\n            for (const file of originalListFiles) {\r\n                formData.append('files', file, file.name);\r\n                formData.append('offerId', offerId.toString());\r\n            }\r\n            props.uploadFiles(formData);\r\n        }\r\n    };\r\n\r\n    const handleClickDeleteImageOffer = () => {\r\n        setOpenDeleteImageOfferModal(false);\r\n        fileState.selectedFiles.splice(indexDeleteImageOffer, 1);\r\n    };\r\n\r\n    const handleClickCancelDeleteImageOfferModal = () => {\r\n        setOpenDeleteImageOfferModal(false);\r\n    };\r\n\r\n    const handleClickOpenDeleteOffertModal = (index: number) => {\r\n        setIndexDeleteImageOffer(index);\r\n        setOpenDeleteImageOfferModal(true);\r\n    };\r\n\r\n    const renderDialogDeleteImageOffer = () => {\r\n        return (\r\n            <Dialog\r\n                open={openDeleteImageOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleClickCancelDeleteImageOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    Confirm delete operation\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Are you sure you want to delete this CommentOffer?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClickCancelDeleteImageOfferModal}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClickDeleteImageOffer} color=\"error\">\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const onChangeValue = (newValue: any) => {\r\n        formik.setFieldValue('description', newValue ? newValue : '');\r\n    }\r\n\r\n    const addNewEventGA = () => {\r\n        addEventGA(AllModulesEventGA.EventOffer.ShowMoreOption.eventName,\r\n            AllModulesEventGA.EventOffer.ShowMoreOption.eventCategory,\r\n            AllModulesEventGA.EventOffer.ShowMoreOption.eventLabel);\r\n    }\r\n\r\n    const getContentDescriptionAddOffer = () => {\r\n        if( defaultLanguage==='en' ){\r\n            return props.entityDescriptionAddOffer.descriptionEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return props.entityDescriptionAddOffer.descriptionFr || '';\r\n        }\r\n        return props.entityDescriptionAddOffer.descriptionAr || '';\r\n    }\r\n\r\n    return (\r\n        <Slide direction=\"up\" in={startAnimation} mountOnEnter unmountOnExit>\r\n            <Container maxWidth=\"xl\" className=\"page-add-offer\">\r\n                <Grid\r\n                    container\r\n                    style={{\r\n                        paddingTop: 10,\r\n                    }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                                SRF\r\n                            </Link>\r\n                            <Typography color=\"text.primary\">\r\n                                {t('add_offer.title_page')}\r\n                            </Typography>\r\n                        </Breadcrumbs>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Paper elevation={3} sx={{p: 2, mt: 6}}>\r\n\r\n                            {\r\n                                props.loadingEntity ? <Box sx={{ pt: 10, pb: 10, textAlign: 'center' }}>\r\n                                    <CircularProgress color=\"inherit\"  />\r\n                                </Box> :\r\n\r\n                                <Box>\r\n                                    <h3 className=\"mb-3\">{t('add_offer.label_publish_new_offer')}</h3>\r\n                                    <form onSubmit={formik.handleSubmit}>\r\n                                        <Grid container spacing={1}>\r\n                                            <Grid item xs={12} md={6}>\r\n                                                <FormControl\r\n                                                    fullWidth\r\n                                                    size=\"small\"\r\n                                                    error={formik.touched.typeOffer && Boolean(formik.errors.typeOffer)}\r\n                                                    className=\"form-control-type-offer\"\r\n                                                >\r\n                                                    <InputLabel id=\"label-component-helper-typeOffer\" className=\"type-offer-select\">\r\n                                                        {t('add_offer.label_type_offer')}\r\n                                                    </InputLabel>\r\n                                                    <Select\r\n                                                        id=\"typeOffer\"\r\n                                                        name=\"typeOffer\"\r\n                                                        label={t('add_offer.label_type_offer')}\r\n                                                        labelId=\"add_offer.label_type_offer\"\r\n                                                        value={formik.values.typeOffer}\r\n                                                        onChange={formik.handleChange}>\r\n                                                        <MenuItem value={TypeOfferEnum.Sell}>\r\n                                                            {t('common.for_sell')}\r\n                                                        </MenuItem>\r\n                                                        <MenuItem value={TypeOfferEnum.Rent}>\r\n                                                            {t('common.for_rent')}\r\n                                                        </MenuItem>\r\n                                                        <MenuItem value={TypeOfferEnum.Find}>\r\n                                                            {t('common.for_find')}\r\n                                                        </MenuItem>\r\n                                                    </Select>\r\n                                                    {formik.touched.typeOffer && formik.errors.typeOffer ? <FormHelperText id=\"component-helper-text-typeOffer\">{t(formik.errors.typeOffer)}</FormHelperText> : null}\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12} md={6}>\r\n                                                <FormControl fullWidth size=\"small\"\r\n                                                             error={formik.touched.title && Boolean(formik.errors.title)}>\r\n                                                    <InputLabel htmlFor=\"outlined-adornment-title\">{t('add_offer.label_title_offer')}</InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        id=\"title\"\r\n                                                        name=\"title\"\r\n                                                        label={t('add_offer.label_title_offer')}\r\n                                                        value={formik.values.title}\r\n                                                        onChange={formik.handleChange}\r\n                                                    />\r\n                                                    {formik.touched.title && formik.errors.title ? <FormHelperText id=\"component-helper-text\">{t(formik.errors.title)}</FormHelperText> : null}\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12} md={12}>\r\n                                                <FormControl fullWidth sx={{mt: 3}}\r\n                                                             error={formik.touched.description && Boolean(formik.errors.description)}>\r\n                                                    <CustomSunEditor defaultValue={entityOffer?.description || ''} callbcakHandleChange={onChangeValue} placeholder={t('add_offer.placeholder_description')}/>\r\n                                                    {formik.touched.description && formik.errors.description ? <FormHelperText id=\"component-helper-text\">{t(formik.errors.description)}</FormHelperText> : null}\r\n                                                </FormControl>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12} md={12} sx={{mb: 3}}>\r\n                                                <ImageList sx={{width: '100%', height: 'auto', mt: 3, mb: 0}} cols={5}>\r\n                                                    {fileState && fileState.selectedFiles && fileState.selectedFiles.length > 0\r\n                                                        ? fileState.selectedFiles.map((file, index) => (\r\n                                                            <ImageListItem\r\n                                                                key={index}\r\n                                                                style={{\r\n                                                                    marginRight: 4,\r\n                                                                    borderRadius: 4,\r\n                                                                }}\r\n                                                            >\r\n                                                                <img\r\n                                                                    src={file}\r\n                                                                    srcSet={file}\r\n                                                                    alt={'desc_' + index}\r\n                                                                    loading=\"lazy\"\r\n                                                                    style={{borderRadius: 4, border: '1px solid #b7b1b1'}}\r\n                                                                />\r\n                                                                <IconButton\r\n                                                                    size=\"small\"\r\n                                                                    aria-label=\"delete\"\r\n                                                                    color=\"error\"\r\n                                                                    sx={{\r\n                                                                        position: 'absolute',\r\n                                                                        top: 0,\r\n                                                                        right: 0,\r\n                                                                        backgroundColor: '#fff'\r\n                                                                    }}\r\n                                                                    onClick={() => handleClickOpenDeleteOffertModal(index)}\r\n                                                                >\r\n                                                                    <ClearIcon/>\r\n                                                                </IconButton>\r\n                                                            </ImageListItem>\r\n                                                        ))\r\n                                                        : null}\r\n\r\n                                                    <ImageListItem>\r\n                                                        <img\r\n                                                            src={`${getBaseImageUrl('/assets/images/offer/add-offer/img_add_offer.png')}`}\r\n                                                            srcSet={`${getBaseImageUrl('/assets/images/offer/add-offer/img_add_offer.png')}`}\r\n                                                            alt={'img_add_offer'}\r\n                                                            loading=\"lazy\"\r\n                                                            style={{borderRadius: 4, border: '1px solid #b7b1b1'}}\r\n                                                        />\r\n                                                        <input\r\n                                                            id=\"offer-addFiles\"\r\n                                                            data-cy=\"files\"\r\n                                                            type=\"file\"\r\n                                                            name=\"files\"\r\n                                                            style={{\r\n                                                                position: 'absolute',\r\n                                                                maxWidth: '100%',\r\n                                                                top: 0,\r\n                                                                bottom: 0,\r\n                                                                opacity: 0,\r\n                                                            }}\r\n                                                            multiple\r\n                                                            accept=\"image/png, image/gif, image/jpeg, image/jpg\"\r\n                                                            onChange={selectFile}\r\n                                                        />\r\n                                                    </ImageListItem>\r\n                                                </ImageList>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12} md={12}>\r\n                                                <Accordion sx={{width: '100%'}}>\r\n                                                    <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon sx={{backgroundColor: 'yellow', borderRadius: '50%'}}/>}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        className=\"bg-brown\"\r\n                                                        onClick={() => addNewEventGA()}>\r\n                                                        <ArrowCircleRightIcon className=\"zoom-in-out-box\"  sx={{color: 'yellow', mr: 1}}/>\r\n                                                        <Typography sx={{textDecoration: 'underline'}}>\r\n                                                            {t('add_offer.label_more_options')}\r\n                                                        </Typography>\r\n                                                    </AccordionSummary>\r\n                                                    <AccordionDetails sx={{pt: 4}}>\r\n                                                        {formik.values.typeOffer ? (\r\n                                                            <OptionsCommonAddOffer formik={formik} cities={entitiesAddress} listCategories={entitiesCategory} />\r\n                                                        ) : null}\r\n\r\n                                                        {formik.values.typeOffer === TypeOfferEnum.Sell ? (\r\n                                                            <OptionsSellAddOffer formik={formik}/>\r\n                                                        ) : formik.values.typeOffer === TypeOfferEnum.Rent ? (\r\n                                                            <OptionsRentAddOffer formik={formik}/>\r\n                                                        ) : formik.values.typeOffer === TypeOfferEnum.Find ? (\r\n                                                            <OptionsFindAddOffer formik={formik}/>\r\n                                                        ) : (\r\n                                                            <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                                                                {t('add_offer.label_select_offer_plz')}\r\n                                                            </Typography>\r\n                                                        )}\r\n                                                    </AccordionDetails>\r\n                                                </Accordion>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12} md={12}>\r\n                                                <LoadingButton\r\n                                                    loading={loadingEntitySellerOffer === true || loadingEntityRentOffer === true}\r\n                                                    fullWidth\r\n                                                    variant=\"contained\"\r\n                                                    color=\"neutral\"\r\n                                                    type=\"submit\"\r\n                                                    sx={{mt: 3, mb: 2}}\r\n                                                >\r\n                                                    {\r\n                                                        id ? t('add_offer.label_update_offer') : t('add_offer.label_add_offer')\r\n                                                    }\r\n\r\n                                                </LoadingButton>\r\n                                            </Grid>\r\n\r\n                                            <Typography variant=\"subtitle2\" color=\"error\" sx={{textAlign: 'center', width: '100%'}}>\r\n                                                { !formik.isValid ? t('add_offer.check_required_fileds') : null }\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </form>\r\n                                </Box>\r\n                            }\r\n\r\n\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} sx={{p: 2, mt: 6}}>\r\n                        {\r\n                            props.loadingDescriptionAddOfferEntity ? <Box sx={{ textAlign: 'center' }}>\r\n                                <CircularProgress color=\"inherit\"  />\r\n                            </Box> : <div dangerouslySetInnerHTML={{ __html: getContentDescriptionAddOffer() }}></div>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <div>{renderDialogDeleteImageOffer()}</div>\r\n            </Container>\r\n        </Slide>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({user, offer, sellOffer, rentOffer, findOffer, address, category, descriptionAddOffer}: IRootState) => ({\r\n    isAuthenticated: user.isAuthenticated,\r\n    currentUser: user.currentUser,\r\n\r\n    loadingEntitySellerOffer: sellOffer.loadingEntity,\r\n    entitySellerOffer: sellOffer.entity,\r\n    updateSuccessSellerOffer: sellOffer.updateSuccess,\r\n    addSuccessSellerOffer: sellOffer.addSuccess,\r\n\r\n    loadingEntityRentOffer: rentOffer.loadingEntity,\r\n    entityRentOffer: rentOffer.entity,\r\n    updateSuccessRentOffer: rentOffer.updateSuccess,\r\n    addSuccessRentOffer: rentOffer.addSuccess,\r\n\r\n    loadingEntityFindOffer: findOffer.loadingEntity,\r\n    entityFindOffer: findOffer.entity,\r\n    updateSuccessFindOffer: findOffer.updateSuccess,\r\n    addSuccessFindOffer: findOffer.addSuccess,\r\n\r\n    entityOfferWithFavoriteUser: offer.entityWithFavoriteUser,\r\n    entityOffer: offer.entity,\r\n    loadingEntity: offer.loadingEntity,\r\n\r\n    loadingEntitiesAddress: address.loadingEntities,\r\n    entitiesAddress: address.entities,\r\n    updateSuccessAddress: address.updateSuccess,\r\n\r\n    loadingEntitiesCategory: category.loadingEntities,\r\n    entitiesCategory: category.entities,\r\n\r\n    loadingDescriptionAddOfferEntity: descriptionAddOffer.loadingEntity,\r\n    entityDescriptionAddOffer: descriptionAddOffer.entity,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    createEntitySellerOffer,\r\n    resetSellerOffer,\r\n    uploadFiles,\r\n    createEntityRentOffer,\r\n    resetRentOffer,\r\n    createEntityFindOffer,\r\n    resetFindOffer,\r\n    getEntityOffer,\r\n    resetOffer,\r\n    updateEntitySell,\r\n    updateEntityRent,\r\n    updateEntityFind,\r\n    getPublicEntity,\r\n    resetFetchOffer\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUpdateOffer);\r\n","export enum OfferTypeContact {\r\n    direct = 'ContactDirect',\r\n    perCommmande = 'PerCommande'\r\n}","export enum TypeOfferEnum {\r\n  Sell = 'SellOffer',\r\n  Rent = 'RentOffer',\r\n  Find = 'FindOffer',\r\n}\r\n\r\nexport enum PeriodeRent {\r\n  PerYear = 'PerYear',\r\n  PerMonth = 'PerMonth',\r\n  PerDay = 'PerDay',\r\n}\r\n\r\nexport enum TypesFindOffer{\r\n    Carpooling = 'Carpooling',\r\n    Travels = 'Travels',\r\n    Transporter = 'Transporter',\r\n    Job = 'Job'\r\n}\r\n\r\nexport enum TypeDisplaySearchOffers {\r\n    List = 'LIST',\r\n    Grid = 'GRID'\r\n}","import React from \"react\";\r\nimport {TransitionProps} from \"@mui/material/transitions\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\n\r\n\r\nexport const TransitionModal = React.forwardRef(function Transition(\r\n    props: TransitionProps & {\r\n        children: React.ReactElement<any, any>;\r\n    },\r\n    ref: React.Ref<unknown>\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});","// Based on: https://stackoverflow.com/a/46814952/283851\r\n\r\n/**\r\n * Create a Base64 Image URL, with rotation applied to compensate for EXIF orientation, if needed.\r\n *\r\n * Optionally resize to a smaller maximum width - to improve performance for larger image thumbnails.\r\n */\r\nexport async function getImageUrl(file: File, maxWidth: number|undefined) {\r\n    return readOrientation(file).then(orientation => applyRotation(file, orientation || 1, maxWidth || 999999));\r\n}\r\n\r\n/**\r\n * @returns EXIF orientation value (or undefined)\r\n */\r\nconst readOrientation = (file: File) => new Promise<number|undefined>(resolve => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => resolve((() => {\r\n        const view = new DataView(reader.result as ArrayBuffer);\r\n\r\n        if (view.getUint16(0, false) !== 0xFFD8) {\r\n            return;\r\n        }\r\n\r\n        const length = view.byteLength;\r\n\r\n        let offset = 2;\r\n\r\n        while (offset < length) {\r\n            const marker = view.getUint16(offset, false);\r\n\r\n            offset += 2;\r\n\r\n            if (marker === 0xFFE1) {\r\n                offset += 2;\r\n\r\n                if (view.getUint32(offset, false) !== 0x45786966) {\r\n                    return;\r\n                }\r\n\r\n                offset += 6;\r\n\r\n                const little = view.getUint16(offset, false) === 0x4949;\r\n\r\n                offset += view.getUint32(offset + 4, little);\r\n\r\n                const tags = view.getUint16(offset, little);\r\n\r\n                offset += 2;\r\n\r\n                for (var i = 0; i < tags; i++) {\r\n                    if (view.getUint16(offset + (i * 12), little) === 0x0112) {\r\n                        return view.getUint16(offset + (i * 12) + 8, little);\r\n                    }\r\n                }\r\n            } else if ((marker & 0xFF00) !== 0xFF00) {\r\n                break;\r\n            } else {\r\n                offset += view.getUint16(offset, false);\r\n            }\r\n        }\r\n    })());\r\n\r\n    reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\r\n});\r\n\r\n/**\r\n * @returns Base64 Image URL (with rotation applied to compensate for orientation, if any)\r\n */\r\nconst applyRotation = (file: File, orientation: number, maxWidth: number) => new Promise<string>(resolve => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n        const url = reader.result as string;\r\n\r\n        const image = new Image();\r\n\r\n        image.onload = () => {\r\n            const canvas = document.createElement(\"canvas\");\r\n            const context = canvas.getContext(\"2d\")!;\r\n\r\n            let { width, height } = image;\r\n\r\n            const [outputWidth, outputHeight] = orientation >= 5 && orientation <= 8\r\n                ? [height, width]\r\n                : [width, height];\r\n\r\n            const scale = outputWidth > maxWidth ? maxWidth / outputWidth : 1;\r\n\r\n            width = width * scale;\r\n            height = height * scale;\r\n\r\n            // set proper canvas dimensions before transform & export\r\n            canvas.width = outputWidth * scale;\r\n            canvas.height = outputHeight * scale;\r\n\r\n            // transform context before drawing image\r\n            switch (orientation) {\r\n                case 2: context.transform(-1, 0, 0, 1, width, 0); break;\r\n                case 3: context.transform(-1, 0, 0, -1, width, height); break;\r\n                case 4: context.transform(1, 0, 0, -1, 0, height); break;\r\n                case 5: context.transform(0, 1, 1, 0, 0, 0); break;\r\n                case 6: context.transform(0, 1, -1, 0, height, 0); break;\r\n                case 7: context.transform(0, -1, -1, 0, height, width); break;\r\n                case 8: context.transform(0, -1, 1, 0, 0, width); break;\r\n                default: break;\r\n            }\r\n\r\n            // draw image\r\n            context.drawImage(image, 0, 0, width, height);\r\n\r\n            // export base64\r\n            resolve(canvas.toDataURL(\"image/jpeg\"));\r\n        };\r\n\r\n        image.src = url;\r\n    }\r\n\r\n    reader.readAsDataURL(file);\r\n});","var map = {\n\t\"./ckb.js\": 82871,\n\t\"./da.js\": 59651,\n\t\"./de.js\": 64639,\n\t\"./en.js\": 75213,\n\t\"./es.js\": 47068,\n\t\"./fr.js\": 78488,\n\t\"./he.js\": 93179,\n\t\"./index.js\": 87488,\n\t\"./it.js\": 63577,\n\t\"./ja.js\": 10916,\n\t\"./ko.js\": 19920,\n\t\"./lv.js\": 39985,\n\t\"./nl.js\": 14076,\n\t\"./pl.js\": 71676,\n\t\"./pt_br.js\": 3204,\n\t\"./ro.js\": 59575,\n\t\"./ru.js\": 70123,\n\t\"./se.js\": 52372,\n\t\"./ua.js\": 82561,\n\t\"./zh_cn.js\": 79602\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3829;"],"names":["validationSchemaAddOffer","Yup","typeOffer","required","title","description","amount","nullable","notRequired","startDate","endDate","typePeriodRent","address","default","category","typeFindOffer","typeContactClient","OptionsSellAddOffer","props","formik","t","useTranslation","Box","Grid","container","spacing","sx","my","item","xs","md","FormControl","fullWidth","error","touched","Boolean","errors","InputLabel","htmlFor","OutlinedInput","id","type","value","values","onChange","handleChange","startAdornment","InputAdornment","position","label","size","FormHelperText","FormLabel","RadioGroup","name","FormControlLabel","OfferTypeContact","control","Radio","toString","OptionsRentAddOffer","LocalizationProvider","dateAdapter","AdapterDateFns","className","Select","labelId","MenuItem","PeriodeRent","DatePicker","newValue","setFieldValue","renderInput","params","TextField","OptionsFindAddOffer","TypesFindOffer","OptionsCommonAddOffer","cities","listCategories","React","defaultLanguage","setDefaultLanguage","i18n","lang","console","log","getValueTitle","option","titleEn","titleFr","titleAr","Autocomplete","options","e","autoHighlight","getOptionLabel","renderOption","propsRender","component","inputProps","form","autocomplete","autoComplete","city","CustomSunEditor","defaultValue","callbcakHandleChange","placeholder","setContents","setOptions","height","buttonList","content","defaultValueFiles","selectedFiles","progress","message","fileInfos","defaultValueOriginalListFiles","initialValues","AddUpdateOffer","startAnimation","setStartAnimation","fileState","setFileState","originalListFiles","setOriginalListFiles","openDeleteImageOfferModal","setOpenDeleteImageOfferModal","indexDeleteImageOffer","setIndexDeleteImageOffer","navigate","useNavigate","loadingEntitySellerOffer","loadingEntityRentOffer","isAuthenticated","getEntityOffer","entitiesAddress","entitiesCategory","resetSellerOffer","resetRentOffer","resetFindOffer","entityOffer","useFormik","validationSchema","onSubmit","saveEntity","ALL_APP_ROUTES","useParams","Number","resetForm","resetFetchOffer","setTimeout","getPublicEntity","isEmpty","offerEntity","setDefaultsValues","offerImages","length","map","imgOffer","path","getImageForOffer","addSuccessSellerOffer","updateSuccessSellerOffer","offerId","entitySellerOffer","upladAllFiles","addSuccessRentOffer","updateSuccessRentOffer","entityRentOffer","addSuccessFindOffer","updateSuccessFindOffer","entityFindOffer","tempOfferImages","forEach","push","dateCreated","convertDateTimeToServer","Date","entity","user","currentUser","slice","TypeOfferEnum","updateEntitySell","updateEntityRent","updateEntityFind","createEntitySellerOffer","createEntityRentOffer","createEntityFindOffer","formData","FormData","file","append","uploadFiles","handleClickDeleteImageOffer","splice","handleClickCancelDeleteImageOfferModal","Slide","direction","in","mountOnEnter","unmountOnExit","Container","maxWidth","style","paddingTop","Breadcrumbs","color","to","Typography","sm","Paper","elevation","p","mt","loadingEntity","pt","pb","textAlign","CircularProgress","handleSubmit","mb","ImageList","width","cols","index","ImageListItem","marginRight","borderRadius","src","srcSet","alt","loading","border","IconButton","top","right","backgroundColor","onClick","handleClickOpenDeleteOffertModal","Clear","getBaseImageUrl","bottom","opacity","multiple","accept","event","target","files","AllAppConfig","newSelectedFiles","newOrigSelectedFiles","Array","from","getImageUrl","then","resultBase64","dataUrlToFile","valueFile","alert","Accordion","AccordionSummary","expandIcon","ExpandMore","addEventGA","AllModulesEventGA","ArrowCircleRight","mr","textDecoration","AccordionDetails","variant","LoadingButton","isValid","loadingDescriptionAddOfferEntity","dangerouslySetInnerHTML","__html","entityDescriptionAddOffer","descriptionEn","descriptionFr","descriptionAr","Dialog","open","TransitionComponent","TransitionModal","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","mapDispatchToProps","resetOffer","connect","offer","sellOffer","rentOffer","findOffer","descriptionAddOffer","updateSuccess","addSuccess","loadingEntityFindOffer","entityOfferWithFavoriteUser","entityWithFavoriteUser","loadingEntitiesAddress","loadingEntities","entities","updateSuccessAddress","loadingEntitiesCategory","TypeDisplaySearchOffers","ref","readOrientation","orientation","applyRotation","Promise","resolve","reader","FileReader","onload","view","DataView","result","getUint16","byteLength","offset","marker","getUint32","little","tags","i","readAsArrayBuffer","url","image","Image","canvas","document","createElement","context","getContext","outputWidth","outputHeight","scale","transform","drawImage","toDataURL","readAsDataURL","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","module","exports"],"sourceRoot":""}