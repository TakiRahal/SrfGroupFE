{"version":3,"file":"static/js/502.3a397d55.chunk.js","mappings":"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","sources":["main-features/home/ui-segments/ForSellHomeClient.tsx","main-features/home/ui-segments/FirstHorizentalListHomeClient.tsx","main-features/home/ui-segments/SecondHorizentalListHomeClient.tsx","main-features/home/ui-segments/ThirdHorizentalListHomeClient.tsx","main-features/home/ui-segments/RecentlyAddedHomeClient.tsx","main-features/home/ui-segments/ForRentHomeClient.tsx","main-features/home/ui-segments/ForFindHomeClient.tsx","main-features/home/ui-segments/BottomHomeSlides.tsx","main-features/home/ui-segments/TopHomeSlides.tsx","main-features/home/ui-segments/PostHomeFeature.tsx","main-features/home/home.tsx","../node_modules/@mui/icons-material/MoreVert.js","../node_modules/@mui/material/internal/svg-icons/Close.js"],"sourcesContent":["import React from 'react';\r\nimport Container from '@mui/material/Container/Container';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport CardActionArea from '@mui/material/CardActionArea/CardActionArea';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardMedia from '@mui/material/CardMedia/CardMedia';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../shared/utils/utils-functions\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport { connect } from 'react-redux';\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {getEntitiesForSell} from \"../../../shared/reducers/seller-offer.reducer\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport { Pagination } from \"swiper\";\r\n\r\nimport \"swiper/css/effect-cube\";\r\nimport './ForSellHome.scss';\r\nimport {IOffer} from \"../../../shared/model/offer.model\";\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport {LazyImage} from \"../../../shared/components/lazy-image\";\r\n\r\nfunction ItemForSell({offer, index, rediretTo}: {offer: IOffer, index: number, rediretTo: any}){\r\n    return (\r\n        <CardActionArea component=\"a\" onClick={() => rediretTo(offer.id)}>\r\n\r\n            {/*For Desktop*/}\r\n            <Card sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n                {index % 2 === 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n                <CardContent sx={{ flex: 1 }}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{ maxWidth: 400 }}>\r\n                        <div dangerouslySetInnerHTML={{ __html: offer.description || '' }}></div>\r\n                    </Box>\r\n                </CardContent>\r\n                {index % 2 !== 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n            </Card>\r\n\r\n\r\n            {/*For Mobile*/}\r\n            <Card sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                {\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                }\r\n                <CardContent sx={{ flex: 1 }}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{ maxWidth: 400 }}>\r\n                        <div dangerouslySetInnerHTML={{ __html: offer.description || '' }}></div>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </CardActionArea>\r\n    );\r\n}\r\n\r\nexport interface IForSellClientProp extends StateProps, DispatchProps {}\r\n\r\nexport const ForSellHomeClient = (props: IForSellClientProp) => {\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    const rediretTo = (offerId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.OFFER.DEAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    const { listSellOffers, getEntitiesForSell } = props;\r\n\r\n    React.useEffect(() => {\r\n        getEntitiesForSell(0, 4, 'id,asc');\r\n    }, [])\r\n\r\n    return(\r\n        <Container maxWidth=\"xl\" sx={{my: 20}} className=\"container-for-sell-home\">\r\n            <h3>\r\n                <Link to={`${ALL_APP_ROUTES.OFFER.LIST}?typeOffer=${TypeOfferEnum.Sell}`}>\r\n                    {t('common.for_sell')}\r\n                </Link>\r\n            </h3>\r\n            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }} sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                {listSellOffers.map((offer: any, index: number) => (\r\n                    <Grid item xs={12} md={6} key={`offer-${index}`}>\r\n                        <ItemForSell offer={offer} index={index} rediretTo={rediretTo}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                <Swiper\r\n                    pagination={true}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 3500,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    modules={[Pagination]}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {listSellOffers.map((offer: any, index: number) => (\r\n                        <SwiperSlide  key={`offer-${index}`}>\r\n                            <ItemForSell offer={offer} index={index} rediretTo={rediretTo}/>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({sellOffer}: IRootState) => ({\r\n    listSellOffers: sellOffer.entitiesSellOffers,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitiesForSell,\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForSellHomeClient);","import Stack from \"@mui/material/Stack/Stack\";\r\nimport Avatar from \"@mui/material/Avatar/Avatar\";\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport Paper from \"@mui/material/Paper/Paper\";\r\nimport {getBaseImageUrl} from \"../../../shared/utils/utils-functions\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {Translation} from \"react-i18next\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function FirstHorizentalListHomeClient() {\r\n\r\n    const listCategories = [\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/home.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_immovable')}</>}</Translation>,\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/cars.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_cars')}</>}</Translation>,\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/phones.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_phones')}</>}</Translation>,\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/services.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_services')}</>}</Translation>,\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/search.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_search')}</>}</Translation>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Box className=\"bg-brown\" sx={{p: 8, my: 10}}>\r\n            <Stack\r\n                sx={{\r\n                    my: '4rem',\r\n                    px: { xs: 0, md: 2 },\r\n                    justifyContent: 'center',\r\n                }}\r\n                direction={{ xs: 'column', sm: 'row' }}\r\n                spacing={{ xs: 1, sm: 2, md: 4 }}\r\n            >\r\n                {listCategories.map((category: any, index: number) => (\r\n                    <Item\r\n                        sx={{\r\n                            flex: 1,\r\n                        }}\r\n                        key={`category-${index}`}\r\n                    >\r\n                        <Avatar\r\n                            alt=\"Remy Sharp\"\r\n                            src={category.img}\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                            }}\r\n                        />\r\n                        <h3 className=\"mt-2\">{category.title}</h3>\r\n                    </Item>\r\n                ))}\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box/Box';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport ListItem from '@mui/material/ListItem/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText/ListItemText';\r\nimport {getBaseImageUrl} from \"../../../shared/utils/utils-functions\";\r\nimport {List} from \"@mui/material\";\r\n\r\ninterface IService {\r\n    img: string;\r\n    primaryTitle: string;\r\n    secondTitle: string;\r\n}\r\n\r\nexport default function SecondHorizentalListHomeClient() {\r\n    const listServices: IService[] = [\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/services/delivery.png'),\r\n            primaryTitle: 'Livraison Express 24/48H',\r\n            secondTitle: 'Livraison rapide sur toute la Tunisie',\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/services/euro.png'),\r\n            primaryTitle: 'Satisfait ou Remboursé',\r\n            secondTitle: 'Satisfait ou remboursé sans poser de questions ! (5Jours)',\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/services/money.png'),\r\n            primaryTitle: 'Paiement à la livraison',\r\n            secondTitle: 'Achetez et payez à la livraison',\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/services/chat.png'),\r\n            primaryTitle: 'Service Client 24/7',\r\n            secondTitle: 'Nous sommes à votre disposition pour répondre à vos questions',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Box sx={{p: 8, my: 10}}  className=\"bg-brown\">\r\n            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                {listServices.map((service: IService, index: number) => (\r\n                    <Grid item xs={12} md={3} key={`service-${index}`}>\r\n                        <Card sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <CardContent sx={{ flexGrow: 1, minHeight: 130 }}>\r\n                                <List  aria-label=\"contacts\" >\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Avatar alt={service.primaryTitle} src={service.img} />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={service.primaryTitle} secondary={service.secondTitle} />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box/Box';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// import required modules\r\nimport { Pagination } from \"swiper\";\r\n\r\nimport './ThirdHorizentalListHome.scss';\r\n\r\nexport default function ThirdHorizentalListHomeClient() {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Box sx={{my: 10}}\r\n            style={{\r\n                // height: 250,\r\n                backgroundColor: 'rgb(0 0 0 / 74%)',\r\n                color:'#fff',\r\n                textAlign: 'center'\r\n            }}\r\n        >\r\n            <Container maxWidth=\"xl\" className=\"container-full-slide\">\r\n                <Grid container className=\"grid-full-slide\" sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                    <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                        <Avatar\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                marginTop: 5,\r\n                                bgcolor: '#fff',\r\n                                color: '#000',\r\n                                fontSize: '25px'\r\n                            }}\r\n                        >01</Avatar>\r\n                        <h2 className=\"mt-2\">{t('home.steps.title_create_account')}</h2>\r\n                        <p>{t('home.steps.sub_title_create_account')}</p>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                        <Avatar\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                marginTop: 5,\r\n                                bgcolor: '#fff',\r\n                                color: '#000',\r\n                                fontSize: '25px'\r\n                            }}\r\n                        >02</Avatar>\r\n                        <h2 className=\"mt-2\">{t('home.steps.title_login')}</h2>\r\n                        <p>{t('home.steps.sub_title_login')}</p>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                        <Avatar\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                marginTop: 5,\r\n                                bgcolor: '#fff',\r\n                                color: '#000',\r\n                                fontSize: '25px'\r\n                            }}\r\n                        >03</Avatar>\r\n                        <h2 className=\"mt-2\">{t('home.steps.title_participate')}</h2>\r\n                        <p>{t('home.steps.sub_title_participate')}</p>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                        <Avatar\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                marginTop: 5,\r\n                                bgcolor: '#fff',\r\n                                color: '#000',\r\n                                fontSize: '25px'\r\n                            }}\r\n                        >04</Avatar>\r\n                        <h2 className=\"mt-2\">{t('home.steps.title_win_auction')}</h2>\r\n                        <p>{t('home.steps.sub_title_win_auction')}</p>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                    <Swiper\r\n                        slidesPerView={\"auto\"}\r\n                        spaceBetween={30}\r\n                        pagination={{\r\n                            clickable: true,\r\n                        }}\r\n                        loop={true}\r\n                        modules={[Pagination]}\r\n                        className=\"mySwiper\"\r\n                    >\r\n                        <SwiperSlide>\r\n                            <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 56,\r\n                                        height: 56,\r\n                                        marginLeft: 'auto',\r\n                                        marginRight: 'auto',\r\n                                        marginTop: 5,\r\n                                        bgcolor: '#fff',\r\n                                        color: '#000',\r\n                                        fontSize: '25px'\r\n                                    }}\r\n                                >01</Avatar>\r\n                                <h2 className=\"mt-2\">{t('home.steps.title_create_account')}</h2>\r\n                                <p>{t('home.steps.sub_title_create_account')}</p>\r\n                            </Grid>\r\n                        </SwiperSlide>\r\n                        <SwiperSlide>\r\n                            <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 56,\r\n                                        height: 56,\r\n                                        marginLeft: 'auto',\r\n                                        marginRight: 'auto',\r\n                                        marginTop: 5,\r\n                                        bgcolor: '#fff',\r\n                                        color: '#000',\r\n                                        fontSize: '25px'\r\n                                    }}\r\n                                >02</Avatar>\r\n                                <h2 className=\"mt-2\">{t('home.steps.title_login')}</h2>\r\n                                <p>{t('home.steps.sub_title_login')}</p>\r\n                            </Grid>\r\n                        </SwiperSlide>\r\n                        <SwiperSlide>\r\n                            <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 56,\r\n                                        height: 56,\r\n                                        marginLeft: 'auto',\r\n                                        marginRight: 'auto',\r\n                                        marginTop: 5,\r\n                                        bgcolor: '#fff',\r\n                                        color: '#000',\r\n                                        fontSize: '25px'\r\n                                    }}\r\n                                >03</Avatar>\r\n                                <h2 className=\"mt-2\">{t('home.steps.title_participate')}</h2>\r\n                                <p>{t('home.steps.sub_title_participate')}</p>\r\n                            </Grid>\r\n                        </SwiperSlide>\r\n                        <SwiperSlide>\r\n                            <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 56,\r\n                                        height: 56,\r\n                                        marginLeft: 'auto',\r\n                                        marginRight: 'auto',\r\n                                        marginTop: 5,\r\n                                        bgcolor: '#fff',\r\n                                        color: '#000',\r\n                                        fontSize: '25px'\r\n                                    }}\r\n                                >04</Avatar>\r\n                                <h2 className=\"mt-2\">{t('home.steps.title_win_auction')}</h2>\r\n                                <p>{t('home.steps.sub_title_win_auction')}</p>\r\n                            </Grid>\r\n                        </SwiperSlide>\r\n                    </Swiper>\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport CardHeader from '@mui/material/CardHeader/CardHeader';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport styled from '@mui/material/styles/styled';\r\nimport CardActionArea from '@mui/material/CardActionArea/CardActionArea';\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {getEntitiesRecentlyAdded} from \"../../../shared/reducers/offer.reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getBaseImageUrl, getFullnameUser, getImageForOffer, getUserAvatar} from \"../../../shared/utils/utils-functions\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {IOffer} from \"../../../shared/model/offer.model\";\r\nimport Box from \"@mui/material/Box/Box\";\r\n// import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Pagination } from \"swiper\";\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {LazyImage} from \"../../../shared/components/lazy-image\";\r\n\r\n\r\nfunction RecentlyAddedHome({offer, index, rediretTo}: {offer: IOffer, index: number, rediretTo: any}){\r\n\r\n\r\n    const getPathImg = (offer: IOffer) => {\r\n        return offer && offer?.offerImages && offer?.offerImages[0] ? offer?.offerImages[0]?.path : '';\r\n    }\r\n    return (\r\n        <CardActionArea component=\"a\" onClick={() => rediretTo(offer.id)} key={`entity-${index}`}>\r\n            <Card sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar role=\"img\"\r\n                                aria-label=\"Image avatar\"\r\n                                src={getUserAvatar(offer.user?.id, offer.user?.imageUrl, offer.user?.sourceRegister)}\r\n                                alt=\"image not found\">\r\n                            {getFullnameUser(offer.user)?.charAt(0)}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton aria-label=\"settings\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                    title={getFullnameUser(offer?.user)}\r\n                    subheader={<ConvertReactTimeAgo convertDate={offer.dateCreated} />}\r\n                />\r\n                {/*<CardMedia component=\"img\" height=\"194\" image={getImageForOffer(offer?.id, getPathImg(offer) || '')} alt=\"Image Offer\" />*/}\r\n\r\n                {\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{height:200}}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)}\r\n                                              className=\"img-lazy-loading\"\r\n                                              alt=\"image not found\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)}\r\n                                          className=\"img-lazy-loading\"\r\n                                          style={{height:200}}\r\n                                          alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            height=\"200\"\r\n                            image={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)}\r\n                            alt=\"image not found\"\r\n                        />\r\n                    )\r\n                }\r\n\r\n                <CardContent className=\"card-content-offer\">\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" className=\"truncate-string-two-lines\">\r\n                        <span dangerouslySetInnerHTML={{ __html: offer.description || '' }}></span>\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"share\">\r\n                        <ShareIcon />\r\n                    </IconButton>\r\n                    <ExpandMore aria-label=\"show more\">\r\n                        <ExpandMoreIcon />\r\n                    </ExpandMore>\r\n                </CardActions>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n\r\nconst ExpandMore = styled((props: any) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport interface IRecentlyAddedHomeClientProps extends StateProps, DispatchProps {}\r\n\r\nexport const RecentlyAddedHomeClient = (props: IRecentlyAddedHomeClientProps) => {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const {listOffers, getEntitiesRecentlyAdded} = props;\r\n\r\n    React.useEffect(() => {\r\n        getEntitiesRecentlyAdded(0, 9, 'id,asc');\r\n    }, []);\r\n\r\n    const rediretTo = (offerId: string) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.DETAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{ mt: 5 }} className=\"container-recently-added-home\">\r\n            <h3>\r\n                <u>Récemment ajoutés</u>\r\n            </h3>\r\n            <Grid container spacing={4}  sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                {listOffers.map((offer: any, index: number) => (\r\n                    <Grid item  key={`offer-${index}`} xs={12} sm={6} md={4}>\r\n                        <RecentlyAddedHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                <Swiper pagination={true} modules={[Pagination]} className=\"mySwiper\">\r\n                    {listOffers.map((offer: any, index: number) => (\r\n                        <SwiperSlide key={`offer-${index}`}><RecentlyAddedHome offer={offer} index={index} rediretTo={rediretTo}/></SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ offer }: IRootState) => ({\r\n    listOffers: offer.entitiesRecentlyAddedOffers,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitiesRecentlyAdded,\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentlyAddedHomeClient);\r\n","import React from 'react';\r\nimport Container from '@mui/material/Container/Container';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport CardActionArea from '@mui/material/CardActionArea/CardActionArea';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardMedia from '@mui/material/CardMedia/CardMedia';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {IRentOffer} from \"../../../shared/model/rent-offer.model\";\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../shared/utils/utils-functions\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {getEntitiesForRent} from \"../../../shared/reducers/rent-offer.reducer\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport {IOffer} from \"../../../shared/model/offer.model\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport './ForRentHome.scss';\r\n\r\nimport {Pagination } from \"swiper\";\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport {LazyImage} from \"../../../shared/components/lazy-image\";\r\n\r\nfunction ItemForRentHome({offer, index, rediretTo}: {offer: IOffer, index: number, rediretTo: any}){\r\n    return (\r\n        <CardActionArea component=\"a\" onClick={() => rediretTo(offer.id)}>\r\n\r\n            {/*For Desktop*/}\r\n            <Card sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n                {index % 2 === 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n                <CardContent sx={{flex: 1}}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{maxWidth: 400}}>\r\n                        <div dangerouslySetInnerHTML={{__html: offer.description || ''}}></div>\r\n                    </Box>\r\n                </CardContent>\r\n                {index % 2 !== 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n            </Card>\r\n\r\n\r\n            {/*For Mobile*/}\r\n            <Card sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                {\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                }\r\n                <CardContent sx={{flex: 1}}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{maxWidth: 400}}>\r\n                        <div dangerouslySetInnerHTML={{__html: offer.description || ''}}></div>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n\r\nexport interface IForRentClientProp extends StateProps, DispatchProps {\r\n}\r\n\r\nexport const ForRentHomeClient = (props: IForRentClientProp) => {\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n\r\n    const {getEntitiesForRent, listRentOffers} = props;\r\n\r\n    React.useEffect(() => {\r\n        getEntitiesForRent(0, 4, 'id,asc');\r\n    }, []);\r\n\r\n    const rediretTo = (offerId?: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.OFFER.DEAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" className=\"container-for-rent-home\">\r\n            <h3>\r\n                <Link to={`${ALL_APP_ROUTES.OFFER.LIST}?typeOffer=${TypeOfferEnum.Rent}`}>\r\n                    {t('common.for_rent')}\r\n                </Link>\r\n            </h3>\r\n            <Grid container rowSpacing={2} columnSpacing={{xs: 1, sm: 2, md: 3}} sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                {listRentOffers.map((offer: IRentOffer, index: number) => (\r\n                    <Grid item xs={12} md={6} key={`offer-${index}`}>\r\n                        <ItemForRentHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                <Swiper\r\n                    pagination={true}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 3000,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    modules={[Pagination]}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {listRentOffers.map((offer: IRentOffer, index: number) => (\r\n                        <SwiperSlide key={`offer-${index}`}>\r\n                            <ItemForRentHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({rentOffer}: IRootState) => ({\r\n    listRentOffers: rentOffer.entitiesRentOffers,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitiesForRent,\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForRentHomeClient);\r\n","import React from 'react';\r\nimport Container from '@mui/material/Container/Container';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport CardActionArea from '@mui/material/CardActionArea/CardActionArea';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardMedia from '@mui/material/CardMedia/CardMedia';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../shared/utils/utils-functions\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {getEntitiesForFind} from \"../../../shared/reducers/find-offer.reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {IOffer} from \"../../../shared/model/offer.model\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport {Pagination} from \"swiper\";\r\n\r\nimport './ForFindHome.scss';\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport {LazyImage} from \"../../../shared/components/lazy-image\";\r\n\r\n\r\nfunction ItemForFindHome({offer, index, rediretTo}: {offer: IOffer, index: number, rediretTo: any}){\r\n    return (\r\n        <CardActionArea component=\"a\" onClick={() => rediretTo(offer.id)}>\r\n\r\n            {/*For Desktop*/}\r\n            <Card sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n                {index % 2 === 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n                <CardContent sx={{ flex: 1 }}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{ maxWidth: 400 }}>\r\n                        <div dangerouslySetInnerHTML={{__html: offer.description || ''}}></div>\r\n                    </Box>\r\n                </CardContent>\r\n                {index % 2 !== 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n            </Card>\r\n\r\n\r\n            {/*For Mobile*/}\r\n            <Card sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                {\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                }\r\n                <CardContent sx={{ flex: 1 }}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{ maxWidth: 400 }}>\r\n                        <div dangerouslySetInnerHTML={{__html: offer.description || ''}}></div>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n\r\nexport interface IForFindClientProp extends StateProps, DispatchProps {}\r\n\r\nexport const ForFindHomeClient = (props: IForFindClientProp) => {\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    const { listFindOffers, getEntitiesForFind } = props;\r\n\r\n    React.useEffect(() => {\r\n        getEntitiesForFind(0, 4, 'id,asc');\r\n    }, [])\r\n\r\n    const rediretTo = (offerId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.OFFER.DEAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" className=\"container-for-find-home\">\r\n            <h3>\r\n                <Link to={`${ALL_APP_ROUTES.OFFER.LIST}?typeOffer=${TypeOfferEnum.Find}`}>\r\n                    {t('common.for_find')}\r\n                </Link>\r\n            </h3>\r\n            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }} sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                {listFindOffers.map((offer: any, index: number) => (\r\n                    <Grid item xs={12} md={6} key={`offer-${index}`}>\r\n                        <ItemForFindHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                <Swiper\r\n                    pagination={true}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 3500,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    modules={[Pagination]}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {listFindOffers.map((offer: any, index: number) => (\r\n                        <SwiperSlide key={`offer-${index}`}>\r\n                            <ItemForFindHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ findOffer }: IRootState) => ({\r\n    listFindOffers: findOffer.entitiesFindOffers,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitiesForFind,\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForFindHomeClient);","import React from 'react';\r\n// Import Swiper React components\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, {EffectCoverflow, Pagination, Navigation, Autoplay} from 'swiper';\r\nimport {connect} from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {StorageService} from \"../../../shared/services/storage.service\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../shared/utils/utils-functions\";\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {getEntitiesExistOfferImages} from \"../../../shared/reducers/offer-images.reducer\";\r\nimport Box from \"@mui/material/Box/Box\";\r\n\r\nimport './BottomHomeSlides.scss';\r\nimport {LazyImage} from \"../../../shared/components/lazy-image\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([EffectCoverflow, Pagination, Navigation, Autoplay]);\r\n\r\nexport interface IBottomHomeSlidesProp extends StateProps, DispatchProps {\r\n}\r\n\r\nexport const BottomHomeSlides = (props: IBottomHomeSlidesProp) => {\r\n    const [slideListBottom, setSlideListBottom] = React.useState(StorageService.local.get(AllAppConfig.SlideListBottom));\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const {listExistOfferImages, loadingExistOfferImages, getEntitiesExistOfferImages} = props;\r\n\r\n    React.useEffect(() => {\r\n        getEntitiesExistOfferImages(0, 5, 'id,asc')\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (listExistOfferImages && listExistOfferImages.length > 0) {\r\n            setSlideListBottom(listExistOfferImages.slice());\r\n\r\n            // For next refresh\r\n            StorageService.local.set(AllAppConfig.SlideListBottom, listExistOfferImages);\r\n        }\r\n    }, [listExistOfferImages]);\r\n\r\n    React.useEffect(() => {\r\n    }, [slideListBottom])\r\n\r\n    const rediretTo = (offerId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.OFFER.DEAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    return slideListBottom && slideListBottom.length > 0 && !loadingExistOfferImages ? (\r\n        <Box sx={{my: 5}} className=\"bottom-home-slides\">\r\n            <Swiper\r\n                effect={\"coverflow\"}\r\n                grabCursor={true}\r\n                centeredSlides={true}\r\n                slidesPerView={\"auto\"}\r\n                coverflowEffect={{\r\n                    rotate: 50,\r\n                    stretch: 0,\r\n                    depth: 100,\r\n                    modifier: 1,\r\n                    slideShadows: true,\r\n                }}\r\n                pagination={true}\r\n                modules={[EffectCoverflow, Pagination]}\r\n                className=\"mySwiper\"\r\n                autoplay={{\r\n                    delay: 3000,\r\n                    disableOnInteraction: false,\r\n                }}\r\n                loop={true}\r\n            >\r\n                {slideListBottom.map((offer: any, index: number) => (\r\n                    <div key={`${index}-${offer[0]}`}>\r\n                        <SwiperSlide key={`slide-${index}-${offer[0]}`} onClick={() => rediretTo(offer[0])}>\r\n                            {/*<img src={getImageForOffer(offer[0], offer[1])} alt=\"Image not found\"*/}\r\n                            {/*     className=\"full-img-responsive\"*/}\r\n                            {/*     width=\"500\"*/}\r\n                            {/*     height=\"500\"/>*/}\r\n\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer[0], offer[1])}\r\n                                alt=\"Image swiper\"\r\n                                actual={({ imageProps }) => <img {...imageProps} className=\"full-img-responsive\"/>}\r\n                                placeholder={({ ref }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n\r\n                        </SwiperSlide>\r\n                    </div>\r\n                ))}\r\n            </Swiper>\r\n\r\n        </Box>\r\n    ) : (\r\n        <Box></Box>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({offerImages}: IRootState) => ({\r\n    listExistOfferImages: offerImages.entitiesExistOfferImages,\r\n    loadingExistOfferImages: offerImages.loadingExistOfferImages,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitiesExistOfferImages,\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomHomeSlides);\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {SearchAppBar} from \"../../../shared/layout/menus/SearchAppBar\";\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport { Parallax, Pagination, Navigation } from \"swiper\";\r\nimport './TopHomeSlides.scss';\r\nimport {StorageService} from \"../../../shared/services/storage.service\";\r\nimport {ITopHomeSlidesImages} from \"../../../shared/model/top-home-slides-images.model\";\r\nimport i18n from \"i18next\";\r\nimport {getFullUrlWithParams} from \"../../../shared/utils/utils-functions\";\r\n\r\n\r\n// const defaultImage = getBaseImageUrl('/assets/images/home/default_top_home.jpg');\r\n\r\nexport interface ITopHomeSlidesProp extends StateProps, DispatchProps {}\r\n\r\nexport const TopHomeSlides = (props: ITopHomeSlidesProp) => {\r\n\r\n    const [listTopSlidesImage] = React.useState<ITopHomeSlidesImages[]>(StorageService.local.get(AllAppConfig.HOME_TOP_SLIDES_IMAGE))\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    React.useEffect(() => {\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n    }, []);\r\n\r\n    const searchCalback = (values: any) => {\r\n        navigate({\r\n            pathname: ALL_APP_ROUTES.SEARCH,\r\n            search: \"?\" + new URLSearchParams(getFullUrlWithParams(values)).toString()\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(props.entitiesTopHomeSlidesImages && props.entitiesTopHomeSlidesImages.length){\r\n            StorageService.local.set(AllAppConfig.HOME_TOP_SLIDES_IMAGE, props.entitiesTopHomeSlidesImages.slice());\r\n        }\r\n    }, [props.entitiesTopHomeSlidesImages])\r\n\r\n    const getBackgroundImage = () => {\r\n        for (let i=0; i<listTopSlidesImage.length; i++){\r\n            if(listTopSlidesImage[i]?.image){\r\n                return listTopSlidesImage[i]?.image;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getDescription = (item: ITopHomeSlidesImages): string => {\r\n        if( defaultLanguage==='en' ){\r\n            return item.descriptionEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return item.descriptionFr || '';\r\n        }\r\n        return item.descriptionAr || '';\r\n    }\r\n\r\n    return (\r\n        <div className=\"top-home-slides\">\r\n            {\r\n                listTopSlidesImage && listTopSlidesImage.length ? <Swiper\r\n                    speed={600}\r\n                    parallax={true}\r\n                    pagination={{\r\n                        clickable: true,\r\n                    }}\r\n                    navigation={false}\r\n                    modules={[Parallax, Pagination, Navigation]}\r\n                    className=\"mySwiper\"\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 2500,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                >\r\n                    <div\r\n                        slot=\"container-start\"\r\n                        className=\"parallax-bg\"\r\n                        style={{ \"backgroundImage\": `url(${getBackgroundImage()})` }}\r\n                        data-swiper-parallax=\"-23%\"\r\n                    ></div>\r\n                    {\r\n                        listTopSlidesImage.map((item: ITopHomeSlidesImages, index: number) => (\r\n                            <SwiperSlide key={`index-${index}`}>\r\n                                <div className=\"text\" data-swiper-parallax=\"-300\">\r\n                                    <div dangerouslySetInnerHTML={{ __html: getDescription(item) }}></div>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        ))\r\n                    }\r\n                </Swiper> : null\r\n            }\r\n\r\n\r\n            <Box\r\n                sx={{\r\n                    position: { xs: 'relative', md: 'absolute' },\r\n                    bottom: -50,\r\n                    right: 0,\r\n                    left: 0,\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                    backgroundColor: '#fff',\r\n                    maxWidth: 959,\r\n                    height: { sx: 'auto', md: 100 },\r\n                    zIndex: 9\r\n                }}\r\n            >\r\n                <SearchAppBar entitiesCategories={props.entitiesCategories.slice()} searchCalback={searchCalback} listAddress={props.entitiesAddress.slice()} hideFilter={true}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({category, topHomeSlidesImages, address}: IRootState) => ({\r\n    entitiesCategories: category.entities,\r\n    entitiesTopHomeSlidesImages: topHomeSlidesImages.entities,\r\n\r\n    entitiesAddress: address.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopHomeSlides);","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {StorageService} from '../../../shared/services/storage.service';\r\nimport {connect} from \"react-redux\";\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {IPostHomeFeature} from \"../../../shared/model/post-home-feature.model\";\r\nimport i18n from \"i18next\";\r\n\r\nexport interface IPostHomeFeatureProp extends StateProps, DispatchProps {}\r\n\r\nexport const PostHomeFeature = (props: IPostHomeFeatureProp) => {\r\n\r\n    const [entityPostHomeFeature, setEntityPostHomeFeature] = React.useState<IPostHomeFeature>(StorageService.local.get(AllAppConfig.POST_HOME_FEATURE))\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n\r\n    React.useEffect(() => {\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n\r\n        if(!isEmpty(props.entity)){\r\n            StorageService.local.set(AllAppConfig.POST_HOME_FEATURE, props.entity);\r\n        }\r\n    }, [props.entity]);\r\n\r\n    const getDescription = (): string => {\r\n        if( defaultLanguage==='en' ){\r\n            return entityPostHomeFeature.descriptionEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return entityPostHomeFeature.descriptionFr || '';\r\n        }\r\n        return entityPostHomeFeature.descriptionAr || '';\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{ my: 10 }}>\r\n            {\r\n                !isEmpty(entityPostHomeFeature) ? <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        {/*<LazyImage className=\"img-fluid\" src={defaultImage} alt={defaultImage}/>*/}\r\n                        <img\r\n                            className=\"full-img-responsive\"\r\n                            src={entityPostHomeFeature.image}\r\n                            alt='bg'\r\n                            onError={(e: any) => {\r\n                                e.target.onerror = null;\r\n                                e.target.src = entityPostHomeFeature.image;\r\n                            }}\r\n                            width=\"1000\"\r\n                            height=\"500\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <div dangerouslySetInnerHTML={{ __html: getDescription() }}></div>\r\n\r\n                        {/*<div>{parse(cmsEntity.description)}</div>*/}\r\n                        {/*<h4>The Ultimate Hotel for Both Leisure and Business Goers</h4>*/}\r\n                        {/*<h2>WHO VISIT THE FINE CITY OF INDIANAPOLIS</h2>*/}\r\n                        {/*<p>*/}\r\n                        {/*The Woods hotel, located in the very heart of Indianapolis is a welcoming retreat for either*/}\r\n                        {/*people traveling across the country*/}\r\n                        {/*or businessmen, visiting our Rustbelt state for some commercial affairs. Here, we always make*/}\r\n                        {/*sure that you will have any of*/}\r\n                        {/*your needs satisfied, be it a comfortable hotel room with a strong WiFi signal and a diligent*/}\r\n                        {/*room service, a dining and lounge*/}\r\n                        {/*zone or any additional amenities a traveller might want…*/}\r\n                        {/*</p>*/}\r\n                        {/*<Button variant=\"outlined\">Default</Button>*/}\r\n                    </Grid>\r\n                </Grid> : null\r\n            }\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = ({postHomeFeature}: IRootState) => ({\r\n    entity: postHomeFeature.entity,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostHomeFeature);\r\n","import * as React from 'react';\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport ForSellHomeClient from \"./ui-segments/ForSellHomeClient\";\r\nimport FirstHorizentalListHomeClient from \"./ui-segments/FirstHorizentalListHomeClient\";\r\nimport SecondHorizentalListHomeClient from \"./ui-segments/SecondHorizentalListHomeClient\";\r\nimport ThirdHorizentalListHomeClient from \"./ui-segments/ThirdHorizentalListHomeClient\";\r\nimport RecentlyAddedHomeClient from \"./ui-segments/RecentlyAddedHomeClient\";\r\nimport ForRentHomeClient from \"./ui-segments/ForRentHomeClient\";\r\nimport ForFindHomeClient from \"./ui-segments/ForFindHomeClient\";\r\nimport BottomHomeSlides from \"./ui-segments/BottomHomeSlides\";\r\nimport './home.scss';\r\nimport TopHomeSlides from \"./ui-segments/TopHomeSlides\";\r\nimport PostHomeFeature from \"./ui-segments/PostHomeFeature\";\r\n\r\nexport default function Home(props: any){\r\n    return (\r\n        <Box>\r\n\r\n            <TopHomeSlides />\r\n\r\n            <ForSellHomeClient {...props} />\r\n\r\n            <FirstHorizentalListHomeClient />\r\n\r\n            <ForRentHomeClient {...props} />\r\n\r\n            <SecondHorizentalListHomeClient />\r\n\r\n            <ForFindHomeClient {...props} />\r\n\r\n            <ThirdHorizentalListHomeClient />\r\n\r\n            <RecentlyAddedHomeClient />\r\n\r\n            <PostHomeFeature />\r\n\r\n            <BottomHomeSlides {...props}/>\r\n        </Box>\r\n    );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["ItemForSell","offer","index","rediretTo","CardActionArea","component","onClick","id","Card","sx","display","xs","sm","offerImages","length","CardMedia","width","height","src","getImageForOffer","path","alt","actual","imageProps","className","placeholder","ref","loading","getBaseImageUrl","AllAppConfig","error","CardContent","flex","Typography","variant","title","color","convertDate","dateCreated","Box","style","maxWidth","dangerouslySetInnerHTML","__html","description","mapDispatchToProps","getEntitiesForSell","connect","listSellOffers","sellOffer","entitiesSellOffers","props","navigate","useNavigate","t","useTranslation","offerId","setTimeout","ALL_APP_ROUTES","React","Container","my","to","TypeOfferEnum","Grid","container","rowSpacing","columnSpacing","md","map","item","pagination","loop","autoplay","delay","disableOnInteraction","modules","Pagination","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","text","secondary","FirstHorizentalListHomeClient","listCategories","img","Translation","i18n","p","Stack","px","justifyContent","direction","category","Avatar","marginLeft","marginRight","SecondHorizentalListHomeClient","listServices","primaryTitle","secondTitle","service","flexDirection","flexGrow","minHeight","List","ListItem","alignItems","ListItemAvatar","ListItemText","primary","ThirdHorizentalListHomeClient","backgroundColor","marginTop","bgcolor","fontSize","slidesPerView","spaceBetween","clickable","RecentlyAddedHome","CardHeader","avatar","role","getUserAvatar","user","imageUrl","sourceRegister","getFullnameUser","charAt","action","IconButton","MoreVert","subheader","image","CardActions","disableSpacing","Favorite","Share","ExpandMore","expand","other","transform","transition","transitions","create","duration","shortest","getEntitiesRecentlyAdded","listOffers","entitiesRecentlyAddedOffers","mt","ItemForRentHome","getEntitiesForRent","listRentOffers","rentOffer","entitiesRentOffers","ItemForFindHome","getEntitiesForFind","listFindOffers","findOffer","entitiesFindOffers","SwiperCore","EffectCoverflow","Navigation","Autoplay","getEntitiesExistOfferImages","listExistOfferImages","entitiesExistOfferImages","loadingExistOfferImages","StorageService","slideListBottom","setSlideListBottom","slice","effect","grabCursor","centeredSlides","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","topHomeSlidesImages","address","entitiesCategories","entities","entitiesTopHomeSlidesImages","entitiesAddress","listTopSlidesImage","defaultLanguage","setDefaultLanguage","lang","getDescription","descriptionEn","descriptionFr","descriptionAr","speed","parallax","navigation","Parallax","slot","i","getBackgroundImage","position","bottom","right","left","zIndex","SearchAppBar","searchCalback","values","pathname","search","URLSearchParams","getFullUrlWithParams","toString","listAddress","hideFilter","entity","postHomeFeature","entityPostHomeFeature","isEmpty","onError","e","target","onerror","Home","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_jsx"],"sourceRoot":""}