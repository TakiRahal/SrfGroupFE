{"version":3,"file":"static/js/586.3b776124.chunk.js","mappings":"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","sources":["main-features/notification/ui-segments/NotificationLoading.tsx","shared/enums/module-notification.ts","main-features/notification/Notification.tsx","shared/pages/react-time-ago.tsx","../node_modules/@mui/icons-material/CircleNotifications.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/material/Container/containerClasses.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React  from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Divider from '@mui/material/Divider/Divider';\r\nimport Skeleton from '@mui/material/Skeleton/Skeleton';\r\n\r\nexport default function LoadingNotification() {\r\n    return (\r\n        <List\r\n            sx={{\r\n                bgcolor: 'background.paper',\r\n            }}\r\n        >\r\n            <ListItem button>\r\n                <ListItemAvatar>\r\n                    <Skeleton variant=\"circular\" width={40} height={40} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={<Skeleton variant=\"text\" height={40} />} secondary={<Skeleton variant=\"text\" height={20} />} />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem button>\r\n                <ListItemAvatar>\r\n                    <Skeleton variant=\"circular\" width={40} height={40} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={<Skeleton variant=\"text\" height={40} />} secondary={<Skeleton variant=\"text\" height={20} />} />\r\n            </ListItem>\r\n        </List>\r\n    );\r\n}\r\n","export enum ModuleNotification {\r\n    ADMIN_NOTIFICATION = 'AdminNotification',\r\n    OFFER_NOTIfICATION = 'OfferNotification',\r\n    COMMENT_OFFER_NOTIFICATION = 'CommentOfferNotification',\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {IRootState} from \"../../shared/reducers\";\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport {ALL_APP_ROUTES} from \"../../core/config/all-app-routes\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport LoadingNotification from \"./ui-segments/NotificationLoading\";\r\nimport ListItem from \"@mui/material/ListItem/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar/Avatar\";\r\nimport ListItemText from \"@mui/material/ListItemText/ListItemText\";\r\nimport Divider from \"@mui/material/Divider/Divider\";\r\nimport List from \"@mui/material/List/List\";\r\nimport CircleNotificationsIcon from '@mui/icons-material/CircleNotifications';\r\nimport {\r\n    getEntities as getEntitiesNotification,\r\n    setIsReadNotifications,\r\n    reset as resetNotification\r\n} from '../../shared/reducers/notification.reducer';\r\nimport {INotification} from \"../../shared/model/notification.model\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {ConvertReactTimeAgo} from \"../../shared/pages/react-time-ago\";\r\nimport {ModuleNotification} from \"../../shared/enums/module-notification\";\r\nimport {AllAppConfig} from \"../../core/config/all-config\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport {resetNbeNotificationsNotRead} from \"../../shared/reducers/user-reducer\";\r\nimport './Notification.scss';\r\n\r\nexport interface INotificationProps extends StateProps, DispatchProps {}\r\n\r\nexport const Notification = (props: INotificationProps) => {\r\n\r\n    const [activePage, setActivePage] = React.useState(-1);\r\n\r\n\r\n    let tmpListNotSee : INotification[] = [];\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n\r\n    const resetAll = () => {\r\n        props.resetNotification();\r\n        setActivePage(0);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        resetAll();\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if(activePage>=0){\r\n            props.getEntitiesNotification(activePage, AllAppConfig.NOTIFICATIONS_PER_PAGE, '');\r\n        }\r\n    }, [activePage]);\r\n\r\n    React.useEffect(() => {\r\n        if(props.listNotifications && props.listNotifications.length>0){\r\n            for (let i = 0; i < props.listNotifications.length; i++) {\r\n                if(!props.listNotifications[i].isRead){\r\n                    tmpListNotSee.push({\r\n                        id: props.listNotifications[i].id\r\n                    });\r\n                }\r\n            }\r\n            if(tmpListNotSee.length>0){\r\n                props.setIsReadNotifications(tmpListNotSee);\r\n            }\r\n        }\r\n    }, [props.listNotifications])\r\n\r\n    React.useEffect(() => {\r\n        if(props.addSuccessIsRead){\r\n            props.resetNbeNotificationsNotRead();\r\n        }\r\n    }, [props.addSuccessIsRead]);\r\n\r\n    const loadMore = () => {\r\n        setActivePage(activePage+1);\r\n    }\r\n\r\n    const redirect = (notification: INotification) => {\r\n        if(notification.module===ModuleNotification.COMMENT_OFFER_NOTIFICATION){\r\n            setTimeout(() => {\r\n                navigate(ALL_APP_ROUTES.DETAILS_OFFER + '/' + notification?.offer?.id);\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Grid\r\n                container\r\n                style={{\r\n                    paddingTop: 10,\r\n                }}\r\n            >\r\n                <Grid item xs={12} sm={6}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                            SRF\r\n                        </Link>\r\n                        <Typography color=\"text.primary\">\r\n                            {t('notification.title_page')}\r\n                        </Typography>\r\n                    </Breadcrumbs>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n                container\r\n                spacing={6}\r\n                style={{\r\n                    paddingTop: 50,\r\n                }}\r\n            >\r\n                <Grid item xs={12} sm={6} md={3}></Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={6} className=\"my-container\">\r\n\r\n\r\n                        <InfiniteScroll\r\n                            pageStart={activePage}\r\n                            loadMore={loadMore}\r\n                            hasMore={props.totalPages-1 > activePage && !props.loadingNotificationss}\r\n                            loader={<div className=\"loader\" key={0}></div>}\r\n                            threshold={0}\r\n                            initialLoad={false}\r\n                        >\r\n                            <List>\r\n                                {props.listNotifications.map((notification: INotification, index: number) => (\r\n                                    <React.Fragment key={`notification-${notification.id}-${index}`}>\r\n                                        <ListItem button sx={{\r\n                                            bgcolor: notification.isRead ? '' : 'background.paper',\r\n                                        }} onClick={() => redirect(notification)}>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <CircleNotificationsIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={<ConvertReactTimeAgo convertDate={notification.dateCreated} />}\r\n                                                          secondary={notification.content} />\r\n                                        </ListItem>\r\n                                        <Divider variant=\"inset\" component=\"li\" />\r\n                                    </React.Fragment>\r\n                                ))}\r\n\r\n                                { props.loadingNotificationss ? <LoadingNotification/> : null }\r\n\r\n                            </List>\r\n                        </InfiniteScroll>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ notification }: IRootState) => ({\r\n    loadingNotificationss: notification.loadingEntities,\r\n    listNotifications: notification.entities,\r\n    totalItems: notification.totalItems,\r\n    totalPages: notification.totalPages,\r\n    addSuccessIsRead: notification.addSuccessIsRead\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitiesNotification,\r\n    setIsReadNotifications,\r\n    resetNbeNotificationsNotRead,\r\n    resetNotification\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);","import * as React from 'react';\r\nimport ReactTimeAgo from 'react-time-ago';\r\n\r\nexport const ConvertReactTimeAgo = (date: any, locale?: any) => {\r\n  if (date && date.convertDate) {\r\n    return <ReactTimeAgo date={new Date(date.convertDate)} locale='fr-FR' />;\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 16.5c-.83 0-1.5-.67-1.5-1.5h3c0 .83-.67 1.5-1.5 1.5zm5-2.5H7v-1l1-1v-2.61C8 9.27 9.03 7.47 11 7v-.5c0-.57.43-1 1-1s1 .43 1 1V7c1.97.47 3 2.28 3 4.39V14l1 1v1z\"\n}), 'CircleNotifications');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nconst ContainerRoot = styled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  ownerState\n}) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(ownerState.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ContainerRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["LoadingNotification","List","sx","bgcolor","ListItem","button","ListItemAvatar","Skeleton","variant","width","height","ListItemText","primary","secondary","Divider","component","ModuleNotification","Notification","props","React","activePage","setActivePage","tmpListNotSee","t","useTranslation","navigate","useNavigate","resetNotification","getEntitiesNotification","AllAppConfig","listNotifications","length","i","isRead","push","id","setIsReadNotifications","addSuccessIsRead","resetNbeNotificationsNotRead","Container","Grid","container","style","paddingTop","item","xs","sm","Breadcrumbs","color","to","ALL_APP_ROUTES","Typography","spacing","md","className","pageStart","loadMore","hasMore","totalPages","loadingNotificationss","loader","threshold","initialLoad","map","notification","index","onClick","module","COMMENT_OFFER_NOTIFICATION","setTimeout","offer","redirect","Avatar","CircleNotifications","convertDate","dateCreated","content","mapDispatchToProps","connect","loadingEntities","entities","totalItems","ConvertReactTimeAgo","date","locale","Date","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_jsx","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","display","marginLeft","marginRight","palette","mode","backgroundColor","grey","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BreadcrumbsRoot","name","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","reduce","acc","current","concat","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","filter","child","clsx","slice","BreadcrumbCollapsed","focusable","querySelector","focus","renderItemsBeforeAndAfter","getContainerUtilityClass","ContainerRoot","capitalize","String","maxWidth","fixed","disableGutters","boxSizing","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","breakpoint","value","unit","Math","max","slots","as"],"sourceRoot":""}