{"version":3,"file":"static/js/674.42a12744.chunk.js","mappings":"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","sources":["main-features/offer/components/add-update/validation/init-value-add-offer.ts","shared/components/sun-editor/CustomSunEditor.tsx","main-features/offer/components/add-update/ui-segments/ooptions-common-add-offer.tsx","main-features/offer/components/add-update/ui-segments/options-sell-add-offer.tsx","main-features/offer/components/add-update/ui-segments/options-rent-add-offer.tsx","main-features/offer/components/add-update/ui-segments/options-find-add-offer.tsx","main-features/offer/components/add-update/add-update.tsx","shared/enums/offer-type-contact.enum.ts","shared/enums/type-offer.enum.ts","shared/pages/transition-modal.tsx","shared/utils/image-url.ts","../node_modules/suneditor/src/lang|sync|/^/.*/.js$"],"sourcesContent":["import * as Yup from 'yup';\r\n\r\nexport const initialValuesAddOffer = {\r\n    typeOffer: '',\r\n    title: '',\r\n    description: '',\r\n    amount: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    typePeriodRent: '',\r\n    address: null,\r\n    category: null,\r\n    typeFindOffer: '',\r\n    typeContactClient: ''\r\n};\r\n\r\nexport const validationSchemaAddOffer = Yup.object({\r\n    typeOffer: Yup.string().required('add_offer.type_offer_require'),\r\n    title: Yup.string().required('add_offer.title_required').min(5, 'add_offer.title_min_length').max(200, 'add_offer.title_max_length'),\r\n    description: Yup.string().required('add_offer.description_required'),\r\n    amount: Yup.number().nullable().notRequired(),\r\n    startDate: Yup.date().nullable().notRequired(),\r\n    endDate: Yup.date().nullable().notRequired(),\r\n    typePeriodRent: Yup.string().nullable().notRequired(),\r\n    address: Yup.object().nullable().notRequired().default(null),\r\n    category: Yup.object().nullable().notRequired().default(null),\r\n    typeFindOffer: Yup.string().nullable().notRequired(),\r\n    typeContactClient: Yup.string().nullable().notRequired()\r\n});\r\n\r\nexport const setDefaultsValues = (formik: any, offerEntity: any) => {\r\n    formik.setFieldValue('typeOffer', offerEntity.typeOffer ? offerEntity.typeOffer : '');\r\n    formik.setFieldValue('title', offerEntity.title ? offerEntity.title : '');\r\n    formik.setFieldValue('description', offerEntity.description ? offerEntity.description : '');\r\n    //\r\n    // if (offerEntity.typeOffer === TypeOfferEnum.Sell) {\r\n    //   formik.setFieldValue('amount', offerEntity.title ? offerEntity.amount : null);\r\n    // } else if (offerEntity.typeOffer === TypeOfferEnum.Rent) {\r\n    //   formik.setFieldValue('amount', offerEntity.title ? offerEntity.amount : null);\r\n    //   formik.setFieldValue('startDate', offerEntity.title ? offerEntity.startDate : null);\r\n    //   formik.setFieldValue('endDate', offerEntity.title ? offerEntity.endDate : null);\r\n    // } else if (offerEntity.typeOffer === TypeOfferEnum.Find) {\r\n    //   formik.setFieldValue('amount', offerEntity.title ? offerEntity.amount : null);\r\n    // }\r\n\r\n    formik.setFieldValue('address', offerEntity.address ? offerEntity.address : null);\r\n    formik.setFieldValue('category', offerEntity.category ? offerEntity.category : null);\r\n    return formik;\r\n};\r\n","import React from 'react';\r\nimport SunEditor  from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nexport function CustomSunEditor({ defaultValue, callbcakHandleChange, placeholder }: { defaultValue: string, callbcakHandleChange: any, placeholder: string }) {\r\n\r\n    const handleChange = (content: any) => {\r\n        callbcakHandleChange(content);\r\n    }\r\n\r\n    return (\r\n        <SunEditor lang=\"en\"\r\n                   setContents={defaultValue}\r\n                   placeholder={placeholder}\r\n                   setOptions={{\r\n                       height: '200',\r\n                       buttonList: [\r\n                           ['undo', 'redo', 'font', 'fontSize', 'formatBlock']\r\n                       ]\r\n                   }}\r\n                   onChange={handleChange}/>\r\n    );\r\n}","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl/FormControl';\r\nimport FormHelperText from '@mui/material/FormHelperText/FormHelperText';\r\nimport Box from '@mui/material/Box/Box';\r\nimport Autocomplete from '@mui/material/Autocomplete/Autocomplete';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport i18n from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {ICategory} from \"../../../../../shared/model/category.model\";\r\n\r\nexport default function OptionsCommonAddOffer(props: any) {\r\n    const {formik, cities, listCategories} = props;\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n    const { t } = useTranslation();\r\n\r\n    React.useEffect(() => {\r\n\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            console.log('lang ', lang);\r\n            setDefaultLanguage(lang);\r\n        });\r\n    }, []);\r\n\r\n    const getValueTitle = (option: ICategory) => {\r\n        if( defaultLanguage==='en' ){\r\n            return option.titleEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return option.titleFr || '';\r\n        }\r\n        return option.titleAr || '';\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2} sx={{my: 2}}>\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.category && Boolean(formik.errors.category)}>\r\n                        <Autocomplete\r\n                            id=\"country-select\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            options={listCategories}\r\n                            value={formik.values.category}\r\n                            onChange={(e, value) => formik.setFieldValue('category', value || null)}\r\n                            autoHighlight\r\n                            getOptionLabel={option => getValueTitle(option) || ''}\r\n                            renderOption={(propsRender, option) => (\r\n                                <Box component=\"li\" {...propsRender}>\r\n                                    {getValueTitle(option)}\r\n                                </Box>\r\n                            )}\r\n                            renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={t<string>('common.label_category')}\r\n                                    inputProps={{\r\n                                        ...params.inputProps,\r\n                                        form: {\r\n                                            autocomplete: 'off',\r\n                                        },\r\n                                        autoComplete: 'off', // disable autocomplete and autofill\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <FormHelperText id=\"component-helper-text\">{formik.errors.category}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.address && Boolean(formik.errors.address)}>\r\n                        <Autocomplete\r\n                            id=\"country-select\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            options={cities}\r\n                            value={formik.values.address}\r\n                            onChange={(e, value) => formik.setFieldValue('address', value || '')}\r\n                            autoHighlight\r\n                            getOptionLabel={option => option?.city || ''}\r\n                            renderOption={(propsRender, option) => (\r\n                                <Box component=\"li\" {...propsRender}>\r\n                                    {option.city}\r\n                                </Box>\r\n                            )}\r\n                            renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label={t<string>('common.label_address')}\r\n                                    inputProps={{\r\n                                        ...params.inputProps,\r\n                                        form: {\r\n                                            autocomplete: 'off',\r\n                                        },\r\n                                        autoComplete: 'off', // disable autocomplete and autofill\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <FormHelperText id=\"component-helper-text\">{formik.touched.address && formik.errors.address}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport FormControl from '@mui/material/FormControl/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment/InputAdornment';\r\nimport FormHelperText from '@mui/material/FormHelperText/FormHelperText';\r\nimport Box from '@mui/material/Box/Box';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport FormLabel from \"@mui/material/FormLabel/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio/Radio\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {OfferTypeContact} from \"../../../../../shared/enums/offer-type-contact.enum\";\r\n\r\n\r\n\r\nexport default function OptionsSellAddOffer(props: any) {\r\n    const {formik} = props;\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2} sx={{my: 2}}>\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.amount && Boolean(formik.errors.amount)}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">{t<string>('common.label_amount')}</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"amount\"\r\n                            type=\"number\"\r\n                            value={formik.values.amount}\r\n                            onChange={formik.handleChange}\r\n                            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                            label={t<string>('common.label_amount')}\r\n                            size=\"small\"\r\n                        />\r\n                        <FormHelperText\r\n                            id=\"component-helper-text\">{formik.touched.amount && formik.errors.amount}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2} sx={{my: 2}}>\r\n                <Grid item xs={12}>\r\n                    <FormControl>\r\n                        <FormLabel id=\"demo-radio-buttons-group-label\">{t<string>('add_offer.label_type_contact_client')}</FormLabel>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"typeContactClient-label\"\r\n                            id=\"typeContactClient\"\r\n                            name=\"typeContactClient\"\r\n                            value={formik.values.typeContactClient}\r\n                            onChange={formik.handleChange}\r\n                        >\r\n                            <FormControlLabel value={OfferTypeContact.direct} control={<Radio/>} label={t('add_offer.direct_type_contact_client').toString()}/>\r\n                            <FormControlLabel value={OfferTypeContact.perCommmande} control={<Radio/>} label={t('add_offer.per_commande_type_contact_client').toString()}/>\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Box>\r\n    );\r\n}\r\n","import Grid from '@mui/material/Grid';\r\nimport * as React from 'react';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker/DatePicker';\r\nimport FormControl from '@mui/material/FormControl/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment/InputAdornment';\r\nimport FormHelperText from '@mui/material/FormHelperText/FormHelperText';\r\nimport MenuItem from '@mui/material/MenuItem/MenuItem';\r\nimport Select from '@mui/material/Select/Select';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport { PeriodeRent } from '../../../../../shared/enums/type-offer.enum';\r\n\r\nexport default function OptionsRentAddOffer(props: any) {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {formik} = props;\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <Grid container spacing={2} sx={{my: 2}}>\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.amount && Boolean(formik.errors.amount)} size=\"small\">\r\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"amount\"\r\n                            type=\"number\"\r\n                            value={formik.values.amount}\r\n                            onChange={formik.handleChange}\r\n                            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                            label=\"Amount\"\r\n                        />\r\n                        <FormHelperText\r\n                            id=\"component-helper-text\">{formik.touched.amount && formik.errors.amount}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth error={formik.touched.typePeriodRent && Boolean(formik.errors.typePeriodRent)}\r\n                                 className=\"form-control-type-offer\" size=\"small\">\r\n                        <InputLabel id=\"demo-simple-select-label\" className=\"type-offer-select\">\r\n                            {t<string>('add_offer.per_periode')}\r\n                        </InputLabel>\r\n                        <Select\r\n                            id=\"typePeriodRent\"\r\n                            name=\"typePeriodRent\"\r\n                            label={t<string>('add_offer.per_periode')}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            value={formik.values.typePeriodRent}\r\n                            onChange={formik.handleChange}\r\n                        >\r\n                            <MenuItem value={PeriodeRent.PerMonth}>\r\n                                {t<string>('add_offer.per_month')}\r\n                            </MenuItem>\r\n                            <MenuItem value={PeriodeRent.PerDay}>\r\n                                {t<string>('add_offer.per_day')}\r\n                            </MenuItem>\r\n                            <MenuItem value={PeriodeRent.PerYear}>\r\n                                {t<string>('add_offer.per_year')}\r\n                            </MenuItem>\r\n                        </Select>\r\n                        <FormHelperText\r\n                            id=\"component-helper-text\">{formik.touched.typeOffer && formik.errors.typeOffer}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <DatePicker\r\n                        label={t<string>('common.label_start_date')}\r\n                        value={formik.values.startDate}\r\n                        onChange={newValue => formik.setFieldValue('startDate', newValue)}\r\n                        renderInput={params => <TextField {...params} size=\"small\" fullWidth error={false}/>}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <DatePicker\r\n                        label={t<string>('common.label_end_date')}\r\n                        value={formik.values.endDate}\r\n                        onChange={newValue => formik.setFieldValue('endDate', newValue)}\r\n                        renderInput={params => <TextField {...params} size=\"small\" fullWidth error={false}/>}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport FormControl from \"@mui/material/FormControl/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem/MenuItem\";\r\nimport Select from \"@mui/material/Select/Select\";\r\nimport FormHelperText from \"@mui/material/FormHelperText/FormHelperText\";\r\nimport {TypesFindOffer} from \"../../../../../shared/enums/type-offer.enum\";\r\n\r\nexport default function OptionsFindAddOffer(props: any) {\r\n\r\n    const {formik} = props;\r\n\r\n  return (\r\n      <Grid container spacing={1}>\r\n          <Grid item xs={12} md={6}>\r\n              <FormControl\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  error={formik.touched.typeFindOffer && Boolean(formik.errors.typeFindOffer)}\r\n                  className=\"form-control-type-find-offer\"\r\n              >\r\n                  <InputLabel id=\"form-control-type-find-offer\" className=\"type-find-offer-select\">\r\n                      Type Find Offre\r\n                  </InputLabel>\r\n                  <Select\r\n                      id=\"typeFindOffer\"\r\n                      name=\"typeFindOffer\"\r\n                      label=\"Type Find Offer\"\r\n                      labelId=\"demo-simple-select-label\"\r\n                      value={formik.values.typeFindOffer}\r\n                      onChange={formik.handleChange}>\r\n                      <MenuItem value={TypesFindOffer.Carpooling}>\r\n                          CoVoiiturage\r\n                      </MenuItem>\r\n                      <MenuItem value={TypesFindOffer.Travels}>\r\n                          Travels\r\n                      </MenuItem>\r\n                      <MenuItem value={TypesFindOffer.Transporter}>\r\n                          Transporter: from --- to\r\n                      </MenuItem>\r\n                      <MenuItem value={TypesFindOffer.Job}>\r\n                          Travail\r\n                      </MenuItem>\r\n                  </Select>\r\n                  <FormHelperText\r\n                      id=\"form-control-type-find-offer\">{formik.touched.typeFindOffer && formik.errors.typeFindOffer}</FormHelperText>\r\n              </FormControl>\r\n          </Grid>\r\n      </Grid>\r\n\r\n  );\r\n}\r\n\r\n\r\n{/*<div>*/}\r\n    {/*<p>CoVoiiturage</p>*/}\r\n    {/*<p>Travels</p>*/}\r\n    {/*<p>Transporteur: from --- to</p>*/}\r\n{/*</div>*/}\r\n","import React from 'react';\r\nimport { useParams} from \"react-router\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport Paper from \"@mui/material/Paper/Paper\";\r\nimport FormControl from \"@mui/material/FormControl/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem/MenuItem\";\r\nimport Select from \"@mui/material/Select/Select\";\r\nimport FormHelperText from \"@mui/material/FormHelperText/FormHelperText\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput/OutlinedInput\";\r\nimport ImageList from \"@mui/material/ImageList/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem/ImageListItem\";\r\nimport IconButton from \"@mui/material/IconButton/IconButton\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Accordion from \"@mui/material/Accordion/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails/AccordionDetails\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport LoadingButton from \"@mui/lab/LoadingButton/LoadingButton\";\r\nimport {useFormik} from \"formik\";\r\nimport Dialog from \"@mui/material/Dialog/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions/DialogActions\";\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport CircularProgress from \"@mui/material/CircularProgress/CircularProgress\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\r\nimport './add-update.scss';\r\nimport {initialValuesAddOffer, setDefaultsValues, validationSchemaAddOffer} from './validation/init-value-add-offer';\r\nimport {ALL_APP_ROUTES} from \"../../../../core/config/all-app-routes\";\r\nimport {allSessionSelector} from \"../../../user/store/slice\";\r\nimport {IOfferImages} from \"../../../../shared/model/offer-images.model\";\r\nimport {entitiesCategory} from \"../../../category/store/slice\";\r\nimport {allAddressSelector, entitiesAddress} from \"../../../address/store/slice\";\r\nimport {\r\n    convertDateTimeToServer,\r\n    dataUrlToFile,\r\n    getBaseImageUrl,\r\n    getImageForOffer\r\n} from \"../../../../shared/utils/utils-functions\";\r\nimport {TypeOfferEnum} from \"../../../../shared/enums/type-offer.enum\";\r\nimport {AllAppConfig} from \"../../../../core/config/all-config\";\r\nimport {getImageUrl} from \"../../../../shared/utils/image-url\";\r\nimport {TransitionModal} from \"../../../../shared/pages/transition-modal\";\r\nimport {addEventGA, AllModulesEventGA} from \"../../../../shared/providers/google-anaylitics\";\r\nimport {\r\n    addFindOffer,\r\n    addRentOffer,\r\n    addSellerOffer,\r\n    addSuccessFindOffer,\r\n    addSuccessRentOffer,\r\n    addSuccessSellerOffer,\r\n    entityFindOffer,\r\n    entityPublicOffer,\r\n    entityRentOffer,\r\n    entitySellerOffer,\r\n    resetFindOffer,\r\n    resetRentOffer,\r\n    resetSellerOffer,\r\n    updateSuccessFindOffer,\r\n    updateSuccessRentOffer,\r\n    updateSuccessSellerOffer,\r\n    updateSellerOffer,\r\n    updateRentOffer,\r\n    loadingPublicOffer,\r\n    loadingSellerOffer,\r\n    loadingRentOffer,\r\n    loadingFindOffer,\r\n    resetPublicOffers,\r\n    updateFindOffer,\r\n    uploadFilesOffer,\r\n    loadingImagesDescriptionNewOffer, entityDescriptionNewOffer, fetchDescriptionNewOffer\r\n} from \"../../store/slice\";\r\nimport { CustomSunEditor } from '../../../../shared/components/sun-editor/CustomSunEditor';\r\nimport OptionsCommonAddOffer from './ui-segments/ooptions-common-add-offer';\r\nimport OptionsSellAddOffer from \"./ui-segments/options-sell-add-offer\";\r\nimport OptionsRentAddOffer from \"./ui-segments/options-rent-add-offer\";\r\nimport OptionsFindAddOffer from \"./ui-segments/options-find-add-offer\";\r\n\r\ninterface initStateFiles {\r\n    selectedFiles: string[];\r\n    progress: number,\r\n    message: string,\r\n    fileInfos: string[],\r\n};\r\n\r\nconst defaultValueFiles : initStateFiles = {\r\n    selectedFiles: [],\r\n    progress: 0,\r\n    message: '',\r\n    fileInfos: [],\r\n}\r\n\r\nconst defaultValueOriginalListFiles: File[] = [];\r\n\r\nconst initialValues = initialValuesAddOffer;\r\n\r\n// import getImgAddOffer from \"./assets/images/offer/add-offer/img_add_offer.png\";\r\n\r\n// const getImgAddOffer = `${getBaseImageUrl('/assets/images/offer/add-offer/img_add_offer.png')}`;\r\n\r\nexport default function AddUpdate () {\r\n\r\n    const [startAnimation, setStartAnimation] = React.useState(false);\r\n    const [fileState, setFileState] = React.useState(defaultValueFiles);\r\n    const [originalListFiles, setOriginalListFiles] = React.useState(defaultValueOriginalListFiles);\r\n    const [openDeleteImageOfferModal, setOpenDeleteImageOfferModal] = React.useState(false);\r\n    const [indexDeleteImageOffer, setIndexDeleteImageOffer] = React.useState(-1);\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n\r\n    const {isAuthenticated, currentUser, nbeMessagesNotRead, nbeNotificationsNotRead} = useSelector(allSessionSelector);\r\n    const entitiesCategorySelector = useSelector(entitiesCategory) ?? [];\r\n    const entitiesAddressSelector = useSelector(entitiesAddress) ?? [];\r\n\r\n    const entityPublicOfferSelector = useSelector(entityPublicOffer) ?? {};\r\n    const loadingPublicOfferSelector = useSelector(loadingPublicOffer) ?? {};\r\n\r\n    const loadingSellerOfferSelector = useSelector(loadingSellerOffer) ?? false;\r\n    const entitySellerOfferSelector = useSelector(entitySellerOffer) ?? {};\r\n    const updateSuccessSellerOfferSelector = useSelector(updateSuccessSellerOffer) ?? false;\r\n    const addSuccessSellerOfferSelector = useSelector(addSuccessSellerOffer) ?? false;\r\n\r\n    const loadingRentOfferSelector = useSelector(loadingRentOffer) ?? false;\r\n    const entityRentOfferSelector = useSelector(entityRentOffer) ?? {};\r\n    const addSuccessRentOfferSelector = useSelector(addSuccessRentOffer) ?? false;\r\n    const updateSuccessRentOfferSelector = useSelector(updateSuccessRentOffer) ?? false;\r\n\r\n    const loadingFindOfferSelector = useSelector(loadingFindOffer) ?? false;\r\n    const entityFindOfferSelector = useSelector(entityFindOffer) ?? {};\r\n    const aaddSuccessFindOfferSelector = useSelector(addSuccessFindOffer) ?? false;\r\n    const updateSuccessFindOfferSelector = useSelector(updateSuccessFindOffer) ?? false;\r\n\r\n    const loadingImagesDescriptionNewOfferSelector = useSelector(loadingImagesDescriptionNewOffer) ?? false;\r\n    const entityDescriptionNewOfferSelector = useSelector(entityDescriptionNewOffer) ?? {};\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddOffer,\r\n        onSubmit: values => {\r\n            if (isAuthenticated) {\r\n                saveEntity(values);\r\n            } else {\r\n                navigate(ALL_APP_ROUTES.LOGIN);\r\n            }\r\n        },\r\n    });\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    React.useEffect(() => {\r\n        if(id){ // For update\r\n            // getEntityOffer(Number(id) || -1);\r\n        }\r\n        else{ // For new offer\r\n            formik.resetForm();\r\n            setFileState(defaultValueFiles);\r\n            dispatch(resetPublicOffers({}))\r\n            // props.resetFetchOffer();\r\n        }\r\n    }, [id])\r\n\r\n    React.useEffect(() => {\r\n\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setStartAnimation(true);\r\n        }, 300);\r\n\r\n        if( isEmpty(entityDescriptionNewOfferSelector) ){\r\n            dispatch(fetchDescriptionNewOffer({}))\r\n        }\r\n\r\n        // props.getPublicEntity();\r\n    }, []);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!isEmpty(entityPublicOfferSelector) && id) { // For update\r\n\r\n            // Defult values\r\n            setDefaultsValues(formik, entityPublicOfferSelector);\r\n\r\n            setFileState({\r\n                ...fileState,\r\n                selectedFiles: entityPublicOfferSelector?.offerImages && entityPublicOfferSelector?.offerImages.length > 0\r\n                    ? entityPublicOfferSelector?.offerImages.map((imgOffer: IOfferImages) => {\r\n                        return (imgOffer.path = getImageForOffer(entityPublicOfferSelector?.id, imgOffer?.path));\r\n                    })\r\n                    : [], // event.target.files\r\n            });\r\n        }\r\n    }, [entityPublicOfferSelector]);\r\n\r\n    React.useEffect(() => {\r\n        console.log('addSuccessSellerOfferSelector ', addSuccessSellerOfferSelector);\r\n        if (addSuccessSellerOfferSelector || updateSuccessSellerOfferSelector) {\r\n            const offerId: number = entitySellerOfferSelector?.id || -1;\r\n            upladAllFiles(offerId);\r\n            dispatch(resetSellerOffer({}));\r\n            navigate(ALL_APP_ROUTES.OFFER.MY_OFFERS);\r\n        }\r\n        else if (addSuccessRentOfferSelector || updateSuccessRentOfferSelector) {\r\n            const offerId: number = entityRentOfferSelector?.id || -1;\r\n            upladAllFiles(offerId);\r\n            dispatch(resetRentOffer({}));\r\n            navigate(ALL_APP_ROUTES.OFFER.MY_OFFERS);\r\n        }\r\n        else if ( aaddSuccessFindOfferSelector || updateSuccessFindOfferSelector) {\r\n            const offerId: number = entityFindOfferSelector?.id || -1;\r\n            upladAllFiles(offerId);\r\n            dispatch(resetFindOffer({}));\r\n            navigate(ALL_APP_ROUTES.OFFER.MY_OFFERS);\r\n        }\r\n    }, [addSuccessSellerOfferSelector, updateSuccessSellerOfferSelector,\r\n        addSuccessRentOfferSelector, updateSuccessRentOfferSelector,\r\n        aaddSuccessFindOfferSelector, updateSuccessFindOfferSelector\r\n    ]);\r\n\r\n    const saveEntity = (values: any) => {\r\n        const tempOfferImages: any[] = [];\r\n        originalListFiles.forEach((item: any) => {\r\n            tempOfferImages.push({\r\n                path: item?.name,\r\n                dateCreated: convertDateTimeToServer(new Date()),\r\n            });\r\n        });\r\n\r\n        const entity = {\r\n            ...entityPublicOfferSelector,\r\n            dateCreated: convertDateTimeToServer(new Date()),\r\n            ...values,\r\n            user: {\r\n                id: currentUser.id\r\n            },\r\n            offerImages: tempOfferImages.slice()\r\n        };\r\n\r\n        // Set address if defined\r\n        if(values?.address){\r\n            entity.address = {\r\n                id: values?.address?.id,\r\n                city: values?.address?.city\r\n            }\r\n        }\r\n\r\n        // Set category if defined\r\n        if(values?.category){\r\n            entity.category = {\r\n                id: values?.category?.id,\r\n            }\r\n        }\r\n\r\n        // For Rent\r\n        if (entity.startDate && entity.endDate) {\r\n            entity.startDate = convertDateTimeToServer(entity.startDate);\r\n            entity.endDate = convertDateTimeToServer(entity.endDate);\r\n        }\r\n\r\n        if (!id) {\r\n            if (formik.values.typeOffer === TypeOfferEnum.Sell) {\r\n                dispatch(addSellerOffer({...entity}));\r\n                // props.createEntitySellerOffer(entity);\r\n            } else if (formik.values.typeOffer === TypeOfferEnum.Rent) {\r\n                dispatch(addRentOffer({...entity}));\r\n                // props.createEntityRentOffer(entity);\r\n            } else if (formik.values.typeOffer === TypeOfferEnum.Find) {\r\n                dispatch(addFindOffer({...entity}));\r\n                // props.createEntityFindOffer(entity);\r\n            }\r\n        }\r\n        else {\r\n            if (formik.values.typeOffer === TypeOfferEnum.Sell) {\r\n                dispatch(updateSellerOffer({...entity}));\r\n                // props.updateEntitySell(entity);\r\n            } else if (formik.values.typeOffer === TypeOfferEnum.Rent) {\r\n                dispatch(updateRentOffer({...entity}));\r\n                // props.updateEntityRent(entity);\r\n            } else if (formik.values.typeOffer === TypeOfferEnum.Find) {\r\n                dispatch(updateFindOffer({...entity}));\r\n                // props.updateEntityFind(entity);\r\n            }\r\n        }\r\n    };\r\n\r\n    const selectFile = (event: any) => {\r\n        if (event.target.files && event.target.files.length <= AllAppConfig.MaxNbeImagePerOffer) {\r\n\r\n            const newSelectedFiles: string[] = [];\r\n            const newOrigSelectedFiles: File[] = [];\r\n\r\n            Array.from(event.target.files).forEach((file: any) => {\r\n                getImageUrl(file, 5000)\r\n                    // getBase64(file)\r\n                    .then((resultBase64: any) => {\r\n                        dataUrlToFile(resultBase64, file.name)\r\n                            .then((valueFile: any) => {\r\n                                newOrigSelectedFiles.push(valueFile);\r\n                            });\r\n                        newSelectedFiles.push(resultBase64);\r\n\r\n                        setFileState({\r\n                            ...fileState,\r\n                            selectedFiles: newSelectedFiles.slice(), // event.target.files\r\n                        });\r\n\r\n                        // Set all files\r\n                        setOriginalListFiles(newOrigSelectedFiles);\r\n                    });\r\n\r\n            });\r\n        } else {\r\n            alert('Ouups, max number is 5');\r\n        }\r\n    };\r\n\r\n    const upladAllFiles = (offerId: number) => {\r\n        if(originalListFiles.length){\r\n            const formData = new FormData();\r\n            for (const file of originalListFiles) {\r\n                formData.append('files', file, file.name);\r\n                formData.append('offerId', offerId.toString());\r\n            }\r\n            dispatch(uploadFilesOffer({\r\n                formData\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleClickDeleteImageOffer = () => {\r\n        setOpenDeleteImageOfferModal(false);\r\n        fileState.selectedFiles.splice(indexDeleteImageOffer, 1);\r\n    };\r\n\r\n    const handleClickCancelDeleteImageOfferModal = () => {\r\n        setOpenDeleteImageOfferModal(false);\r\n    };\r\n\r\n    const handleClickOpenDeleteOffertModal = (index: number) => {\r\n        setIndexDeleteImageOffer(index);\r\n        setOpenDeleteImageOfferModal(true);\r\n    };\r\n\r\n    const renderDialogDeleteImageOffer = () => {\r\n        return (\r\n            <Dialog\r\n                open={openDeleteImageOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleClickCancelDeleteImageOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    Confirm delete operation\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Are you sure you want to delete this CommentOffer?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClickCancelDeleteImageOfferModal}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClickDeleteImageOffer} color=\"error\">\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const onChangeValue = (newValue: any) => {\r\n        formik.setFieldValue('description', newValue ? newValue : '');\r\n    }\r\n\r\n    const addNewEventGA = () => {\r\n        addEventGA(AllModulesEventGA.EventOffer.ShowMoreOption.eventName,\r\n            AllModulesEventGA.EventOffer.ShowMoreOption.eventCategory,\r\n            AllModulesEventGA.EventOffer.ShowMoreOption.eventLabel);\r\n    }\r\n\r\n    const getContentDescriptionAddOffer = () => {\r\n        if( defaultLanguage==='en' ){\r\n            return entityDescriptionNewOfferSelector?.descriptionEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return entityDescriptionNewOfferSelector?.descriptionFr || '';\r\n        }\r\n        return entityDescriptionNewOfferSelector?.descriptionAr || '';\r\n    }\r\n\r\n\r\n    return (\r\n        <Slide direction=\"up\" in={startAnimation} mountOnEnter unmountOnExit>\r\n            <Container maxWidth=\"xl\" className=\"page-add-offer\">\r\n                <Grid\r\n                    container\r\n                    style={{\r\n                        paddingTop: 10,\r\n                    }}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                                SRF\r\n                            </Link>\r\n                            <Typography color=\"text.primary\">\r\n                                {t<string>('add_offer.title_page')}\r\n                            </Typography>\r\n                        </Breadcrumbs>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Paper elevation={3} sx={{p: 2, mt: 6}}>\r\n\r\n                            {\r\n                                loadingPublicOfferSelector ? <Box sx={{ pt: 10, pb: 10, textAlign: 'center' }}>\r\n                                        <CircularProgress color=\"inherit\"  />\r\n                                    </Box> :\r\n\r\n                                    <Box>\r\n                                        <h3 className=\"mb-3\">{t<string>('add_offer.label_publish_new_offer')}</h3>\r\n                                        <form onSubmit={formik.handleSubmit}>\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid item xs={12} md={6}>\r\n                                                    <FormControl\r\n                                                        fullWidth\r\n                                                        size=\"small\"\r\n                                                        error={formik.touched.typeOffer && Boolean(formik.errors.typeOffer)}\r\n                                                        className=\"form-control-type-offer\"\r\n                                                    >\r\n                                                        <InputLabel id=\"label-component-helper-typeOffer\" className=\"type-offer-select\">\r\n                                                            {t<string>('add_offer.label_type_offer')}\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            id=\"typeOffer\"\r\n                                                            name=\"typeOffer\"\r\n                                                            label={t<string>('add_offer.label_type_offer')}\r\n                                                            labelId=\"add_offer.label_type_offer\"\r\n                                                            value={formik.values.typeOffer}\r\n                                                            onChange={formik.handleChange}>\r\n                                                            <MenuItem value={TypeOfferEnum.Sell}>\r\n                                                                {t<string>('common.for_sell')}\r\n                                                            </MenuItem>\r\n                                                            <MenuItem value={TypeOfferEnum.Rent}>\r\n                                                                {t<string>('common.for_rent')}\r\n                                                            </MenuItem>\r\n                                                            <MenuItem value={TypeOfferEnum.Find}>\r\n                                                                {t<string>('common.for_find')}\r\n                                                            </MenuItem>\r\n                                                        </Select>\r\n                                                        {formik.touched.typeOffer && formik.errors.typeOffer ? <FormHelperText id=\"component-helper-text-typeOffer\">{t<string>(formik.errors.typeOffer)}</FormHelperText> : null}\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={12} md={6}>\r\n                                                    <FormControl fullWidth size=\"small\"\r\n                                                                 error={formik.touched.title && Boolean(formik.errors.title)}>\r\n                                                        <InputLabel htmlFor=\"outlined-adornment-title\">{t<string>('add_offer.label_title_offer')}</InputLabel>\r\n                                                        <OutlinedInput\r\n                                                            id=\"title\"\r\n                                                            name=\"title\"\r\n                                                            label={t<string>('add_offer.label_title_offer')}\r\n                                                            value={formik.values.title}\r\n                                                            onChange={formik.handleChange}\r\n                                                        />\r\n                                                        {formik.touched.title && formik.errors.title ? <FormHelperText id=\"component-helper-text\">{t<string>(formik.errors.title)}</FormHelperText> : null}\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={12} md={12}>\r\n                                                    <FormControl fullWidth sx={{mt: 3}}\r\n                                                                 error={formik.touched.description && Boolean(formik.errors.description)}>\r\n                                                        <CustomSunEditor defaultValue={entityPublicOfferSelector?.description || ''} callbcakHandleChange={onChangeValue} placeholder={t<string>('add_offer.placeholder_description')}/>\r\n                                                        {formik.touched.description && formik.errors.description ? <FormHelperText id=\"component-helper-text\">{t<string>(formik.errors.description)}</FormHelperText> : null}\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={12} md={12} sx={{mb: 3}}>\r\n                                                    <ImageList sx={{width: '100%', height: 'auto', mt: 3, mb: 0}} cols={5}>\r\n                                                        {fileState && fileState.selectedFiles && fileState.selectedFiles.length > 0\r\n                                                            ? fileState.selectedFiles.map((file, index) => (\r\n                                                                <ImageListItem\r\n                                                                    key={index}\r\n                                                                    style={{\r\n                                                                        marginRight: 4,\r\n                                                                        borderRadius: 4,\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <img\r\n                                                                        src={file}\r\n                                                                        srcSet={file}\r\n                                                                        alt={'desc_' + index}\r\n                                                                        loading=\"lazy\"\r\n                                                                        style={{borderRadius: 4, border: '1px solid #b7b1b1'}}\r\n                                                                    />\r\n                                                                    <IconButton\r\n                                                                        size=\"small\"\r\n                                                                        aria-label=\"delete\"\r\n                                                                        color=\"error\"\r\n                                                                        sx={{\r\n                                                                            position: 'absolute',\r\n                                                                            top: 0,\r\n                                                                            right: 0,\r\n                                                                            backgroundColor: '#fff'\r\n                                                                        }}\r\n                                                                        onClick={() => handleClickOpenDeleteOffertModal(index)}\r\n                                                                    >\r\n                                                                        <ClearIcon/>\r\n                                                                    </IconButton>\r\n                                                                </ImageListItem>\r\n                                                            ))\r\n                                                            : null}\r\n\r\n                                                        <ImageListItem>\r\n                                                            <img\r\n                                                                src={`${getBaseImageUrl('/assets/images/offer/add-offer/img_add_offer.png')}`}\r\n                                                                srcSet={`${getBaseImageUrl('/assets/images/offer/add-offer/img_add_offer.png')}`}\r\n                                                                alt={'img_add_offer'}\r\n                                                                loading=\"lazy\"\r\n                                                                style={{borderRadius: 4, border: '1px solid #b7b1b1'}}\r\n                                                            />\r\n                                                            <input\r\n                                                                id=\"offer-addFiles\"\r\n                                                                data-cy=\"files\"\r\n                                                                type=\"file\"\r\n                                                                name=\"files\"\r\n                                                                style={{\r\n                                                                    position: 'absolute',\r\n                                                                    maxWidth: '100%',\r\n                                                                    top: 0,\r\n                                                                    bottom: 0,\r\n                                                                    opacity: 0,\r\n                                                                }}\r\n                                                                multiple\r\n                                                                accept=\"image/png, image/gif, image/jpeg, image/jpg\"\r\n                                                                onChange={selectFile}\r\n                                                            />\r\n                                                        </ImageListItem>\r\n                                                    </ImageList>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={12} md={12}>\r\n                                                    <Accordion sx={{width: '100%'}}>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon sx={{backgroundColor: 'yellow', borderRadius: '50%'}}/>}\r\n                                                            aria-controls=\"panel1a-content\"\r\n                                                            id=\"panel1a-header\"\r\n                                                            className=\"bg-brown\"\r\n                                                            onClick={() => addNewEventGA()}>\r\n                                                            <ArrowCircleRightIcon className=\"zoom-in-out-box\"  sx={{color: 'yellow', mr: 1}}/>\r\n                                                            <Typography sx={{textDecoration: 'underline'}}>\r\n                                                                {t<string>('add_offer.label_more_options')}\r\n                                                            </Typography>\r\n                                                        </AccordionSummary>\r\n                                                        <AccordionDetails sx={{pt: 4}}>\r\n                                                            {formik.values.typeOffer ? (\r\n                                                                <OptionsCommonAddOffer formik={formik} cities={entitiesAddressSelector} listCategories={entitiesCategorySelector} />\r\n                                                            ) : null}\r\n\r\n                                                            {formik.values.typeOffer === TypeOfferEnum.Sell ? (\r\n                                                                <OptionsSellAddOffer formik={formik}/>\r\n                                                            ) : formik.values.typeOffer === TypeOfferEnum.Rent ? (\r\n                                                                <OptionsRentAddOffer formik={formik}/>\r\n                                                            ) : formik.values.typeOffer === TypeOfferEnum.Find ? (\r\n                                                                <OptionsFindAddOffer formik={formik}/>\r\n                                                            ) : (\r\n                                                                <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                                                                    {t<string>('add_offer.label_select_offer_plz')}\r\n                                                                </Typography>\r\n                                                            )}\r\n                                                        </AccordionDetails>\r\n                                                    </Accordion>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={12} md={12}>\r\n                                                    <LoadingButton\r\n                                                        loading={loadingSellerOfferSelector === true || loadingRentOfferSelector === true || loadingFindOfferSelector === true}\r\n                                                        fullWidth\r\n                                                        variant=\"contained\"\r\n                                                        color=\"neutral\"\r\n                                                        type=\"submit\"\r\n                                                        sx={{mt: 3, mb: 2}}\r\n                                                    >\r\n                                                        {\r\n                                                            id ? t<string>('add_offer.label_update_offer') : t<string>('add_offer.label_add_offer')\r\n                                                        }\r\n\r\n                                                    </LoadingButton>\r\n                                                </Grid>\r\n\r\n                                                <Typography variant=\"subtitle2\" color=\"error\" sx={{textAlign: 'center', width: '100%'}}>\r\n                                                    { !formik.isValid ? t<string>('add_offer.check_required_fileds') : null }\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </form>\r\n                                    </Box>\r\n                            }\r\n\r\n\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} sx={{p: 2, mt: 6}}>\r\n                        {\r\n                            loadingImagesDescriptionNewOfferSelector ? <Box sx={{ textAlign: 'center' }}>\r\n                                <CircularProgress color=\"inherit\"  />\r\n                            </Box> : <div dangerouslySetInnerHTML={{ __html: getContentDescriptionAddOffer() }}></div>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <div>{renderDialogDeleteImageOffer()}</div>\r\n            </Container>\r\n        </Slide>\r\n    )\r\n}\r\n","export enum OfferTypeContact {\r\n    direct = 'ContactDirect',\r\n    perCommmande = 'PerCommande'\r\n}","export enum TypeOfferEnum {\r\n  Sell = 'SellOffer',\r\n  Rent = 'RentOffer',\r\n  Find = 'FindOffer',\r\n}\r\n\r\nexport enum PeriodeRent {\r\n  PerYear = 'PerYear',\r\n  PerMonth = 'PerMonth',\r\n  PerDay = 'PerDay',\r\n}\r\n\r\nexport enum TypesFindOffer{\r\n    Carpooling = 'Carpooling',\r\n    Travels = 'Travels',\r\n    Transporter = 'Transporter',\r\n    Job = 'Job'\r\n}\r\n\r\nexport enum TypeDisplaySearchOffers {\r\n    List = 'LIST',\r\n    Grid = 'GRID'\r\n}","import React from \"react\";\r\nimport {TransitionProps} from \"@mui/material/transitions\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\n\r\n\r\nexport const TransitionModal = React.forwardRef(function Transition(\r\n    props: TransitionProps & {\r\n        children: React.ReactElement<any, any>;\r\n    },\r\n    ref: React.Ref<unknown>\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});","// Based on: https://stackoverflow.com/a/46814952/283851\r\n\r\n/**\r\n * Create a Base64 Image URL, with rotation applied to compensate for EXIF orientation, if needed.\r\n *\r\n * Optionally resize to a smaller maximum width - to improve performance for larger image thumbnails.\r\n */\r\nexport async function getImageUrl(file: File, maxWidth?: number|undefined) {\r\n    return readOrientation(file).then(orientation => applyRotation(file, orientation || 1, maxWidth || 999999));\r\n}\r\n\r\n/**\r\n * @returns EXIF orientation value (or undefined)\r\n */\r\nconst readOrientation = (file: File) => new Promise<number|undefined>(resolve => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => resolve((() => {\r\n        const view = new DataView(reader.result as ArrayBuffer);\r\n\r\n        if (view.getUint16(0, false) !== 0xFFD8) {\r\n            return;\r\n        }\r\n\r\n        const length = view.byteLength;\r\n\r\n        let offset = 2;\r\n\r\n        while (offset < length) {\r\n            const marker = view.getUint16(offset, false);\r\n\r\n            offset += 2;\r\n\r\n            if (marker === 0xFFE1) {\r\n                offset += 2;\r\n\r\n                if (view.getUint32(offset, false) !== 0x45786966) {\r\n                    return;\r\n                }\r\n\r\n                offset += 6;\r\n\r\n                const little = view.getUint16(offset, false) === 0x4949;\r\n\r\n                offset += view.getUint32(offset + 4, little);\r\n\r\n                const tags = view.getUint16(offset, little);\r\n\r\n                offset += 2;\r\n\r\n                for (var i = 0; i < tags; i++) {\r\n                    if (view.getUint16(offset + (i * 12), little) === 0x0112) {\r\n                        return view.getUint16(offset + (i * 12) + 8, little);\r\n                    }\r\n                }\r\n            } else if ((marker & 0xFF00) !== 0xFF00) {\r\n                break;\r\n            } else {\r\n                offset += view.getUint16(offset, false);\r\n            }\r\n        }\r\n    })());\r\n\r\n    reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\r\n});\r\n\r\n/**\r\n * @returns Base64 Image URL (with rotation applied to compensate for orientation, if any)\r\n */\r\nconst applyRotation = (file: File, orientation: number, maxWidth: number) => new Promise<string>(resolve => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n        const url = reader.result as string;\r\n\r\n        const image = new Image();\r\n\r\n        image.onload = () => {\r\n            const canvas = document.createElement(\"canvas\");\r\n            const context = canvas.getContext(\"2d\")!;\r\n\r\n            let { width, height } = image;\r\n\r\n            const [outputWidth, outputHeight] = orientation >= 5 && orientation <= 8\r\n                ? [height, width]\r\n                : [width, height];\r\n\r\n            const scale = outputWidth > maxWidth ? maxWidth / outputWidth : 1;\r\n\r\n            width = width * scale;\r\n            height = height * scale;\r\n\r\n            // set proper canvas dimensions before transform & export\r\n            canvas.width = outputWidth * scale;\r\n            canvas.height = outputHeight * scale;\r\n\r\n            // transform context before drawing image\r\n            switch (orientation) {\r\n                case 2: context.transform(-1, 0, 0, 1, width, 0); break;\r\n                case 3: context.transform(-1, 0, 0, -1, width, height); break;\r\n                case 4: context.transform(1, 0, 0, -1, 0, height); break;\r\n                case 5: context.transform(0, 1, 1, 0, 0, 0); break;\r\n                case 6: context.transform(0, 1, -1, 0, height, 0); break;\r\n                case 7: context.transform(0, -1, -1, 0, height, width); break;\r\n                case 8: context.transform(0, -1, 1, 0, 0, width); break;\r\n                default: break;\r\n            }\r\n\r\n            // draw image\r\n            context.drawImage(image, 0, 0, width, height);\r\n\r\n            // export base64\r\n            resolve(canvas.toDataURL(\"image/jpeg\"));\r\n        };\r\n\r\n        image.src = url;\r\n    }\r\n\r\n    reader.readAsDataURL(file);\r\n});\r\n","var map = {\n\t\"./ckb.js\": 82871,\n\t\"./da.js\": 59651,\n\t\"./de.js\": 64639,\n\t\"./en.js\": 75213,\n\t\"./es.js\": 47068,\n\t\"./fr.js\": 78488,\n\t\"./he.js\": 93179,\n\t\"./index.js\": 87488,\n\t\"./it.js\": 63577,\n\t\"./ja.js\": 10916,\n\t\"./ko.js\": 19920,\n\t\"./lv.js\": 39985,\n\t\"./nl.js\": 14076,\n\t\"./pl.js\": 71676,\n\t\"./pt_br.js\": 3204,\n\t\"./ro.js\": 59575,\n\t\"./ru.js\": 70123,\n\t\"./se.js\": 52372,\n\t\"./ua.js\": 82561,\n\t\"./zh_cn.js\": 79602\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3829;"],"names":["validationSchemaAddOffer","Yup","typeOffer","required","title","min","max","description","amount","nullable","notRequired","startDate","endDate","typePeriodRent","address","default","category","typeFindOffer","typeContactClient","CustomSunEditor","defaultValue","callbcakHandleChange","placeholder","lang","setContents","setOptions","height","buttonList","onChange","content","OptionsCommonAddOffer","props","formik","cities","listCategories","React","defaultLanguage","setDefaultLanguage","t","useTranslation","i18n","console","log","getValueTitle","option","titleEn","titleFr","titleAr","Box","Grid","container","spacing","sx","my","item","xs","md","FormControl","fullWidth","error","touched","Boolean","errors","Autocomplete","id","size","options","value","values","e","setFieldValue","autoHighlight","getOptionLabel","renderOption","propsRender","component","renderInput","params","TextField","label","inputProps","form","autocomplete","autoComplete","FormHelperText","city","OptionsSellAddOffer","InputLabel","htmlFor","OutlinedInput","type","handleChange","startAdornment","InputAdornment","position","FormLabel","RadioGroup","name","FormControlLabel","OfferTypeContact","control","Radio","toString","OptionsRentAddOffer","LocalizationProvider","dateAdapter","AdapterDateFns","className","Select","labelId","MenuItem","PeriodeRent","DatePicker","newValue","OptionsFindAddOffer","TypesFindOffer","defaultValueFiles","selectedFiles","progress","message","fileInfos","defaultValueOriginalListFiles","initialValues","AddUpdate","startAnimation","setStartAnimation","fileState","setFileState","originalListFiles","setOriginalListFiles","openDeleteImageOfferModal","setOpenDeleteImageOfferModal","indexDeleteImageOffer","setIndexDeleteImageOffer","navigate","useNavigate","dispatch","useDispatch","useSelector","allSessionSelector","isAuthenticated","currentUser","entitiesCategorySelector","nbeMessagesNotRead","nbeNotificationsNotRead","entitiesCategory","entitiesAddressSelector","entitiesAddress","entityPublicOfferSelector","entityPublicOffer","loadingPublicOfferSelector","loadingPublicOffer","loadingSellerOfferSelector","loadingSellerOffer","entitySellerOfferSelector","entitySellerOffer","updateSuccessSellerOfferSelector","updateSuccessSellerOffer","addSuccessSellerOfferSelector","addSuccessSellerOffer","loadingRentOfferSelector","loadingRentOffer","entityRentOfferSelector","entityRentOffer","addSuccessRentOfferSelector","addSuccessRentOffer","updateSuccessRentOfferSelector","updateSuccessRentOffer","loadingFindOfferSelector","loadingFindOffer","entityFindOfferSelector","entityFindOffer","aaddSuccessFindOfferSelector","addSuccessFindOffer","updateSuccessFindOfferSelector","updateSuccessFindOffer","loadingImagesDescriptionNewOfferSelector","loadingImagesDescriptionNewOffer","entityDescriptionNewOfferSelector","entityDescriptionNewOffer","useFormik","validationSchema","onSubmit","saveEntity","ALL_APP_ROUTES","useParams","resetForm","resetPublicOffers","setTimeout","isEmpty","fetchDescriptionNewOffer","offerEntity","setDefaultsValues","offerImages","length","map","imgOffer","path","getImageForOffer","offerId","upladAllFiles","resetSellerOffer","resetRentOffer","resetFindOffer","tempOfferImages","forEach","push","dateCreated","convertDateTimeToServer","Date","entity","user","slice","TypeOfferEnum","updateSellerOffer","updateRentOffer","updateFindOffer","addSellerOffer","addRentOffer","addFindOffer","formData","FormData","file","append","uploadFilesOffer","handleClickDeleteImageOffer","splice","handleClickCancelDeleteImageOfferModal","Slide","direction","in","mountOnEnter","unmountOnExit","Container","maxWidth","style","paddingTop","Breadcrumbs","color","to","Typography","sm","Paper","elevation","p","mt","pt","pb","textAlign","CircularProgress","handleSubmit","mb","ImageList","width","cols","index","ImageListItem","marginRight","borderRadius","src","srcSet","alt","loading","border","IconButton","top","right","backgroundColor","onClick","handleClickOpenDeleteOffertModal","Clear","getBaseImageUrl","bottom","opacity","multiple","accept","event","target","files","AllAppConfig","newSelectedFiles","newOrigSelectedFiles","Array","from","getImageUrl","then","resultBase64","dataUrlToFile","valueFile","alert","Accordion","AccordionSummary","expandIcon","ExpandMore","addEventGA","AllModulesEventGA","ArrowCircleRight","mr","textDecoration","AccordionDetails","variant","LoadingButton","isValid","dangerouslySetInnerHTML","__html","descriptionEn","descriptionFr","descriptionAr","Dialog","open","TransitionComponent","TransitionModal","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","TypeDisplaySearchOffers","ref","readOrientation","orientation","applyRotation","Promise","resolve","reader","FileReader","onload","view","DataView","result","getUint16","byteLength","offset","marker","getUint32","little","tags","i","readAsArrayBuffer","url","image","Image","canvas","document","createElement","context","getContext","outputWidth","outputHeight","scale","transform","drawImage","toDataURL","readAsDataURL","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","module","exports"],"sourceRoot":""}