{"version":3,"file":"static/js/68.3a710e2a.chunk.js","mappings":"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","sources":["main-features/login/ForgotPasswordFinish.tsx","main-features/login/validation/validation-signin.ts","../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import { handlePasswordResetFinish } from \"../../shared/reducers/user-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {IRootState} from \"../../shared/reducers\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport {ALL_APP_ROUTES} from \"../../core/config/all-app-routes\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport React from \"react\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport Avatar from \"@mui/material/Avatar/Avatar\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton/LoadingButton\";\r\nimport FormHelperText from \"@mui/material/FormHelperText/FormHelperText\";\r\nimport {initialValuesForgotPasswordFinish, validationSchemaForgotPasswordFinish} from \"./validation/validation-signin\";\r\nimport {useFormik} from \"formik\";\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport FormControl from \"@mui/material/FormControl/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel/InputLabel\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput/OutlinedInput\";\r\nimport {useQuery} from \"../../shared/utils/utils-functions\";\r\nimport InputAdornment from \"@mui/material/InputAdornment/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton/IconButton\";\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nconst initialValues = initialValuesForgotPasswordFinish;\r\n\r\nexport interface IForgotPasswordProps extends StateProps, DispatchProps {}\r\n\r\nexport const ForgotPasswordFinish = (props: IForgotPasswordProps) => {\r\n\r\n    const [startAnimation, setStartAnimation] = React.useState(false);\r\n    const [showPassword, setShowPassword] = React.useState({\r\n        showPassword: false,\r\n    });\r\n    const [showConfPassword, setShowConfPassword] = React.useState({\r\n        showPassword: false,\r\n    });\r\n    const [keyFinish, setKeyFinish] = React.useState('');\r\n\r\n    const query = useQuery();\r\n\r\n    React.useEffect(() => {\r\n        const key = query.get(\"key\");\r\n        console.log('key ', key);\r\n        if( key ){\r\n            setKeyFinish(key);\r\n        }\r\n    }, [query])\r\n\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n\r\n    React.useEffect(() => {\r\n        setStartAnimation(true);\r\n    }, []);\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaForgotPasswordFinish,\r\n        onSubmit: values => {\r\n            if(keyFinish){\r\n                props.handlePasswordResetFinish(keyFinish, values.password.toString());\r\n            }\r\n            else{\r\n                navigate(ALL_APP_ROUTES.LOGIN);\r\n            }\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(props.resetPasswordSuccess){\r\n            formik.resetForm();\r\n            navigate(ALL_APP_ROUTES.LOGIN);\r\n        }\r\n    }, [props.resetPasswordSuccess]);\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword({\r\n            showPassword: !showPassword.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: any) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleClickShowConfPassword = () => {\r\n        setShowConfPassword({\r\n            showPassword: !showConfPassword.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownConfPassword = (event: any) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Slide direction=\"up\" in={startAnimation} mountOnEnter unmountOnExit>\r\n            <Container maxWidth=\"xl\">\r\n                <Grid\r\n                    container\r\n                    style={{\r\n                        paddingTop: 10,\r\n                    }}\r\n                >\r\n                    <Grid item sm={4}></Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                                SRF\r\n                            </Link>\r\n                            <Typography color=\"text.primary\">\r\n                                {t('signin.title_page_forgot_password')}\r\n                            </Typography>\r\n                        </Breadcrumbs>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container sx={{pt: 5, pb: 5}}>\r\n                    <Grid item xs={4}></Grid>\r\n\r\n                    <Grid item xs={12} sm={8} md={4} component={Paper} md-offset={3} elevation={6} square>\r\n\r\n                        <Box\r\n                            sx={{\r\n                                my: 4,\r\n                                mx: 4,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                            }}\r\n                        >\r\n                            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                {t('signin.title_page_forgot_password')}\r\n                            </Typography>\r\n\r\n                            <Box sx={{ mt: 1, pb: 2 }}>\r\n                                <form onSubmit={formik.handleSubmit}>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item xs={12}>\r\n                                            <FormControl fullWidth error={formik.touched.password && Boolean(formik.errors.password)}>\r\n                                                <InputLabel htmlFor=\"outlined-adornment-title\">{t('common.label_password')}</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"password\"\r\n                                                    name=\"password\"\r\n                                                    type={showPassword.showPassword ? 'text' : 'password'}\r\n                                                    label={t('common.label_password')}\r\n                                                    value={formik.values.password}\r\n                                                    onChange={formik.handleChange}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                aria-label=\"toggle password visibility\"\r\n                                                                onClick={handleClickShowPassword}\r\n                                                                onMouseDown={handleMouseDownPassword}\r\n                                                                edge=\"end\"\r\n                                                            >\r\n                                                                {showPassword.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                                <FormHelperText id=\"component-helper-text\">{formik.touched.password && formik.errors.password}</FormHelperText>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <FormControl fullWidth error={formik.touched.confPassword && Boolean(formik.errors.confPassword)}>\r\n                                                <InputLabel htmlFor=\"outlined-adornment-title\">{t('common.label_password')}</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"confPassword\"\r\n                                                    name=\"confPassword\"\r\n                                                    type={showConfPassword.showPassword ? 'text' : 'password'}\r\n                                                    label={t('common.label_password')}\r\n                                                    value={formik.values.confPassword}\r\n                                                    onChange={formik.handleChange}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                aria-label=\"toggle password visibility\"\r\n                                                                onClick={handleClickShowConfPassword}\r\n                                                                onMouseDown={handleMouseDownConfPassword}\r\n                                                                edge=\"end\"\r\n                                                            >\r\n                                                                {showPassword.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                                <FormHelperText id=\"component-helper-text\">{formik.touched.confPassword && formik.errors.confPassword}</FormHelperText>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <LoadingButton loading={props.loading} fullWidth variant=\"contained\" color=\"neutral\" type=\"submit\" sx={{ mt: 3, mb: 2 }}>\r\n                                        {t('common.label_update')}\r\n                                    </LoadingButton>\r\n                                </form>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Slide>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({user}: IRootState) => ({\r\n    loading: user.loadingForgotPasswordFinish,\r\n    resetPasswordSuccess: user.resetPasswordSuccessFinish\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    handlePasswordResetFinish\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordFinish);","import * as Yup from 'yup';\r\n\r\nexport const initialValuesSignIn = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nexport const validationSchemaSignIn = Yup.object({\r\n  email: Yup.string().email().required('Email is required'),\r\n  password: Yup.string().required('Password is required').min(5, 'Min 5 digits').max(200, 'Max 200 digits'),\r\n});\r\n\r\nexport const initialValuesForgotPassword = {\r\n    email: '',\r\n};\r\n\r\nexport const validationSchemaForgotPassword = Yup.object({\r\n    email: Yup.string().email().required('Email is required'),\r\n});\r\n\r\n\r\nexport const initialValuesForgotPasswordFinish = {\r\n    password: '',\r\n    confPassword: '',\r\n};\r\n\r\nexport const validationSchemaForgotPasswordFinish = Yup.object({\r\n    password: Yup.string().required('Password is required').min(5, 'Min 5 digits').max(200, 'Max 200 digits'),\r\n    confPassword: Yup.string()\r\n        .required('Password is required')\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        .min(5, 'Muin 5 digits')\r\n        .max(200, 'Max 5 digits'),\r\n});","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;"],"names":["initialValues","initialValuesForgotPasswordFinish","ForgotPasswordFinish","props","React","startAnimation","setStartAnimation","showPassword","setShowPassword","showConfPassword","setShowConfPassword","keyFinish","setKeyFinish","query","useQuery","key","get","console","log","t","useTranslation","navigate","useNavigate","formik","useFormik","validationSchema","validationSchemaForgotPasswordFinish","onSubmit","values","handlePasswordResetFinish","password","toString","ALL_APP_ROUTES","resetPasswordSuccess","resetForm","direction","in","mountOnEnter","unmountOnExit","maxWidth","container","style","paddingTop","item","sm","xs","color","to","sx","pt","pb","md","component","Paper","elevation","square","my","mx","display","flexDirection","alignItems","m","bgcolor","variant","mt","handleSubmit","spacing","fullWidth","error","touched","Boolean","errors","htmlFor","id","name","type","label","value","onChange","handleChange","endAdornment","position","onClick","onMouseDown","event","preventDefault","edge","confPassword","loading","mb","mapDispatchToProps","connect","user","loadingForgotPasswordFinish","resetPasswordSuccessFinish","initialValuesSignIn","email","validationSchemaSignIn","Yup","required","min","max","initialValuesForgotPassword","validationSchemaForgotPassword","oneOf","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}