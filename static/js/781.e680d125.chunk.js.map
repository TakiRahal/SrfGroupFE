{"version":3,"file":"static/js/781.e680d125.chunk.js","mappings":"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","sources":["main-features/probleme-declaration/ProblemeDeclaration.tsx","main-features/search/ui-segments/RightSearch.tsx","main-features/search/ui-segments/LeftSearch.tsx","main-features/search/Search.tsx","../node_modules/@mui/icons-material/MessageOutlined.js"],"sourcesContent":["import React from 'react';\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {IRootState} from \"../../shared/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@mui/material/TextField/TextField\";\r\nimport MessageIcon from '@mui/icons-material/MessageOutlined';\r\nimport Card from \"@mui/material/Card/Card\";\r\nimport CardContent from \"@mui/material/CardContent/CardContent\";\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport {createEntity} from \"../../shared/reducers/report-probleme.reducer\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nconst initialValuesAddMessage = {\r\n    content: '',\r\n};\r\n\r\nconst validationSchemaAddMessage = Yup.object({\r\n    content: Yup.string().required('Message is required').min(5, 'Min 5 digits').max(2000, 'Max 2000 digits'),\r\n});\r\n\r\nconst initialValues = initialValuesAddMessage;\r\n\r\nexport interface IProblemeDeclarationProps extends StateProps, DispatchProps{}\r\n\r\nexport const ProblemeDeclaration = (props: IProblemeDeclarationProps) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddMessage,\r\n        onSubmit: values => {\r\n            if (props.isAuthenticated) {\r\n                props.createEntity(values);\r\n            }\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(props.addSuccess){\r\n            formik.resetForm();\r\n        }\r\n    }, [props.addSuccess])\r\n\r\n    return(\r\n        <Box>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                            <MessageIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                            <TextField id=\"content\"\r\n                                       name=\"content\"\r\n                                       label=\"Declarer votre probleme\"\r\n                                       variant=\"standard\"\r\n                                       fullWidth\r\n                                       multiline\r\n                                       value={formik.values.content}\r\n                                       onChange={formik.handleChange}\r\n                                       error={formik.touched.content && Boolean(formik.errors.content)}\r\n                                       rows={4}/>\r\n                        </Box>\r\n                        {\r\n                            formik.touched.content && Boolean(formik.errors.content) ? <Box className=\"red-color\">{formik.errors.content}</Box> : null\r\n                        }\r\n                        <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                            <Button variant=\"outlined\" size=\"small\" fullWidth sx={{mt: 2}}\r\n                                    color=\"neutral\"\r\n                                    type=\"submit\">\r\n                                Declarer\r\n                            </Button>\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\nconst mapStateToProps = ({reportProbleme, user}: IRootState) => ({\r\n    loading: reportProbleme.loadingEntity,\r\n    entity: reportProbleme.entity,\r\n    addSuccess: reportProbleme.addSuccess,\r\n\r\n    isAuthenticated: user.isAuthenticated,\r\n    currentUser: user.currentUser,\r\n})\r\nconst mapDispatchToProps = {\r\n    createEntity\r\n}\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProblemeDeclaration);","import React from 'react';\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport List from \"@mui/material/List/List\";\r\nimport ListSubheader from \"@mui/material/ListSubheader/ListSubheader\";\r\nimport ListItemButton from \"@mui/material/ListItemButton/ListItemButton\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar/Avatar\";\r\nimport ListItemText from \"@mui/material/ListItemText/ListItemText\";\r\nimport Divider from \"@mui/material/Divider/Divider\";\r\nimport Card from \"@mui/material/Card/Card\";\r\nimport CardContent from \"@mui/material/CardContent/CardContent\";\r\nimport ProblemeDeclaration from \"../../probleme-declaration/ProblemeDeclaration\";\r\n\r\n\r\nexport default function RightSearch() {\r\n    return(\r\n        <Box>\r\n            <List\r\n                sx={{ width: '100%', mb: 4 }}\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n                subheader={\r\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                        Recommandé pour vous\r\n                    </ListSubheader>\r\n                } >\r\n                {\r\n                    [0, 1, 2, 3, 4, 5].map((key) => (\r\n                        <Box key={key}>\r\n                            <ListItemButton>\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        alt=\"avatar\"\r\n                                        src=\"https://source.unsplash.com/random\"\r\n                                    />\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"Sent mail\" secondary=\"September 14, 2016\" />\r\n                            </ListItemButton>\r\n                            <Divider />\r\n                        </Box>\r\n                    ))\r\n                }\r\n            </List>\r\n\r\n            <Card sx={{my: 3}}>\r\n                <CardContent>\r\n                    <iframe\r\n                        width=\"100%\"\r\n                        height=\"315\"\r\n                        src=\"https://www.youtube.com/embed/668nUCeBHyY\"\r\n                        title=\"YouTube video player\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                    ></iframe>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <ProblemeDeclaration />\r\n        </Box>\r\n    );\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {IAddress} from \"../../../shared/model/address.model\";\r\nimport {FilterOffer} from \"./FilterOffer\";\r\n\r\nexport default function LeftSearchClient({listAddress, filterCallback}: {listAddress: IAddress[], filterCallback: Function}) {\r\n\r\n    // const { t } = useTranslation();\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n          if (FB) {\r\n            FB.XFBML.parse();\r\n          }\r\n        } catch (e) {\r\n          window.console.error('FB not defined');\r\n        }\r\n    }, []);\r\n\r\n    const onChange = (values: any) => {\r\n        // console.log('values ', values);\r\n        filterCallback(values);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%'}}>\r\n\r\n            <FilterOffer listAddress={listAddress} handelChange={onChange}/>\r\n\r\n            <Box sx={{mb: 4}}>\r\n                <div style={{width: '100%'}}>\r\n                    <div\r\n                        className=\"fb-page\"\r\n                        data-href=\"https://www.facebook.com/profile.php?id=100054409273167\"\r\n                        data-tabs=\"timeline\"\r\n                        data-width=\"250\"\r\n                        data-height=\"\"\r\n                        data-small-header=\"false\"\r\n                        data-adapt-container-width=\"true\"\r\n                        data-hide-cover=\"false\"\r\n                        data-show-facepile=\"true\"\r\n                    ></div>\r\n                </div>\r\n\r\n            </Box>\r\n\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {IRootState} from \"../../shared/reducers\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport {ALL_APP_ROUTES} from \"../../core/config/all-app-routes\";\r\nimport {TypeDisplaySearchOffers} from \"../../shared/enums/type-offer.enum\";\r\nimport {getFullUrlWithParams} from \"../../shared/utils/utils-functions\";\r\nimport {AllAppConfig} from \"../../core/config/all-config\";\r\nimport {getEntities as getEntitiesOffers, resetPublicEntitiesOffers} from '../../shared/reducers/offer.reducer';\r\nimport queryString from 'query-string';\r\nimport Alert from \"@mui/material/Alert/Alert\";\r\nimport {SearchAppBar} from \"../../shared/layout/menus/SearchAppBar\";\r\nimport ItemsOffer from \"../../shared/components/item-offer/ItemsOffer\";\r\nimport RightSearch from \"./ui-segments/RightSearch\";\r\nimport LeftSearch from './ui-segments/LeftSearch';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport './Search.scss';\r\nimport LoadingSearchOffers from \"./ui-segments/LoadingSearchOffers\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nconst isOnLine = (list:any[], email: string): boolean => {\r\n    return list.findIndex(item => item.principal.email==email) >=0;\r\n}\r\n\r\nexport interface ISearchProps extends StateProps, DispatchProps {}\r\n\r\nexport const Search = (props: ISearchProps) => {\r\n\r\n    const [typeDisplayOffers, setTypeDisplayOffers] = React.useState<TypeDisplaySearchOffers>(TypeDisplaySearchOffers.Grid);\r\n    const [activePage, setActivePage] = React.useState(-1);\r\n    const [isSearchCalback, setIsSearchCalback] = React.useState<boolean>(false);\r\n\r\n    const navigate = useNavigate();\r\n    const { search } = useLocation();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const { listOffers, loadingListOffers, getEntitiesOffers, totalItems, entitiesCategories } = props;\r\n\r\n    const resetAll = () => {\r\n        props.resetPublicEntitiesOffers();\r\n        setActivePage(0);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setActivePage(-1);\r\n        resetAll();\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if(activePage>=0 || isSearchCalback){\r\n            const values = queryString.parse(search);\r\n            let queryParams = getFullUrlWithParams(values);\r\n            getEntitiesOffers(activePage, AllAppConfig.OFFERS_PER_PAGE, queryParams);\r\n            setIsSearchCalback(false);\r\n        }\r\n    }, [activePage, isSearchCalback]);\r\n\r\n    const loadMore = () => {\r\n        setActivePage(activePage+1);\r\n    }\r\n\r\n    const searchCalback = (values: any) => {\r\n        navigate({\r\n            pathname: ALL_APP_ROUTES.SEARCH,\r\n            search: \"?\" + new URLSearchParams(getFullUrlWithParams(values)).toString()\r\n        }, { replace: false })\r\n        // setActivePage(-1);\r\n        setIsSearchCalback(true);\r\n        resetAll();\r\n    }\r\n\r\n    const typeDisplay = (value: TypeDisplaySearchOffers) => {\r\n        setTypeDisplayOffers(value);\r\n    }\r\n\r\n    const isUserOnline = (email: string) => {\r\n        return isOnLine(props.listConnectedUsers, email);\r\n    }\r\n\r\n    return (\r\n        <Box  sx={{ px: { xs: 2, md: 0 } }}>\r\n            <Grid container sx={{ pt: 2 }}>\r\n                <Grid item xs={12} sm={6} md={1}></Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={2}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                            SRF\r\n                        </Link>\r\n                        <Typography color=\"text.primary\">{t('common.label_search')}</Typography>\r\n                    </Breadcrumbs>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n                container\r\n                spacing={6}\r\n                sx={{mt: 0}}>\r\n                <Grid item xs={12} sm={6} md={1}></Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={2} sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n                    <LeftSearch listAddress={props.entitiesAddress.slice()} filterCallback={searchCalback}/>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={6} sx={{pt: {xs: '0 !important', md: '48px !important'}}}>\r\n                    <div\r\n                        style={{\r\n                            maxWidth: '100%',\r\n                            marginBottom: 100,\r\n                        }}\r\n                    >\r\n                        <SearchAppBar entitiesCategories={entitiesCategories.slice()} searchCalback={searchCalback} typeDisplayCallback={typeDisplay} listAddress={props.entitiesAddress.slice()}/>\r\n                    </div>\r\n\r\n                    <InfiniteScroll\r\n                        pageStart={activePage}\r\n                        loadMore={loadMore}\r\n                        hasMore={props.totalPages-1 > activePage}\r\n                        loader={<div className=\"loader\" key={0}></div>}\r\n                        threshold={0}\r\n                        initialLoad={false}\r\n                    >\r\n                        <ItemsOffer listOffers={listOffers.slice()} typeDisplay={typeDisplayOffers} isOnLine={(email: string) => isUserOnline(email)}/>\r\n\r\n                        {\r\n                            loadingListOffers ? <LoadingSearchOffers typeDisplay={typeDisplayOffers}/> : totalItems ===0 ?  <Alert severity=\"warning\">No Offers found</Alert> : null\r\n                        }\r\n\r\n                    </InfiniteScroll>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n                    <RightSearch />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Box>\r\n    );\r\n}\r\nconst mapStateToProps = ({ user, offer, category, address, webSocketState }: IRootState) => ({\r\n    listOffers: offer.entities,\r\n    loadingListOffers: offer.loadingEntities,\r\n    totalItems: offer.totalItems,\r\n    totalPages: offer.totalPages,\r\n\r\n    entitiesCategories: category.entities,\r\n    entitiesAddress: address.entities,\r\n\r\n    listConnectedUsers: webSocketState.listConnectedUsers\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getEntitiesOffers,\r\n    resetPublicEntitiesOffers,\r\n    isOnLine\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 4h16v12H5.17L4 17.17V4m0-2c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2H4zm2 10h12v2H6v-2zm0-3h12v2H6V9zm0-3h12v2H6V6z\"\n}), 'MessageOutlined');\n\nexports.default = _default;"],"names":["validationSchemaAddMessage","Yup","content","required","min","max","initialValues","mapDispatchToProps","createEntity","connect","reportProbleme","user","loading","loadingEntity","entity","addSuccess","isAuthenticated","currentUser","props","formik","useFormik","validationSchema","onSubmit","values","React","resetForm","handleSubmit","sx","display","alignItems","color","mr","my","id","name","label","variant","fullWidth","multiline","value","onChange","handleChange","error","touched","Boolean","errors","rows","className","size","mt","type","RightSearch","Box","List","width","mb","component","subheader","ListSubheader","map","key","ListItemButton","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Divider","Card","CardContent","height","title","frameBorder","allow","allowFullScreen","ProblemeDeclaration","LeftSearchClient","listAddress","filterCallback","FB","XFBML","parse","e","window","console","FilterOffer","handelChange","style","isOnLine","list","email","findIndex","item","principal","Search","TypeDisplaySearchOffers","typeDisplayOffers","setTypeDisplayOffers","activePage","setActivePage","isSearchCalback","setIsSearchCalback","navigate","useNavigate","search","useLocation","t","useTranslation","listOffers","loadingListOffers","getEntitiesOffers","totalItems","entitiesCategories","resetAll","resetPublicEntitiesOffers","queryString","queryParams","getFullUrlWithParams","AllAppConfig","searchCalback","pathname","ALL_APP_ROUTES","URLSearchParams","toString","replace","isUserOnline","listConnectedUsers","px","xs","md","Grid","container","pt","sm","Breadcrumbs","to","Typography","spacing","entitiesAddress","slice","maxWidth","marginBottom","SearchAppBar","typeDisplayCallback","pageStart","loadMore","hasMore","totalPages","loader","threshold","initialLoad","ItemsOffer","typeDisplay","LoadingSearchOffers","Alert","severity","offer","category","address","webSocketState","entities","loadingEntities","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}