{"version":3,"file":"static/js/846.94b3a677.chunk.js","mappings":"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","sources":["main-features/offer/components/details-offer/ui-segments/cart-sell-details-offer.tsx","shared/components/custom-share/CustomShare.tsx","main-features/probleme-declaration/components/probleme-declaration.tsx","main-features/offer/components/details-offer/ui-segments/right-details-offer.tsx","shared/model/comment-offer.model.ts","shared/components/read-more-text/ReadMoreText.tsx","main-features/offer/components/details-offer/ui-segments/comment-details-offer.tsx","shared/pages/image-lightbox.tsx","main-features/offer/components/details-offer/ui-segments/swiper-details-offer.tsx","main-features/offer/components/details-offer/details-offer.tsx","main-features/offer/components/details-offer/validation/initial-values-add-comment-offer.ts","shared/components/input-quantity/InputQuantity.tsx","shared/enums/offer-type-contact.enum.ts","shared/enums/type-offer.enum.ts","shared/pages/react-time-ago.tsx","shared/pages/styled-badge.tsx","shared/pages/transition-modal.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Divider from \"@mui/material/Divider/Divider\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton/LoadingButton\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {InputQuantity} from \"../../../../../shared/components/input-quantity/InputQuantity\";\r\nimport {getBaseImageUrl} from \"../../../../../shared/utils/utils-functions\";\r\n\r\nexport default function CartSellDetailsOffer({parentCallbackAddCart, loadingAddCart}:\r\n                                                 {parentCallbackAddCart: Function, loadingAddCart: boolean}) {\r\n    const [value, setValue] = React.useState<string>('1');\r\n    const [valueQuantity, setValueQuantity] = React.useState<number>(1);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const changeQuantity = (data: any) => {\r\n        console.log('data ', data);\r\n        setValueQuantity(data);\r\n    }\r\n\r\n    const addNewCart = () => {\r\n        console.log('valueQuantity ', valueQuantity);\r\n        parentCallbackAddCart({\r\n            quantity: valueQuantity\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', typography: 'body1', my: 3 }}>\r\n            <TabContext value={value}>\r\n                <TabPanel value=\"1\">\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                                <InfoOutlinedIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                En Stock\r\n                            </Typography>\r\n                            <Box sx={{my: 2}}>\r\n                                <InputQuantity parentCallChangeQuantity={changeQuantity} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item  xs={12} md={6}>\r\n                            <List sx={{ }}>\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Remy Sharp\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/creditcard.svg')} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Paiement facile\"\r\n                                        secondary=\"Payer vos articles commandés au comptant lors de la livraison\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Travis Howard\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/local-shipping.svg')}/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Politique de livraison\"\r\n                                        secondary=\"Remise de 5% à partir de 50dt d'achats sur les produits mazroub exclusive\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                                <ListItem alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"Cindy Baker\"\r\n                                                src={getBaseImageUrl('/assets/images/offer/details-offer/loop.svg')}/>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary=\"Politique de retours\"\r\n                                        secondary=\"Remboursement entre 3 et 12 jours à partir la date de réception de votre retour\"\r\n                                    />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{  my: 2 }} display=\"flex\" justifyContent=\"center\">\r\n                        <LoadingButton loading={loadingAddCart} fullWidth\r\n                                       variant=\"contained\"\r\n                                       color=\"success\"\r\n                                       onClick={addNewCart}>\r\n                            {t<string>('common.label_add')}\r\n                        </LoadingButton>\r\n                    </Box>\r\n                </TabPanel>\r\n                <TabPanel value=\"2\">Acheter directement</TabPanel>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <TabList onChange={handleChange} aria-label=\"lab API tabs example\" centered>\r\n                        <Tab label=\"Ajouter au panier\" value=\"1\" />\r\n                        <Tab label=\"Acheter directement\" value=\"2\" />\r\n                    </TabList>\r\n                </Box>\r\n            </TabContext>\r\n        </Box>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {checkMobileDesktopBrowser} from \"../../utils/utils-functions\";\r\nimport FacebookShareButton from \"react-share/lib/FacebookShareButton\";\r\nimport {SourceProvider} from \"../../enums/source-provider\";\r\nimport IconButton from \"@mui/material/IconButton/IconButton\";\r\n\r\nclass CustomShare extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            shareData: {\r\n                title: 'MDN',\r\n                text: 'Learn web development on MDN!',\r\n                url: 'https://developer.mozilla.org'\r\n            }\r\n        }\r\n        this.handleShare = this.handleShare.bind(this);\r\n    }\r\n\r\n    handleShare(){\r\n        navigator.share(this.state.shareData).then((result) => {});\r\n    }\r\n\r\n    render() {\r\n        return checkMobileDesktopBrowser()===SourceProvider.MOBILE_BROWSER ?\r\n            <IconButton onClick={this.handleShare}>\r\n                {this.props.children}\r\n            </IconButton>\r\n            :\r\n            <FacebookShareButton\r\n                url={this.props.url}\r\n                quote=\"quote\" >\r\n                {this.props.children}\r\n            </FacebookShareButton>\r\n    }\r\n}\r\n\r\nexport default CustomShare;","import React from 'react';\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport TextField from \"@mui/material/TextField/TextField\";\r\nimport MessageIcon from '@mui/icons-material/MessageOutlined';\r\nimport Card from \"@mui/material/Card/Card\";\r\nimport CardContent from \"@mui/material/CardContent/CardContent\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport {allSessionSelector} from \"../../user/store/slice\";\r\nimport {addProblemeDecalration, addSuccessProblemeDeclaration, entityProblemeDeclaration, loadingProblemeDeclaration} from '../store/slice';\r\nimport LoadingButton from \"@mui/lab/LoadingButton/LoadingButton\";\r\n\r\nconst initialValuesAddMessage = {\r\n    content: '',\r\n};\r\n\r\nconst validationSchemaAddMessage = Yup.object({\r\n    content: Yup.string().required('Message is required').min(5, 'Min 5 digits').max(2000, 'Max 2000 digits'),\r\n});\r\n\r\nconst initialValues = initialValuesAddMessage;\r\n\r\n// export interface IProblemeDeclarationProps extends StateProps, DispatchProps{}\r\n\r\nexport default function ProblemeDeclaration (){\r\n// export const ProblemeDeclaration = (props: IProblemeDeclarationProps) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {isAuthenticated} = useSelector(allSessionSelector);\r\n\r\n    const loadingProblemeDeclarationSelector = useSelector(loadingProblemeDeclaration) ?? false;\r\n    const addSuccessProblemeDeclarationSelector = useSelector(addSuccessProblemeDeclaration) ?? false;\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddMessage,\r\n        onSubmit: values => {\r\n            if (isAuthenticated) {\r\n                dispatch(addProblemeDecalration({...values}));\r\n                // props.createEntity(values);\r\n            }\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(addSuccessProblemeDeclarationSelector){\r\n            formik.resetForm();\r\n        }\r\n    }, [addSuccessProblemeDeclarationSelector])\r\n\r\n    return(\r\n        <Box>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                            <MessageIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                            <TextField id=\"content\"\r\n                                       name=\"content\"\r\n                                       label=\"Declarer votre probleme\"\r\n                                       variant=\"standard\"\r\n                                       fullWidth\r\n                                       multiline\r\n                                       value={formik.values.content}\r\n                                       onChange={formik.handleChange}\r\n                                       error={formik.touched.content && Boolean(formik.errors.content)}\r\n                                       rows={4}/>\r\n                        </Box>\r\n                        {\r\n                            formik.touched.content && Boolean(formik.errors.content) ? <Box className=\"red-color\">{formik.errors.content}</Box> : null\r\n                        }\r\n                        <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                            <LoadingButton loading={loadingProblemeDeclarationSelector}\r\n                                           variant=\"outlined\" size=\"small\" fullWidth sx={{mt: 2}}\r\n                                           color=\"neutral\"\r\n                                           type=\"submit\">\r\n                                Declarer\r\n                            </LoadingButton>\r\n\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n// const mapStateToProps = ({reportProbleme, user}: IRootState) => ({\r\n//     loading: reportProbleme.loadingEntity,\r\n//     entity: reportProbleme.entity,\r\n//     addSuccess: reportProbleme.addSuccess,\r\n//\r\n//     isAuthenticated: user.isAuthenticated,\r\n//     currentUser: user.currentUser,\r\n// })\r\n// const mapDispatchToProps = {\r\n//     createEntity\r\n// }\r\n//\r\n// type StateProps = ReturnType<typeof mapStateToProps>;\r\n// type DispatchProps = typeof mapDispatchToProps;\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ProblemeDeclaration);\r\n","import React from 'react';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport CardActions from '@mui/material/CardActions/CardActions';\r\nimport Button from '@mui/material/Button/Button';\r\nimport CardHeader from '@mui/material/CardHeader/CardHeader';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport EmailIcon from '@mui/icons-material/EmailOutlined';\r\nimport MessageIcon from '@mui/icons-material/MessageOutlined';\r\nimport Box from '@mui/material/Box/Box';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport DialogActions from '@mui/material/DialogActions/DialogActions';\r\nimport Dialog from '@mui/material/Dialog/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText/DialogContentText';\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    initialValuesAddMessageDetailsOffer,\r\n    validationSchemaAddMessageDetailsOffer\r\n} from \"../validation/initial-values-add-comment-offer\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport {IOffer} from \"../../../../../shared/model/offer.model\";\r\nimport {IUser} from \"../../../../../shared/model/user.model\";\r\nimport {\r\n    convertDateTimeToServer,\r\n    getBaseImageUrl,\r\n    getFullnameUser,\r\n    getUserAvatar\r\n} from \"../../../../../shared/utils/utils-functions\";\r\nimport {ALL_APP_ROUTES} from \"../../../../../core/config/all-app-routes\";\r\nimport {TransitionModal} from \"../../../../../shared/pages/transition-modal\";\r\nimport {ListItemButton} from \"@mui/material\";\r\nimport {StyledBadge} from \"../../../../../shared/pages/styled-badge\";\r\nimport CustomShare from '../../../../../shared/components/custom-share/CustomShare';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport ProblemeDeclaration from '../../../../probleme-declaration/components/probleme-declaration';\r\n\r\n\r\n\r\n\r\nconst initialValues = initialValuesAddMessageDetailsOffer;\r\n\r\nexport default function RightDetailsOffer({offerEntity, parentCallback, currentUser, isAuthenticated, myFavoriteUser, createConversationCallback, addSuccessConversation, isOnLine}:\r\n                                              {\r\n                                                  offerEntity: IOffer | undefined,\r\n                                                  parentCallback: any,\r\n                                                  currentUser: IUser,\r\n                                                  isAuthenticated: boolean,\r\n                                                  myFavoriteUser: boolean,\r\n                                                  createConversationCallback: any,\r\n                                                  addSuccessConversation: boolean,\r\n                                                  isOnLine: any\r\n                                              }) {\r\n\r\n    const [defaultValues, setDefaultValues] = React.useState<any>();\r\n    const [messageAlert, setMessageAlert] = React.useState('');\r\n    const [openAlert, setOpenAlert] = React.useState(false);\r\n    const [contactWithPhone, setContactWithPhone] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddMessageDetailsOffer,\r\n        onSubmit: values => {\r\n            if (currentUser.id !== offerEntity?.user?.id && isAuthenticated) {\r\n                setDefaultValues(values);\r\n                sendMessage(values.content);\r\n            }\r\n        },\r\n    });\r\n\r\n    const setResetValues = () => {\r\n        formik.setFieldValue('fullName', getFullnameUser(currentUser));\r\n        formik.setFieldValue('email', currentUser.email);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if( !isEmpty(currentUser)) {\r\n            setResetValues();\r\n        }\r\n    }, [currentUser])\r\n\r\n    React.useEffect(() =>{\r\n        if(addSuccessConversation){\r\n            formik.resetForm();\r\n            setResetValues();\r\n        }\r\n    }, [addSuccessConversation])\r\n\r\n    const sendMessage = (content: string) => {\r\n        const entity = {\r\n            content: content,\r\n            conversation: {\r\n                dateCreated: convertDateTimeToServer(new Date()),\r\n                senderUser: null,\r\n                receiverUser: {\r\n                    id: offerEntity?.user?.id,\r\n                    email: offerEntity?.user?.email,\r\n                },\r\n            },\r\n        };\r\n        createConversationCallback(entity);\r\n    };\r\n\r\n    const [openFavoriteModal, setOpenFavoriteModal] = React.useState(false);\r\n    const handleClickOpenFavoriteModal = (event: any) => {\r\n        event.stopPropagation();\r\n        if (!myFavoriteUser) {\r\n            setOpenFavoriteModal(true);\r\n        }\r\n    };\r\n    const handleCloseFavoriteModal = () => {\r\n        setOpenFavoriteModal(false);\r\n    };\r\n\r\n    const handleAddFavoriteModal = () => {\r\n        setOpenFavoriteModal(false);\r\n        parentCallback(offerEntity?.user?.id);\r\n    };\r\n\r\n    const handleExpandClick = () => {\r\n    };\r\n\r\n    const redirectToPorfile = (userId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.PROFILE + '/' + userId);\r\n        }, 300);\r\n    };\r\n\r\n    const getFavoriteUserColor = () => {\r\n        if (myFavoriteUser) {\r\n            return 'red';\r\n        }\r\n        return 'color: rgba(0, 0, 0, 0.54)';\r\n    };\r\n\r\n    const renderDialogFavoriteUser = () => {\r\n        return (\r\n            <Dialog\r\n                open={openFavoriteModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseFavoriteModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t<string>('details_offer.title_add_favrite_user')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t<string>('details_offer.description_add_favrite_user')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseFavoriteModal} color=\"neutral\">\r\n                        {t<string>('common.label_cancel')}\r\n                    </Button>\r\n                    <Button onClick={handleAddFavoriteModal} color=\"success\">\r\n                        {t<string>('common.label_favorite')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const openPositionInGoogleMap = () => {\r\n        console.log('offerEntity ', offerEntity);\r\n        if(!offerEntity?.address){\r\n            setMessageAlert(t('details_offer.not_address_found_itenarary'));\r\n            setOpenAlert(true);\r\n        }\r\n        else{\r\n            window.open('https://www.google.com/maps/@35.8235978,10.6309176,15z', '_new');\r\n        }\r\n\r\n    }\r\n\r\n    const openItenraireGoogleMap = () => {\r\n        console.log('offerEntity ', offerEntity);\r\n        if(!offerEntity?.address){\r\n            setMessageAlert(t('details_offer.not_address_found_itenarary'));\r\n            setOpenAlert(true);\r\n        }\r\n        else if(!currentUser?.address){\r\n            setMessageAlert(t('details_offer.miss_address_account'));\r\n            setOpenAlert(true);\r\n        }\r\n        else{\r\n            window.open('https://www.google.com/maps/dir/'+currentUser?.address?.lng+','+currentUser?.address?.lng+'/'+offerEntity?.address?.lng+','+offerEntity?.address?.lng+'', '_new');\r\n        }\r\n\r\n    }\r\n\r\n    const handleCloseAlert = () => {\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    const contactWithFacebookcontactWithFacebook = () => {\r\n        if(!offerEntity?.user?.linkProfileFacebook){\r\n            setMessageAlert(t('details_offer.message_not_link_profile_facebook_exist'));\r\n            setOpenAlert(true);\r\n        }else{\r\n            window.open(offerEntity?.user?.linkProfileFacebook, '_new');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} sm={12}>\r\n            <Card>\r\n                <Typography paragraph sx={{m: 2}}>\r\n                    {t<string>('details_offer.about_seller')}\r\n                </Typography>\r\n                <ListItemButton  onClick={() => redirectToPorfile(offerEntity?.user?.id)} sx={{display: 'block'}}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            offerEntity ? (\r\n                                    <StyledBadge\r\n                                        overlap=\"circular\"\r\n                                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                        variant=\"dot\"\r\n                                        color={isOnLine(offerEntity.user?.email) ? 'success' : 'error'}>\r\n                                            <Avatar\r\n                                                aria-label=\"recipe\"\r\n                                                alt={offerEntity.user?.imageUrl}\r\n                                                src={getUserAvatar(offerEntity.user?.id, offerEntity.user?.imageUrl, offerEntity.user?.sourceRegister)}\r\n                                                sx={{border: '1px solid #b9b9b9'}}\r\n                                            >{getFullnameUser(offerEntity?.user)?.charAt(0)}</Avatar>\r\n                                    </StyledBadge>\r\n                            ) : null\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\"\r\n                                        sx={{color: getFavoriteUserColor()}}\r\n                                        onClick={(event: any) => handleClickOpenFavoriteModal(event)}\r\n                                        disabled={offerEntity?.user?.id === currentUser?.id}>\r\n                                <FavoriteIcon/>\r\n                            </IconButton>\r\n                        }\r\n                        title={\r\n                            <React.Fragment>\r\n                                {getFullnameUser(offerEntity?.user)}\r\n                            </React.Fragment>\r\n                        }\r\n                        subheader={offerEntity?.user?.email}\r\n                        onClick={() => redirectToPorfile(offerEntity?.user?.id)}\r\n                        role=\"button\"\r\n                    />\r\n                </ListItemButton >\r\n\r\n                {offerEntity?.user?.address ? (\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {offerEntity?.user?.address.city}, {offerEntity?.user?.address.country}\r\n                        </Typography>\r\n                    </CardContent>\r\n                ) : null}\r\n\r\n                <CardActions disableSpacing sx={{backgroundColor: 'rgba(0, 0, 0, 0.74);'}}>\r\n                    <IconButton\r\n                        aria-label=\"add to favorites\"\r\n                        sx={{color: getFavoriteUserColor()}}\r\n                        onClick={handleClickOpenFavoriteModal}\r\n                        disabled={offerEntity?.user?.id === currentUser?.id}\r\n                    >\r\n                        <FavoriteIcon/>\r\n                    </IconButton>\r\n\r\n                    <CustomShare url=\"https://github.com/nygardk/react-share/blob/master/demo/Demo.tsx\">\r\n                        <Box sx={{color: '#fff'}}>\r\n                            <ShareIcon/>\r\n                        </Box>\r\n                    </CustomShare>\r\n\r\n                    <IconButton sx={{marginLeft: 'auto', color: '#fff'}} onClick={handleExpandClick}>\r\n                        <ExpandMoreIcon/>\r\n                    </IconButton>\r\n                </CardActions>\r\n\r\n                <Grid container item sx={{mt: 3}}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Box sx={{'& > :not(style)': {m: 1}}}>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <Typography paragraph className=\"text-center\">\r\n                                    {t<string>('details_offer.send_message')}\r\n                                </Typography>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <AccountCircle sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"fullName\"\r\n                                               name=\"fullName\"\r\n                                               label={t<string>('common.label_name')}\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               disabled={!(formik.touched.fullName && Boolean(formik.errors.fullName))}\r\n                                               value={formik.values.fullName}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.fullName && Boolean(formik.errors.fullName)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end', my: 2}}>\r\n                                    <EmailIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"email\"\r\n                                               name=\"email\"\r\n                                               label={t<string>('common.label_email')}\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               disabled={!(formik.touched.email && Boolean(formik.errors.email))}\r\n                                               value={formik.values.email}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.email && Boolean(formik.errors.email)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <MessageIcon sx={{color: 'action.active', mr: 1, my: 0.5}}/>\r\n                                    <TextField id=\"content\"\r\n                                               name=\"content\"\r\n                                               label=\"Message\"\r\n                                               variant=\"standard\"\r\n                                               fullWidth\r\n                                               multiline\r\n                                               rows={4}\r\n                                               value={formik.values.content}\r\n                                               onChange={formik.handleChange}\r\n                                               error={formik.touched.content && Boolean(formik.errors.content)}/>\r\n                                </Box>\r\n                                <Box sx={{display: 'flex', alignItems: 'flex-end'}}>\r\n                                    <Button variant=\"outlined\" size=\"small\" fullWidth sx={{mt: 2, mb: 2}}\r\n                                            color=\"neutral\"\r\n                                            type=\"submit\"\r\n                                            disabled={currentUser.id === offerEntity?.user?.id}>\r\n                                        {t<string>('common.label_send')}\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} sx={{p: 2, borderLeft: '1px solid #cfcbcb;'}}>\r\n                        <Typography paragraph className=\"text-center\">\r\n                            {t<string>('details_offer.contact_with')}\r\n                        </Typography>\r\n\r\n                        <Button variant=\"outlined\" startIcon={<FacebookIcon/>} fullWidth sx={{mt: 3}} onClick={() => contactWithFacebookcontactWithFacebook()}>\r\n                            Facebook\r\n                        </Button>\r\n\r\n                        <Button variant=\"outlined\" startIcon={<PhoneIcon/>} fullWidth sx={{mt: 3}} onClick={() => setContactWithPhone(!contactWithPhone)}>\r\n                            {contactWithPhone ? offerEntity?.user?.phone : t<string>('details_offer.show_number')}\r\n                        </Button>\r\n\r\n                        <a href={`mailto:${offerEntity?.user?.email}`} style={{textDecoration: 'none'}}>\r\n                            <Button variant=\"outlined\" startIcon={<EmailIcon/>} fullWidth sx={{mt: 3}}>\r\n                                {t<string>('details_offer.send_email')}\r\n                            </Button>\r\n                        </a>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n\r\n            <Grid container item spacing={2} sx={{mt: 1}}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card onClick={openPositionInGoogleMap}>\r\n                        <CardContent>\r\n                            <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                Découvrir le quartier\r\n                            </Typography>\r\n                            <div style={{maxHeight: 400, marginTop: 30}}>\r\n                                <img\r\n                                    className=\"img-fluid\"\r\n                                    src={getBaseImageUrl('/assets/images/offer/details-offer/desktop-map-neighbourhood.ext.svg')}\r\n                                    alt=\"desktop-map-neighbourhood\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card onClick={openItenraireGoogleMap}>\r\n                        <CardContent>\r\n                            <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                Découvrir le quartier\r\n                            </Typography>\r\n                            <div style={{maxHeight: 400, marginTop: 30}}>\r\n                                <img\r\n                                    className=\"img-fluid\"\r\n                                    src={getBaseImageUrl('/assets/images/offer/details-offer/desktop-time-of-travel-address.ext.svg')}\r\n                                    alt=\"desktop-time-of-travel-address\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container item spacing={2} sx={{mt: 1}}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ProblemeDeclaration />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <div>{renderDialogFavoriteUser()}</div>\r\n            <div>\r\n                <Snackbar\r\n                    open={openAlert}\r\n                    autoHideDuration={5000}\r\n                    onClose={handleCloseAlert}\r\n                    message={messageAlert}\r\n                />\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n","import {IOffer} from \"./offer.model\";\r\nimport {IUser} from \"./user.model\";\r\n\r\n\r\nexport interface ICommentOffer {\r\n  id?: number;\r\n  createdDate?: string | null;\r\n  content?: string | null;\r\n  offer?: IOffer | null;\r\n  user?: IUser | null;\r\n}\r\n\r\nexport const defaultValue: Readonly<ICommentOffer> = {};\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\n\r\n\r\nexport interface ReadMoreTextProps {\r\n    text: string\r\n    type?: 'plainText' | 'html'\r\n    readMoreText?: string\r\n    readLessText?: string\r\n    containerHeight?: string\r\n    onAction?: () => void\r\n    lines?: number\r\n}\r\n\r\n\r\nconst ReadMoreText: React.FC<ReadMoreTextProps> = (props) => {\r\n    const [isOverflowing, setIsOverflowing] = useState(false)\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const el = containerRef.current;\r\n        if (!el) return;\r\n\r\n        if (el.scrollHeight > el.clientHeight) {\r\n            setIsOverflowing(true);\r\n        }\r\n\r\n    }, [props.lines])\r\n\r\n\r\n    const toggleExpand = () => {\r\n        setExpanded(!expanded)\r\n    }\r\n\r\n    const formatText = (text: string) => text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\r\n\r\n    const {\r\n        type = 'plainText',\r\n        text = '',\r\n        readMoreText = 'More',\r\n        readLessText = 'Less',\r\n        onAction = toggleExpand\r\n    } = props\r\n\r\n    const _html = formatText(text);\r\n\r\n    return (\r\n        <span className=\"rm-container\">\r\n            <span ref={containerRef} className=\"rm-text-wrapper\">\r\n                {\r\n                    expanded ? _html : _html.substring(0, AllAppConfig.NBE_WORD_SHOW_MORE_LESS)\r\n                }\r\n\r\n            </span>\r\n            {\r\n                _html.length > AllAppConfig.NBE_WORD_SHOW_MORE_LESS ?\r\n                <span className=\"rm-action-button-container\">\r\n                    {\r\n                        !expanded ?\r\n                            <span className=\"rm-more-button\" onClick={onAction} >{readMoreText}</span> :\r\n                            <span className=\"rm-less-button\" onClick={toggleExpand}>{readLessText}</span>\r\n                    }\r\n                </span> : null\r\n            }\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default (ReadMoreText)","import React from 'react';\r\nimport List from '@mui/material/List/List';\r\nimport ListItem from '@mui/material/ListItem/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText/ListItemText';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Divider from '@mui/material/Divider/Divider';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Button from '@mui/material/Button/Button';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\n\r\nimport {useFormik} from 'formik';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport Dialog from '@mui/material/Dialog/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions/DialogActions';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport FlagIcon from '@mui/icons-material/Flag';\r\nimport {useEffect} from 'react';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {defaultValue, ICommentOffer} from \"../../../../../shared/model/comment-offer.model\";\r\nimport {getFullnameUser, getUserAvatar} from \"../../../../../shared/utils/utils-functions\";\r\nimport {IOffer} from \"../../../../../shared/model/offer.model\";\r\nimport {IUser} from \"../../../../../shared/model/user.model\";\r\nimport {TransitionModal} from \"../../../../../shared/pages/transition-modal\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {ConvertReactTimeAgo} from \"../../../../../shared/pages/react-time-ago\";\r\nimport {\r\n    initialValuesAddCommentOffer,\r\n    validationSchemaAddCommentOffer\r\n} from \"../validation/initial-values-add-comment-offer\";\r\nimport ReadMoreText from \"../../../../../shared/components/read-more-text/ReadMoreText\";\r\n\r\nconst initialValues = initialValuesAddCommentOffer;\r\n\r\nexport default function CommentDetailsOffer({\r\n                                                offerEntity,\r\n                                                listCommentsByOffer,\r\n                                                account,\r\n                                                isAuthenticated,\r\n                                                loadingListComments,\r\n                                                loadingUpdateEntity,\r\n                                                loadingAddEntity,\r\n                                                parentCallbackAddComment,\r\n                                                parentCallbackDeleteComment,\r\n                                                parentCallbackUpdateComment,\r\n                                                parentCallbackReportComment,\r\n                                                parentCallbackLoadMoreComments,\r\n                                                totalItems\r\n                                            }: {\r\n    offerEntity: IOffer | undefined,\r\n    listCommentsByOffer: ReadonlyArray<ICommentOffer>,\r\n    account: IUser,\r\n    isAuthenticated: boolean,\r\n    loadingListComments: boolean,\r\n    loadingUpdateEntity: boolean,\r\n    loadingAddEntity: boolean,\r\n    parentCallbackAddComment: any,\r\n    parentCallbackDeleteComment: any,\r\n    parentCallbackUpdateComment: any,\r\n    parentCallbackReportComment: any,\r\n    parentCallbackLoadMoreComments: any,\r\n    totalItems: number\r\n}) {\r\n    const [commentDeleteId, setCommentDeleteId] = React.useState(-1);\r\n    const [commentUpdateId, setCommentUpdateId] = React.useState(-1);\r\n    const [showComments, setShowComments] = React.useState<boolean>(false);\r\n    const [openReportCommentOfferModal, setOpenReportCommentOfferModal] = React.useState(false);\r\n    const [commentReport, setCommentReport] = React.useState<ICommentOffer>(defaultValue);\r\n\r\n\r\n    const { t} = useTranslation();\r\n\r\n    const handleCallbackAddComment = (content: string) => {\r\n        parentCallbackAddComment(content);\r\n    };\r\n\r\n    const handleCallbackUpdateComment = (content: string, commentId: number) => {\r\n        parentCallbackUpdateComment(content, commentId);\r\n        setCommentUpdateId(-1);\r\n    };\r\n\r\n    const [openDeleteCommentModal, setDeleteCommentModal] = React.useState(false);\r\n    const handleClickOpenDeleteCommentModal = (cmtId: number) => {\r\n        setCommentDeleteId(cmtId);\r\n        setDeleteCommentModal(true);\r\n    };\r\n    const handleClickCancelDeleteCommentModal = () => {\r\n        setDeleteCommentModal(false);\r\n    };\r\n\r\n    const handleClickDeleteDeleteCommentModal = () => {\r\n        setDeleteCommentModal(false);\r\n        parentCallbackDeleteComment(commentDeleteId);\r\n    };\r\n\r\n    const setUpdateComment = (commentId: number) => {\r\n        setCommentUpdateId(commentId);\r\n    };\r\n\r\n    const parentCallbackCancelUpdateComment = () => {\r\n        setCommentUpdateId(-1);\r\n    };\r\n\r\n    const renderDialogDeleteComment = () => {\r\n        return (\r\n            <Dialog\r\n                open={openDeleteCommentModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleClickCancelDeleteCommentModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t<string>('details_offer.title_dialog_delete_comment')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t<string>('details_offer.description_dialog_delete_comment')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClickCancelDeleteCommentModal} color=\"neutral\">\r\n                        {t<string>('common.label_cancel')}\r\n                    </Button>\r\n                    <Button onClick={handleClickDeleteDeleteCommentModal} color=\"error\">\r\n                        {t<string>('common.label_delete')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const reportCommentOffer = (comment: ICommentOffer) => {\r\n        setCommentReport(comment);\r\n        setOpenReportCommentOfferModal(true);\r\n    }\r\n    const handleCloseReportCommentOfferModal = () => {\r\n        setOpenReportCommentOfferModal(false);\r\n    }\r\n    const handleAddReportCommentOfferModal = () => {\r\n        setOpenReportCommentOfferModal(false);\r\n        parentCallbackReportComment(commentReport);\r\n    }\r\n    const renderDialogReportCommentOffer = () => {\r\n        return (\r\n            <Dialog\r\n                open={openReportCommentOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseReportCommentOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>\r\n                    {t<string>('details_offer.title_dialog_report_comment')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t<string>('details_offer.description_dialog_report_comment')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseReportCommentOfferModal}>\r\n                        {t<string>('common.label_cancel')}\r\n                    </Button>\r\n                    <Button color=\"success\" onClick={handleAddReportCommentOfferModal}>\r\n                        {t<string>('common.label_report')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <List sx={{bgcolor: 'background.paper', mt: 2}}>\r\n                <Box>\r\n\r\n                    {\r\n                        totalItems > 0 ? <ListItem alignItems=\"flex-start\" button onClick={() => setShowComments(!showComments)}>\r\n                            <ListItemText>\r\n                                <Typography variant=\"subtitle1\" component=\"a\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                                    <u>\r\n                                        {\r\n                                            !showComments ? t<string>('comment_offer.show_comment_details_offer') : t<string>('comment_offer.hide_comment_details_offer')\r\n                                        }\r\n                                        ({totalItems})\r\n                                    </u>\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem> : null\r\n                    }\r\n\r\n                    {\r\n                        showComments ?\r\n                            <Box>\r\n                                {\r\n                                    listCommentsByOffer.map((comment: ICommentOffer, index: number) => (\r\n                                        <div key={`comment-${index}`}>\r\n                                            <ListItem\r\n                                                alignItems=\"flex-start\"\r\n                                                secondaryAction={\r\n                                                    <Box>\r\n                                                        {isAuthenticated && comment?.user?.id === account.id ? (\r\n                                                            <IconButton edge=\"end\" aria-label=\"edit\" color=\"success\"\r\n                                                                        onClick={() => setUpdateComment(comment.id || -1)}\r\n                                                                        sx={{mr: 0.5, display: 'block'}}>\r\n                                                                <ModeEditIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                        {isAuthenticated && (offerEntity?.user?.id === account.id || comment?.user?.id === account.id) ? (\r\n                                                            <IconButton\r\n                                                                edge=\"end\"\r\n                                                                aria-label=\"delete\"\r\n                                                                color=\"error\"\r\n                                                                onClick={() => handleClickOpenDeleteCommentModal(comment.id || -1)}\r\n                                                                sx={{display: 'block'}}>\r\n                                                                <DeleteIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                        {isAuthenticated && comment?.user?.id !== account.id ? (\r\n                                                            <IconButton edge=\"end\" aria-label=\"report\"\r\n                                                                        onClick={() => reportCommentOffer(comment)}\r\n                                                                        sx={{mr: 0.5, display: 'block'}}>\r\n                                                                <FlagIcon/>\r\n                                                            </IconButton>\r\n                                                        ) : null}\r\n                                                    </Box>\r\n                                                }\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar alt=\"Avatar\"\r\n                                                            src={getUserAvatar(comment.user?.id, comment.user?.imageUrl, comment.user?.sourceRegister)}\r\n                                                            sx={{border: '1px solid #b9b9b9'}}>{getFullnameUser(comment?.user)?.charAt(0)}</Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={getFullnameUser(comment?.user)}\r\n                                                    secondary={\r\n                                                        <React.Fragment>\r\n                                                            <Typography sx={{display: 'block'}} component=\"span\" variant=\"body2\"\r\n                                                                        color=\"text.primary\">\r\n                                                                <ConvertReactTimeAgo convertDate={comment.createdDate} />\r\n                                                            </Typography>\r\n                                                            {\r\n                                                                commentUpdateId !== comment.id ? <ReadMoreText\r\n                                                                    lines={2}\r\n                                                                    text={comment.content || ''}\r\n                                                                    readMoreText={t<string>('details_offer.label_show_more')}\r\n                                                                    readLessText={t<string>('details_offer.label_show_less')}/> : null\r\n                                                            }\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                            {commentUpdateId === comment.id ? (\r\n                                                <Box sx={{mr: 2, ml: 9}}>\r\n                                                    <UpdateComment\r\n                                                        parentCallbackUpdateComment={(content: string) => handleCallbackUpdateComment(content, (comment.id || -1))}\r\n                                                        parentCallbackCancelUpdateComment={parentCallbackCancelUpdateComment}\r\n                                                        defaultValueUpdate={comment.content}\r\n                                                        loadingUpdateEntity={loadingUpdateEntity}\r\n                                                    />\r\n                                                </Box>\r\n                                            ) : null}\r\n                                            <Divider variant=\"inset\" component=\"li\"/>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n\r\n                                {\r\n                                    loadingListComments ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', m:2}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                        </Box> : null\r\n                                }\r\n\r\n                                {\r\n                                    totalItems>listCommentsByOffer.length ? <ListItem alignItems=\"center\" button onClick={() => parentCallbackLoadMoreComments()}>\r\n                                        <ListItemText>\r\n                                            <Typography variant=\"subtitle1\" component=\"h5\" color=\"text.secondary\" sx={{ mt: 1, textAlign: 'center' }}>\r\n                                                <u>\r\n                                                    {t<string>('comment_offer.show_more_comment')}\r\n                                                </u>\r\n                                            </Typography>\r\n                                        </ListItemText>\r\n                                    </ListItem> : null\r\n                                }\r\n\r\n                            </Box> : null\r\n                    }\r\n\r\n                </Box>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt={account.imageUrl}\r\n                                src={getUserAvatar(account.id, account.imageUrl, account?.sourceRegister)}\r\n                                sx={{border: '1px solid #b9b9b9'}}>{getFullnameUser(account)?.charAt(0)}</Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText>\r\n                        <AddComment parentCallbackAddComment={handleCallbackAddComment}\r\n                                    loadingAddEntity={loadingAddEntity}/>\r\n                    </ListItemText>\r\n                </ListItem>\r\n            </List>\r\n            <div>{renderDialogDeleteComment()}</div>\r\n            <div>{renderDialogReportCommentOffer()}</div>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction AddComment({parentCallbackAddComment, loadingAddEntity}: { parentCallbackAddComment: any, loadingAddEntity: boolean }) {\r\n\r\n    const { t} = useTranslation();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddCommentOffer,\r\n        onSubmit: values => {\r\n            parentCallbackAddComment(values.content);\r\n            formik.setFieldValue('content', '');\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n                id=\"content\"\r\n                name=\"content\"\r\n                label={t<string>('comment_offer.label_add_comment')}\r\n                value={formik.values.content}\r\n                onChange={formik.handleChange}\r\n                multiline\r\n                fullWidth\r\n                maxRows={4}\r\n            />\r\n            <LoadingButton\r\n                loading={loadingAddEntity}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"submit\"\r\n                disabled={!formik.values.content}\r\n                sx={{my: 1}}\r\n                color=\"neutral\"\r\n            >\r\n                {t<string>('comment_offer.label_comment')}\r\n            </LoadingButton>\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction UpdateComment({parentCallbackUpdateComment, parentCallbackCancelUpdateComment, defaultValueUpdate, loadingUpdateEntity}:\r\n                           { parentCallbackUpdateComment: any, parentCallbackCancelUpdateComment: any, defaultValueUpdate: any, loadingUpdateEntity: boolean }) {\r\n\r\n    const [valueBeforCancelUpdate] = React.useState(defaultValueUpdate);\r\n\r\n    const { t} = useTranslation();\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaAddCommentOffer,\r\n        onSubmit: values => {\r\n            parentCallbackUpdateComment(values.content);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        formik.setFieldValue('content', defaultValueUpdate);\r\n    }, []);\r\n\r\n    const cancelUpdate = () => {\r\n        parentCallbackCancelUpdateComment(valueBeforCancelUpdate);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    id=\"content\"\r\n                    name=\"content\"\r\n                    label=\"Add comment\"\r\n                    value={formik.values.content}\r\n                    onChange={formik.handleChange}\r\n                    multiline\r\n                    fullWidth\r\n                    maxRows={4}\r\n                />\r\n                <Box sx={{my: 1}}>\r\n                    <LoadingButton\r\n                        loading={false}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"button\"\r\n                        sx={{mr: 1}}\r\n                        color=\"neutral\"\r\n                        onClick={cancelUpdate}\r\n                    >\r\n                        {t<string>('common.label_cancel')}\r\n                    </LoadingButton>\r\n                    <LoadingButton\r\n                        loading={loadingUpdateEntity}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"submit\"\r\n                        disabled={!formik.values.content}\r\n                        color=\"success\"\r\n                    >\r\n                        {t<string>('common.label_update')}\r\n                    </LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\n// import Lightbox from 'react-image-lightbox';\r\n// In your own app, you would need to use import styles once in the app\r\n// import 'react-image-lightbox/styles.css';\r\n// import './stylesheets/vendor/stylesheet.css';\r\n// import './stylesheets/vendor/github-light.css';\r\n// import './stylesheets/app.css';\r\n// import image1 from './images/1.jpg';\r\n// import image2 from './images/2.jpg';\r\n// import image3 from './images/3.jpg';\r\n// import image4 from './images/4.jpg';\r\n// import image1Thumb from './images/1_thumb.jpg';\r\n// import image2Thumb from './images/2_thumb.jpg';\r\n// import image3Thumb from './images/3_thumb.jpg';\r\n// import image4Thumb from './images/4_thumb.jpg';\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n//\r\n// const images = [image1, image2, image3, image4];\r\n// const thumbs = [image1Thumb, image2Thumb, image3Thumb, image4Thumb];\r\n\r\nconst images = ['//placekitten.com/1500/500', '//placekitten.com/4000/3000', '//placekitten.com/800/1200', '//placekitten.com/1500/1500'];\r\n// const thumbs = ['//placekitten.com/4000/3000', 'https://source.unsplash.com/random', 'https://source.unsplash.com/random', 'https://source.unsplash.com/random'];\r\n\r\n// const titles = [\r\n//     '',\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/titrans/\">\r\n//       quatre mains\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by/2.0/\"\r\n//         title=\"Attribution License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/lachlanrogers/\">\r\n//       latch.r\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by-sa/2.0/\"\r\n//         title=\"Attribution-ShareAlike License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n//     <span>\r\n//     by&nbsp;\r\n//         <a className=\"creditLink\" href=\"http://flickr.com/photos/fazen/\">\r\n//       fazen\r\n//     </a>\r\n//         &nbsp; (\r\n//     <a\r\n//         className=\"creditLink\"\r\n//         href=\"http://creativecommons.org/licenses/by/2.0/\"\r\n//         title=\"Attribution License\"\r\n//     >\r\n//       Some rights reserved\r\n//     </a>\r\n//     )\r\n//   </span>,\r\n// ];\r\n//\r\n// const captions = [\r\n//     'Cat in the snow',\r\n//     '',\r\n//     <p>\r\n//         .. not in the&nbsp;\r\n//         <em>mood</em>\r\n//         &nbsp;for games right now\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         ...\r\n//         <br />\r\n//         C&#39;mon. Seriously.\r\n//     </p>,\r\n//     '',\r\n// ];\r\n//\r\n// interface IImageLightBox {\r\n//     images: string[];\r\n//     thumbs: string[];\r\n//     titles: (string | JSX.Element)[];\r\n//     captions: (string | JSX.Element)[];\r\n// }\r\n\r\n// let listImagesLightBox: IImageLightBox = {\r\n//     images: [],\r\n//     thumbs: [],\r\n//     titles: [],\r\n//     captions: []\r\n// }\r\n\r\nclass ImageLightbox extends Component<any, any> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: 0,\r\n            isOpen: false,\r\n            listImagesLightBox : {\r\n                images: this.props.listImages,\r\n                thumbs: this.props.listImages,\r\n                titles: this.props.listTitles,\r\n                captions: []// this.props.listCaptions\r\n            }\r\n        };\r\n\r\n        this.openLightbox = this.openLightbox.bind(this);\r\n        this.closeLightbox = this.closeLightbox.bind(this);\r\n        this.moveNext = this.moveNext.bind(this);\r\n        this.movePrev = this.movePrev.bind(this);\r\n    }\r\n\r\n    static onImageLoadError(): void {\r\n        // console.error(`Could not load image at ${imageSrc}`, errorEvent); // eslint-disable-line no-console\r\n    }\r\n\r\n    openLightbox() {\r\n        this.setState({ isOpen: true });\r\n    }\r\n\r\n    closeLightbox() {\r\n        this.setState({ isOpen: false });\r\n        this.props.callbackClose();\r\n    }\r\n\r\n    moveNext() {\r\n        this.setState((prevState: any) => ({\r\n            index: (prevState.index + 1) % images.length,\r\n        }));\r\n    }\r\n\r\n    movePrev() {\r\n        this.setState((prevState: any) => ({\r\n            index: (prevState.index + images.length - 1) % images.length,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n\r\n        let lightbox;\r\n        if (this.props.openLightBox) {\r\n            lightbox = (\r\n                <Lightbox\r\n                    mainSrc={this.state.listImagesLightBox.images[this.state.index]}\r\n                    nextSrc={this.state.listImagesLightBox.images[(this.state.index + 1) % images.length]}\r\n                    prevSrc={\r\n                        this.state.listImagesLightBox.images[(this.state.index + images.length - 1) % images.length]\r\n                    }\r\n                    mainSrcThumbnail={this.state.listImagesLightBox.thumbs[this.state.index]}\r\n                    nextSrcThumbnail={this.state.listImagesLightBox.thumbs[(this.state.index + 1) % images.length]}\r\n                    prevSrcThumbnail={\r\n                        this.state.listImagesLightBox.thumbs[(this.state.index + images.length - 1) % images.length]\r\n                    }\r\n                    onCloseRequest={this.closeLightbox}\r\n                    onMovePrevRequest={this.movePrev}\r\n                    onMoveNextRequest={this.moveNext}\r\n                    onImageLoadError={ImageLightbox.onImageLoadError}\r\n                    imageTitle={this.state.listImagesLightBox.titles[this.state.index]}\r\n                    imageCaption={this.state.listImagesLightBox.captions[this.state.index]}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div  onContextMenu={(e) => e.preventDefault()}>\r\n                {lightbox}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageLightbox;","import * as React from 'react';\r\n\r\n// Import Swiper React components\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport Card from '@mui/material/Card/Card';\r\nimport {Autoplay, EffectFade, Lazy, Navigation, Thumbs, Zoom} from 'swiper';\r\nimport SwiperCore from 'swiper';\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-fade\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {IOffer} from \"../../../../../shared/model/offer.model\";\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../../../shared/utils/utils-functions\";\r\nimport ImageLightbox from '../../../../../shared/pages/image-lightbox';\r\nimport { IOfferImages } from '../../../../../shared/model/offer-images.model';\r\nimport {LazyImage} from \"react-lazy-images\";\r\nimport { AllAppConfig } from '../../../../../core/config/all-config';\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Autoplay, EffectFade, Lazy, Zoom, Navigation, Thumbs]);\r\n\r\nexport default function SwiperDetailsOffer(offerEntity: IOffer) {\r\n    const [thumbsSwiper, setThumbsSwiper] = React.useState<any | null>(null);// useState(null);\r\n    const [openLightBox, setOpenLightBox] = React.useState(false);\r\n\r\n    const closeLightBox = () => {\r\n        setOpenLightBox(false);\r\n    }\r\n\r\n    const getFullListImages = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => getImageForOffer(offerEntity.id, item.path));\r\n    }\r\n\r\n    const getFullListTitles = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => (offerEntity?.title || '').toString());\r\n    }\r\n\r\n    const getFullListCaptions = (): string[] | undefined => {\r\n        return offerEntity?.offerImages?.map(item => (offerEntity?.description || '').toString());\r\n    }\r\n\r\n    return offerEntity && offerEntity.offerImages && offerEntity.offerImages.length > 0 ? (\r\n\r\n        <Box>\r\n            <ImageLightbox openLightBox={openLightBox}\r\n                           callbackClose={closeLightBox}\r\n                           listImages={getFullListImages()}\r\n                           listTitles={getFullListTitles()}\r\n                           listCaptions={getFullListCaptions()}/>\r\n\r\n            <Card sx={{mb: 2}}>\r\n                <Swiper\r\n                    spaceBetween={10}\r\n                    navigation={offerEntity.offerImages.length>1 ? true : false}\r\n                    pagination={{clickable: true}}\r\n                    thumbs={{swiper: thumbsSwiper}}\r\n                    zoom={true}\r\n                    lazy={true}\r\n                    effect={'fade'}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 5000,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    className=\"mySwiper2\"\r\n                >\r\n                    {offerEntity.offerImages.map((offerImage: IOfferImages, index) => (\r\n                        <SwiperSlide key={offerImage.id}>\r\n                            <div className=\"swiper-zoom-container\">\r\n                                {/*<img src={getImageForOffer(offerEntity.id, offerImage.path)}*/}\r\n                                {/*     onClick={() => setOpenLightBox(true)} onContextMenu={(e) => e.preventDefault()}/>*/}\r\n\r\n                                <LazyImage\r\n                                    src={getImageForOffer(offerEntity.id, offerImage.path)}\r\n                                    alt=\"Image swiper\"\r\n                                    actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"full-img-responsive\" onClick={() => setOpenLightBox(true)} onContextMenu={(e) => e.preventDefault()}/>}\r\n                                    placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                    loading={() => (\r\n                                        <div>\r\n                                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                        </div>\r\n                                    )}\r\n                                    error={() => (\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n                <Swiper\r\n                    onSwiper={setThumbsSwiper}\r\n                    spaceBetween={10}\r\n                    slidesPerView={4}\r\n                    freeMode={true}\r\n                    watchSlidesProgress={true}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {offerEntity.offerImages.map((offerImage: IOfferImages, index) => (\r\n                        <SwiperSlide key={offerImage.id}>\r\n                            {/*<img src={getImageForOffer(offerEntity.id, offerImage.path)}/>*/}\r\n                            <LazyImage\r\n                                src={getImageForOffer(offerEntity.id, offerImage.path)}\r\n                                alt=\"Image swiper\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"full-img-responsive\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Card>\r\n        </Box>\r\n    ) : null;\r\n}\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {useParams} from \"react-router\";\r\nimport Zoom from \"@mui/material/Zoom/Zoom\";\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress/CircularProgress\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport Card from \"@mui/material/Card/Card\";\r\nimport CardContent from \"@mui/material/CardContent/CardContent\";\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddLocation from '@mui/icons-material/AddLocation';\r\nimport EmojiObjectsIcon from '@mui/icons-material/EmojiObjects';\r\nimport CardActions from \"@mui/material/CardActions/CardActions\";\r\nimport Button from \"@mui/material/Button/Button\";\r\nimport FlagIcon from '@mui/icons-material/Flag';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\n\r\nimport './details-offer.scss';\r\nimport Dialog from \"@mui/material/Dialog/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions/DialogActions\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary/AccordionSummary\";\r\nimport Accordion from \"@mui/material/Accordion/Accordion\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Tooltip from \"@mui/material/Tooltip/Tooltip\";\r\nimport Alert from '@mui/material/Alert';\r\nimport {allSessionSelector} from \"../../../user/store/slice\";\r\nimport {\r\n    entitiesCommentsOffer,\r\n    entityCommentsOffer,\r\n    entityPublicOffer,\r\n    fetchDetailsPublicOffer,\r\n    addCommentOffer,\r\n    loadingCommentsOffer,\r\n    loadingEntitiesCommentsOffer,\r\n    loadingPublicOffer,\r\n    totalItemsCommentsOffer,\r\n    addSuccessCommentsOffer,\r\n    deleteSuccessCommentsOffer,\r\n    fetchCommentsOffer, updateSuccessCommentsOffer, resetFetchCommentsOffer, updateCommentOffer, deleteCommentOffer, reportCommentOffer, reportOffers\r\n} from \"../../store/slice\";\r\nimport {TransitionModal} from \"../../../../shared/pages/transition-modal\";\r\nimport {IReportOffer} from \"../../../../shared/model/report-offer.model\";\r\nimport {ICart} from \"../../../../shared/model/cart.model\";\r\nimport {ALL_APP_ROUTES} from \"../../../../core/config/all-app-routes\";\r\nimport {TypeOfferEnum} from \"../../../../shared/enums/type-offer.enum\";\r\nimport {ConvertReactTimeAgo} from \"../../../../shared/pages/react-time-ago\";\r\nimport {OfferTypeContact} from \"../../../../shared/enums/offer-type-contact.enum\";\r\nimport CartSellDetailsOffer from \"./ui-segments/cart-sell-details-offer\";\r\nimport RightDetailsOffer from \"./ui-segments/right-details-offer\";\r\nimport {IConversationContent} from \"../../../../shared/model/conversation-content\";\r\nimport {convertDateTimeToServer} from \"../../../../shared/utils/utils-functions\";\r\nimport CommentDetailsOffer from './ui-segments/comment-details-offer';\r\nimport {addEventGA, AllModulesEventGA} from \"../../../../shared/providers/google-anaylitics\";\r\nimport {ICommentOffer} from \"../../../../shared/model/comment-offer.model\";\r\nimport {AllAppConfig} from \"../../../../core/config/all-config\";\r\nimport SwiperDetailsOffer from './ui-segments/swiper-details-offer';\r\nimport { addConversation } from '../../../chat/store/slice';\r\nimport { addCart } from '../../../cart/store/slice';\r\nimport CustomShare from '../../../../shared/components/custom-share/CustomShare';\r\nimport {addFavoriteUsers, addSuccessFavoriteUser} from '../../../favorite/store/slice';\r\n\r\n\r\nexport default function DetailsOfffer () {\r\n\r\n    const [startAnimation, setStartAnimation] = React.useState(false);\r\n    const [isFavoriteUser, setIsFavoriteUser] = React.useState(false);\r\n    const [openReportOfferModal, setOpenReportOfferModal] = React.useState(false);\r\n    const [activeCommentPage, setActiveCommentPage] = React.useState(-1);\r\n    const [expandedDetailsOffer, setExpandedDetailsOffer] = React.useState<boolean>(true);\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n    const [listCommentsForOffer, setListCommentsForOffer] = React.useState<any[]>([]);\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n\r\n    const {isAuthenticated, currentUser} = useSelector(allSessionSelector);\r\n\r\n    const loadingPublicOfferSelector = useSelector(loadingPublicOffer) ?? false;\r\n    const entityPublicOfferSelector = useSelector(entityPublicOffer) ?? {};\r\n\r\n    const loadingCommentsOfferSelector = useSelector(loadingCommentsOffer) ?? false;\r\n    const entityCommentsOfferSelector = useSelector(entityCommentsOffer) ?? {};\r\n    const loadingEntitiesCommentsOfferSelector = useSelector(loadingEntitiesCommentsOffer) ?? {};\r\n    const entitiesCommentsOfferSelector = useSelector(entitiesCommentsOffer) ?? [];\r\n    const totalItemsCommentsOfferSelector = useSelector(totalItemsCommentsOffer) ?? [];\r\n    const addSuccessCommentsOfferSelector = useSelector(addSuccessCommentsOffer) ?? [];\r\n    const updateSuccessCommentsOfferSelector = useSelector(updateSuccessCommentsOffer) ?? [];\r\n    const deleteSuccessCommentsOfferSelector = useSelector(deleteSuccessCommentsOffer) ?? [];\r\n\r\n    const addSuccessFavoriteUserSelector = useSelector(addSuccessFavoriteUser) ?? false;\r\n\r\n    React.useEffect(() => {\r\n        if( entitiesCommentsOfferSelector.length ){\r\n            setListCommentsForOffer([...listCommentsForOffer, ...entitiesCommentsOfferSelector]);\r\n        }\r\n    }, [entitiesCommentsOfferSelector])\r\n\r\n    React.useEffect(() => {\r\n        if(id){\r\n            dispatch(fetchDetailsPublicOffer({id}));\r\n            setActiveCommentPage(0);\r\n        }\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        if(activeCommentPage>=0){\r\n            if(isAuthenticated){\r\n                dispatch(fetchCommentsOffer({\r\n                    offerId: Number(id),\r\n                    page: activeCommentPage,\r\n                    size: AllAppConfig.COMMENTS_PER_PAGE,\r\n                    queryParams: ''\r\n                }))\r\n            }\r\n        }\r\n    }, [activeCommentPage])\r\n\r\n    React.useEffect(() => {\r\n        if (entityPublicOfferSelector && entityPublicOfferSelector.offer && !loadingPublicOfferSelector) {\r\n            setIsFavoriteUser(entityPublicOfferSelector.myFavoriteUser || false);\r\n            setTimeout(() => {\r\n                setStartAnimation(true);\r\n            }, 300)\r\n        }\r\n    }, [entityPublicOfferSelector]);\r\n\r\n    React.useEffect(() => {\r\n        if(addSuccessCommentsOfferSelector || updateSuccessCommentsOfferSelector || deleteSuccessCommentsOfferSelector){\r\n            setListCommentsForOffer([]);\r\n            dispatch(resetFetchCommentsOffer({}));\r\n            dispatch(fetchCommentsOffer({\r\n                offerId: Number(id),\r\n                page: 0,\r\n                size: AllAppConfig.COMMENTS_PER_PAGE,\r\n                queryParams: ''\r\n            }))\r\n        }\r\n    }, [addSuccessCommentsOfferSelector, updateSuccessCommentsOfferSelector, deleteSuccessCommentsOfferSelector])\r\n\r\n    const reportOffer = () => {\r\n        setOpenReportOfferModal(true);\r\n    }\r\n    const handleCloseReportOfferModal = () => {\r\n        setOpenReportOfferModal(false);\r\n    }\r\n\r\n    const handleAddReportOfferModal = () => {\r\n        setOpenReportOfferModal(false);\r\n        const entity: IReportOffer = {\r\n            offer: entityPublicOfferSelector?.offer,\r\n            user: {}\r\n        }\r\n        dispatch(reportOffers({...entity}))\r\n        // props.createEntityReportOffer(entity);\r\n    }\r\n\r\n    const renderDialogReportOffer = () => {\r\n        return (\r\n            <Dialog\r\n                open={openReportOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseReportOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\" >\r\n                <DialogTitle>\r\n                    {t<string>('details_offer.title_dialog_report_offer')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {t<string>('details_offer.description_dialog_report_offer')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseReportOfferModal} color=\"neutral\">\r\n                        {t<string>('common.label_cancel')}\r\n                    </Button>\r\n                    <Button color=\"success\" onClick={handleAddReportOfferModal}>\r\n                        {t<string>('common.label_report')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    const handleChangeDetailsOffer = () => {\r\n        setExpandedDetailsOffer(!expandedDetailsOffer);\r\n    }\r\n\r\n    const getNameCategory = (): string => {\r\n        if( defaultLanguage==='en' ){\r\n            return entityPublicOfferSelector?.offer?.category?.titleEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return entityPublicOfferSelector?.offer?.category?.titleFr || '';\r\n        }\r\n        return entityPublicOfferSelector?.offer?.category?.titleAr || '';\r\n    }\r\n\r\n    const isOnLine = (email: string) => {\r\n        // return props.listConnectedUsers.findIndex(item => item.principal.email==email) >=0;\r\n    }\r\n\r\n    const addNewCart = (cart: ICart) => {\r\n        if( isAuthenticated){\r\n            const entity: ICart = {\r\n                quantity: cart.quantity,\r\n                sellOffer: {\r\n                    id: entityPublicOfferSelector?.offer?.id\r\n                }\r\n            }\r\n            console.log('entity ', entity);\r\n            dispatch(addCart({...entity}));\r\n            // props.addCart(entity);\r\n        }\r\n\r\n    }\r\n\r\n    const handleCallbackFavorite = (userId: number) => {\r\n        if (isAuthenticated) {\r\n            if (entityPublicOfferSelector?.offer?.user?.id !== currentUser?.id) {\r\n                const entity = {\r\n                    favoriteUser: {\r\n                        id: entityPublicOfferSelector?.offer?.user?.id,\r\n                        username: entityPublicOfferSelector?.offer?.user?.username,\r\n                    },\r\n                    favoriteDate: convertDateTimeToServer(new Date()),\r\n                };\r\n                dispatch(addFavoriteUsers({...entity}))\r\n                // createEntityFavoriteUser(entity);\r\n            }\r\n        } else {\r\n            navigate(ALL_APP_ROUTES.LOGIN);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(addSuccessFavoriteUserSelector){\r\n            setIsFavoriteUser(true);\r\n        }\r\n    }, [addSuccessFavoriteUserSelector])\r\n\r\n    const createConversation = (conversation: IConversationContent) => {\r\n        dispatch(addConversation({...conversation}));\r\n    }\r\n\r\n    const parentCallbackLoadMoreComments = () => {\r\n        setActiveCommentPage(activeCommentPage+1);\r\n    }\r\n\r\n    const handleCallbackAddComment = (content: string) => {\r\n        if (content) {\r\n            const entity: ICommentOffer = {\r\n                createdDate: convertDateTimeToServer(new Date()),\r\n                content: content,\r\n                offer: {\r\n                    id: entityPublicOfferSelector?.offer?.id,\r\n                    user: {\r\n                        id: entityPublicOfferSelector?.offer?.user?.id,\r\n                        email: entityPublicOfferSelector?.offer?.user?.email,\r\n                    },\r\n                },\r\n                user: {},\r\n            };\r\n            dispatch(addCommentOffer({...entity}))\r\n\r\n            // Add event GA\r\n            addEventGA(AllModulesEventGA.EventOffer.AddCommentOffer.eventName,\r\n                AllModulesEventGA.EventOffer.AddCommentOffer.eventCategory,\r\n                AllModulesEventGA.EventOffer.AddCommentOffer.eventLabel);\r\n        }\r\n    }\r\n\r\n    const handleCallbackDeleteComment = (commentId: number) => {\r\n        console.log('commentId ', commentId);\r\n        dispatch(deleteCommentOffer({id: commentId}))\r\n    }\r\n\r\n    const parentCallbackReportComment = (comment: ICommentOffer) => {\r\n        const entity = {\r\n            commentOffer: comment,\r\n            user: {}\r\n        }\r\n        dispatch(reportCommentOffer({...entity}))\r\n    }\r\n\r\n    const parentCallbackUpdateComment = (content: string, commentid: number) => {\r\n        let commentUpdate = entitiesCommentsOfferSelector.find((comment: ICommentOffer) => comment.id === commentid);\r\n        commentUpdate = {\r\n            ...commentUpdate,\r\n            content: content\r\n        }\r\n        dispatch(updateCommentOffer({...commentUpdate}))\r\n        // updateComment(commentUpdate);\r\n\r\n        // Add event GA\r\n        addEventGA(AllModulesEventGA.EventOffer.UpdateCommentOffer.eventName,\r\n            AllModulesEventGA.EventOffer.UpdateCommentOffer.eventCategory,\r\n            AllModulesEventGA.EventOffer.UpdateCommentOffer.eventLabel);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n\r\n            {\r\n                loadingPublicOfferSelector ?\r\n                    <Box sx={{ paddingTop: 10, textAlign: 'center' }}>\r\n                        <CircularProgress color=\"inherit\"  />\r\n                    </Box> : null\r\n            }\r\n\r\n            <Container maxWidth=\"xl\" className=\"details-offer-client\">\r\n                <Grid\r\n                    container\r\n                    style={{\r\n                        paddingTop: 10,\r\n                    }} >\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                                SRF\r\n                            </Link>\r\n                            <Link color=\"inherit\" to={ALL_APP_ROUTES.SEARCH}>\r\n                                {t<string>('common.label_search')}\r\n                            </Link>\r\n                            <Typography color=\"text.primary\">{entityPublicOfferSelector?.offer?.title}</Typography>\r\n                        </Breadcrumbs>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {\r\n                    loadingPublicOfferSelector ?\r\n                        null :\r\n                        <Grid\r\n                            container\r\n                            style={{\r\n                                paddingTop: 50,\r\n                            }}\r\n                        >\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SwiperDetailsOffer {...entityPublicOfferSelector?.offer} />\r\n                                <Zoom in={startAnimation}>\r\n                                    <Card sx={{mb: 3}}>\r\n                                        <CardContent>\r\n                                            {entityPublicOfferSelector?.offer?.amount ? (\r\n                                                <Typography variant=\"h4\" sx={{ textAlign: 'center', fontWeight: 600 }}  className=\"red-color\">\r\n                                                    $ {entityPublicOfferSelector?.offer?.amount} DT\r\n                                                </Typography>\r\n                                            ) : null}\r\n\r\n                                            <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                                                <InfoOutlinedIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                {entityPublicOfferSelector?.offer?.typeOffer === TypeOfferEnum.Sell ? (\r\n                                                    t<string>('common.for_sell')\r\n                                                ) : entityPublicOfferSelector?.offer?.typeOffer === TypeOfferEnum.Rent ? (\r\n                                                    t<string>('common.for_rent')\r\n                                                ) : entityPublicOfferSelector?.offer?.typeOffer === TypeOfferEnum.Find ? (\r\n                                                    t<string>('common.for_find')\r\n                                                ) : null}\r\n                                            </Typography>\r\n\r\n                                            {entityPublicOfferSelector?.offer?.startDate && entityPublicOfferSelector?.offer?.endDate ? (\r\n                                                <Box>\r\n                                                    <Typography color=\"text.secondary\" gutterBottom>\r\n                                                        {t<string>('common.label_start_date')}:&nbsp;<strong><ConvertReactTimeAgo convertDate={entityPublicOfferSelector?.offer?.startDate} /></strong>\r\n                                                    </Typography>\r\n                                                    <Typography color=\"text.secondary\" gutterBottom display=\"flex\">\r\n                                                        {t<string>('common.label_end_date')}:&nbsp;<strong><ConvertReactTimeAgo convertDate={entityPublicOfferSelector?.offer?.endDate} /></strong>\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                            ) : null}\r\n\r\n                                            {\r\n                                                entityPublicOfferSelector?.offer?.typePeriodRent ? <Typography color=\"text.secondary\" gutterBottom display=\"flex\">\r\n                                                    {t<string>('common.label_period')}:&nbsp;\r\n                                                    <strong>{t<string>('common.type_periode_rent_'+entityPublicOfferSelector?.offer?.typePeriodRent)}&nbsp;</strong>\r\n                                                </Typography> : null\r\n                                            }\r\n\r\n\r\n                                            <Typography variant=\"h5\" component=\"div\" sx={{ mt: 2 }}>\r\n                                                {entityPublicOfferSelector?.offer?.title}\r\n                                            </Typography>\r\n\r\n                                            <Typography sx={{ fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                <AccessTimeIcon fontSize=\"small\" sx={{mr: 0.9}}/> <ConvertReactTimeAgo convertDate={entityPublicOfferSelector?.offer?.dateCreated} />\r\n                                            </Typography>\r\n                                            {\r\n                                                entityPublicOfferSelector?.offer?.address ?\r\n                                                    <Typography sx={{ mb: 1.8, fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                        <AddLocation fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                        {entityPublicOfferSelector?.offer?.address?.city}, {entityPublicOfferSelector?.offer?.address?.country}\r\n                                                    </Typography> : null\r\n                                            }\r\n\r\n                                            {\r\n                                                entityPublicOfferSelector?.offer?.category ?\r\n                                                    <Typography sx={{ mb: 1.8, fontSize: '0.8rem', mt: 1 }} color=\"text.secondary\" display=\"flex\">\r\n                                                        <EmojiObjectsIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                                                        {t<string>('details_offer.label_category')} {getNameCategory()}\r\n                                                    </Typography> : null\r\n                                            }\r\n\r\n                                            <Accordion sx={{mt: '40px !important'}} elevation={0} expanded={expandedDetailsOffer} onChange={handleChangeDetailsOffer}>\r\n                                                <AccordionSummary\r\n                                                    expandIcon={<ExpandMoreIcon sx={{backgroundColor: 'yellow', borderRadius: '50%'}}/>}\r\n                                                    aria-controls=\"panel1a-content\"\r\n                                                    id=\"panel1a-header\"\r\n                                                    className=\"bg-brown\">\r\n                                                    {t<string>('details_offer.label_details_offer')}\r\n                                                </AccordionSummary>\r\n                                                <AccordionDetails>\r\n                                                    <div dangerouslySetInnerHTML={{ __html: entityPublicOfferSelector?.offer?.description || '' }}></div>\r\n                                                </AccordionDetails>\r\n                                            </Accordion>\r\n\r\n                                        </CardContent>\r\n                                        <CardActions disableSpacing>\r\n\r\n                                            <CustomShare url=\"https://github.com/nygardk/react-share/blob/master/demo/Demo.tsx\">\r\n                                                <Tooltip title={\r\n                                                    <React.Fragment>\r\n                                                        {t<string>('common.label_share')}\r\n                                                    </React.Fragment>\r\n                                                }>\r\n                                                    <ShareIcon/>\r\n                                                </Tooltip>\r\n                                            </CustomShare>\r\n\r\n                                            <IconButton sx={{marginLeft: 'auto'}} onClick={reportOffer}>\r\n                                                <Tooltip title={\r\n                                                    <React.Fragment>\r\n                                                        {t<string>('common.label_report')}\r\n                                                    </React.Fragment>\r\n                                                }>\r\n                                                    <FlagIcon/>\r\n                                                </Tooltip>\r\n                                            </IconButton>\r\n\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </Zoom>\r\n\r\n                                {isAuthenticated ? (\r\n                                    <Box sx={{mb: 3}}>\r\n                                        <CommentDetailsOffer\r\n                                            offerEntity={entityPublicOfferSelector?.offer}\r\n                                            listCommentsByOffer={listCommentsForOffer}\r\n                                            account={currentUser}\r\n                                            isAuthenticated={isAuthenticated}\r\n                                            loadingListComments={loadingEntitiesCommentsOfferSelector}\r\n                                            loadingUpdateEntity={loadingCommentsOfferSelector}\r\n                                            loadingAddEntity={loadingCommentsOfferSelector}\r\n                                            parentCallbackAddComment={handleCallbackAddComment}\r\n                                            parentCallbackDeleteComment={handleCallbackDeleteComment}\r\n                                            parentCallbackUpdateComment={parentCallbackUpdateComment}\r\n                                            parentCallbackReportComment={parentCallbackReportComment}\r\n                                            parentCallbackLoadMoreComments={parentCallbackLoadMoreComments}\r\n                                            totalItems={totalItemsCommentsOfferSelector}\r\n                                        />\r\n                                    </Box>\r\n                                ) : null}\r\n\r\n                                {\r\n                                    entityPublicOfferSelector?.offer?.typeContactClient !== OfferTypeContact.direct && entityPublicOfferSelector.offer?.typeOffer=== TypeOfferEnum.Sell?\r\n                                        <CartSellDetailsOffer parentCallbackAddCart={addNewCart}\r\n                                                              loadingAddCart={false}/> : null\r\n                                }\r\n\r\n                                {\r\n                                    entityPublicOfferSelector?.offer?.typeContactClient === OfferTypeContact.direct && entityPublicOfferSelector.offer?.typeOffer=== TypeOfferEnum.Sell?\r\n                                        <Alert severity=\"warning\">{t<string>('details_offer.offer_contact_direct')}</Alert> : null\r\n                                }\r\n\r\n                            </Grid>\r\n\r\n                            <Grid container item xs={12} sm={6} sx={{ pl: { xs: 0, sm: 4 } }} spacing={2}>\r\n                                <RightDetailsOffer\r\n                                    parentCallback={handleCallbackFavorite}\r\n                                    offerEntity={entityPublicOfferSelector?.offer}\r\n                                    currentUser={currentUser}\r\n                                    isAuthenticated={isAuthenticated}\r\n                                    myFavoriteUser={isFavoriteUser}\r\n                                    createConversationCallback={createConversation}\r\n                                    addSuccessConversation={false}\r\n                                    isOnLine={isOnLine}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                }\r\n\r\n            </Container>\r\n            {/*</Zoom>*/}\r\n            {renderDialogReportOffer()}\r\n        </Box>\r\n    );\r\n}\r\n","import * as Yup from 'yup';\r\n\r\nexport const initialValuesAddCommentOffer = {\r\n    content: '',\r\n};\r\n\r\nexport const validationSchemaAddCommentOffer = Yup.object({\r\n    content: Yup.string().required('Type Offer is required'),\r\n});\r\n\r\n\r\nexport const initialValuesAddMessageDetailsOffer = {\r\n    fullName: '',\r\n    email: '',\r\n    content: '',\r\n};\r\n\r\nexport const validationSchemaAddMessageDetailsOffer = Yup.object({\r\n    fullName: Yup.string().required('Message is required'),\r\n    email: Yup.string().email().required('email_is_required'),\r\n    content: Yup.string().required('Message is required'),\r\n});\r\n\r\nexport const initialValuesQuantityOffer = {\r\n    quantity: 1\r\n}\r\n\r\nexport const validationSchemaQuantityOffer = Yup.object({\r\n    quantity: Yup.number().required('Quantity is required'),\r\n});","import Typography from \"@mui/material/Typography/Typography\";\r\nimport ShortcutIcon from \"@mui/icons-material/Shortcut\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Box from \"@mui/material/Box\";\r\nimport * as React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport { initialValuesQuantityOffer, validationSchemaQuantityOffer } from \"../../../main-features/offer/components/details-offer/validation/initial-values-add-comment-offer\";\r\n\r\nconst initialValues = initialValuesQuantityOffer;\r\n\r\nexport function InputQuantity({parentCallChangeQuantity, defaultValue}: {parentCallChangeQuantity: Function, defaultValue?:number | null | undefined}) {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaQuantityOffer,\r\n        onSubmit: values => {\r\n            // parentCallbackAddCart(values)\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(defaultValue){\r\n            formik.setFieldValue('quantity', defaultValue);\r\n        }\r\n    }, [defaultValue])\r\n\r\n    const changeQuantity = (event: any, type: string) => {\r\n        event.stopPropagation();\r\n        if(type==='+' && formik.values.quantity < 100){\r\n            formik.setFieldValue('quantity', formik.values.quantity+1);\r\n            parentCallChangeQuantity(formik.values.quantity+1);\r\n        }\r\n        else if( formik.values.quantity > 1 ){\r\n            formik.setFieldValue('quantity', formik.values.quantity-1);\r\n            parentCallChangeQuantity(formik.values.quantity-1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" display=\"flex\">\r\n                <ShortcutIcon fontSize=\"small\" sx={{mr: 0.9}}/>\r\n                Quantité\r\n            </Typography>\r\n            <Paper\r\n                sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 150 }} >\r\n                <IconButton sx={{ p: '10px' }} aria-label=\"menu\"  onClick={(event: any) => changeQuantity(event, '-')}>\r\n                    <RemoveIcon />\r\n                </IconButton>\r\n                <InputBase\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    placeholder=\"1\"\r\n                    inputProps={{ 'aria-label': '1' }}\r\n                    type=\"number\"\r\n                    value={formik.values.quantity}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <IconButton sx={{ p: '10px' }} aria-label=\"directions\" onClick={(event: any) =>  changeQuantity(event, '+')}>\r\n                    <AddIcon />\r\n                </IconButton>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}\r\n","export enum OfferTypeContact {\r\n    direct = 'ContactDirect',\r\n    perCommmande = 'PerCommande'\r\n}","export enum TypeOfferEnum {\r\n  Sell = 'SellOffer',\r\n  Rent = 'RentOffer',\r\n  Find = 'FindOffer',\r\n}\r\n\r\nexport enum PeriodeRent {\r\n  PerYear = 'PerYear',\r\n  PerMonth = 'PerMonth',\r\n  PerDay = 'PerDay',\r\n}\r\n\r\nexport enum TypesFindOffer{\r\n    Carpooling = 'Carpooling',\r\n    Travels = 'Travels',\r\n    Transporter = 'Transporter',\r\n    Job = 'Job'\r\n}\r\n\r\nexport enum TypeDisplaySearchOffers {\r\n    List = 'LIST',\r\n    Grid = 'GRID'\r\n}","import * as React from 'react';\r\nimport ReactTimeAgo from 'react-time-ago';\r\n\r\nexport const ConvertReactTimeAgo = (date: any, locale?: any) => {\r\n  if (date && date.convertDate) {\r\n    return <ReactTimeAgo date={new Date(date.convertDate)} locale='fr-FR' />;\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","import { styled } from '@mui/material/styles';\r\nimport Badge from '@mui/material/Badge';\r\n\r\nexport const StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        backgroundColor: theme.palette.success,\r\n        color: theme.palette.success,\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: 'ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}));","import React from \"react\";\r\nimport {TransitionProps} from \"@mui/material/transitions\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\n\r\n\r\nexport const TransitionModal = React.forwardRef(function Transition(\r\n    props: TransitionProps & {\r\n        children: React.ReactElement<any, any>;\r\n    },\r\n    ref: React.Ref<unknown>\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});"],"names":["CartSellDetailsOffer","parentCallbackAddCart","loadingAddCart","React","value","setValue","valueQuantity","setValueQuantity","t","useTranslation","Box","sx","width","typography","my","TabContext","TabPanel","Grid","container","item","xs","md","Typography","variant","color","display","InfoOutlined","fontSize","mr","InputQuantity","parentCallChangeQuantity","data","console","log","List","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","getBaseImageUrl","ListItemText","primary","secondary","Divider","component","justifyContent","LoadingButton","loading","fullWidth","onClick","quantity","borderBottom","borderColor","TabList","onChange","event","newValue","centered","Tab","label","CustomShare","props","state","shareData","title","text","url","handleShare","bind","navigator","share","this","then","result","checkMobileDesktopBrowser","SourceProvider","IconButton","children","quote","validationSchemaAddMessage","Yup","content","required","min","max","initialValues","ProblemeDeclaration","dispatch","useDispatch","isAuthenticated","useSelector","allSessionSelector","loadingProblemeDeclarationSelector","loadingProblemeDeclaration","addSuccessProblemeDeclarationSelector","addSuccessProblemeDeclaration","formik","useFormik","validationSchema","onSubmit","values","addProblemeDecalration","resetForm","handleSubmit","Card","CardContent","TextField","id","name","multiline","handleChange","error","touched","Boolean","errors","rows","className","size","mt","type","initialValuesAddMessageDetailsOffer","RightDetailsOffer","offerEntity","parentCallback","currentUser","myFavoriteUser","createConversationCallback","addSuccessConversation","isOnLine","setDefaultValues","messageAlert","setMessageAlert","openAlert","setOpenAlert","contactWithPhone","setContactWithPhone","navigate","useNavigate","validationSchemaAddMessageDetailsOffer","user","sendMessage","setResetValues","setFieldValue","getFullnameUser","email","isEmpty","entity","conversation","dateCreated","convertDateTimeToServer","Date","senderUser","receiverUser","openFavoriteModal","setOpenFavoriteModal","handleClickOpenFavoriteModal","stopPropagation","handleCloseFavoriteModal","handleAddFavoriteModal","redirectToPorfile","userId","setTimeout","ALL_APP_ROUTES","getFavoriteUserColor","sm","paragraph","m","ListItemButton","CardHeader","avatar","overlap","anchorOrigin","vertical","horizontal","imageUrl","getUserAvatar","sourceRegister","border","charAt","action","disabled","Favorite","subheader","role","address","city","country","CardActions","disableSpacing","backgroundColor","Share","marginLeft","ExpandMore","AccountCircle","fullName","Button","mb","p","borderLeft","startIcon","Facebook","linkProfileFacebook","window","open","contactWithFacebookcontactWithFacebook","Phone","phone","href","style","textDecoration","spacing","gutterBottom","maxHeight","marginTop","lng","Dialog","TransitionComponent","TransitionModal","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Snackbar","autoHideDuration","message","defaultValue","useState","setIsOverflowing","expanded","setExpanded","containerRef","useRef","useEffect","el","current","scrollHeight","clientHeight","lines","toggleExpand","readMoreText","readLessText","onAction","_html","replace","formatText","ref","substring","AllAppConfig","length","initialValuesAddCommentOffer","CommentDetailsOffer","listCommentsByOffer","account","loadingListComments","loadingUpdateEntity","loadingAddEntity","parentCallbackAddComment","parentCallbackDeleteComment","parentCallbackUpdateComment","parentCallbackReportComment","parentCallbackLoadMoreComments","totalItems","commentDeleteId","setCommentDeleteId","commentUpdateId","setCommentUpdateId","showComments","setShowComments","openReportCommentOfferModal","setOpenReportCommentOfferModal","commentReport","setCommentReport","handleCallbackUpdateComment","commentId","openDeleteCommentModal","setDeleteCommentModal","handleClickCancelDeleteCommentModal","handleClickDeleteDeleteCommentModal","parentCallbackCancelUpdateComment","handleCloseReportCommentOfferModal","handleAddReportCommentOfferModal","bgcolor","button","map","comment","index","secondaryAction","edge","ModeEdit","cmtId","Delete","reportCommentOffer","Flag","convertDate","createdDate","ml","UpdateComment","defaultValueUpdate","CircularProgress","textAlign","AddComment","validationSchemaAddCommentOffer","maxRows","valueBeforCancelUpdate","images","ImageLightbox","isOpen","listImagesLightBox","listImages","thumbs","titles","listTitles","captions","openLightbox","closeLightbox","moveNext","movePrev","setState","callbackClose","prevState","lightbox","openLightBox","mainSrc","nextSrc","prevSrc","mainSrcThumbnail","nextSrcThumbnail","prevSrcThumbnail","onCloseRequest","onMovePrevRequest","onMoveNextRequest","onImageLoadError","imageTitle","imageCaption","onContextMenu","e","preventDefault","Component","SwiperDetailsOffer","thumbsSwiper","setThumbsSwiper","setOpenLightBox","offerImages","getImageForOffer","path","getFullListImages","toString","getFullListTitles","listCaptions","description","getFullListCaptions","spaceBetween","navigation","pagination","clickable","swiper","zoom","lazy","effect","loop","autoplay","delay","disableOnInteraction","offerImage","actual","imageProps","placeholder","onSwiper","slidesPerView","freeMode","watchSlidesProgress","SwiperCore","Autoplay","EffectFade","Lazy","Zoom","Navigation","Thumbs","DetailsOfffer","startAnimation","setStartAnimation","isFavoriteUser","setIsFavoriteUser","openReportOfferModal","setOpenReportOfferModal","activeCommentPage","setActiveCommentPage","expandedDetailsOffer","setExpandedDetailsOffer","defaultLanguage","listCommentsForOffer","setListCommentsForOffer","useParams","loadingPublicOfferSelector","loadingPublicOffer","entityPublicOfferSelector","entityPublicOffer","loadingCommentsOfferSelector","loadingCommentsOffer","loadingEntitiesCommentsOfferSelector","entityCommentsOffer","loadingEntitiesCommentsOffer","entitiesCommentsOfferSelector","entitiesCommentsOffer","totalItemsCommentsOfferSelector","totalItemsCommentsOffer","addSuccessCommentsOfferSelector","addSuccessCommentsOffer","updateSuccessCommentsOfferSelector","updateSuccessCommentsOffer","deleteSuccessCommentsOfferSelector","deleteSuccessCommentsOffer","addSuccessFavoriteUserSelector","addSuccessFavoriteUser","fetchDetailsPublicOffer","fetchCommentsOffer","offerId","Number","page","queryParams","offer","resetFetchCommentsOffer","handleCloseReportOfferModal","handleAddReportOfferModal","reportOffers","paddingTop","Container","maxWidth","Breadcrumbs","to","Z","in","amount","fontWeight","typeOffer","TypeOfferEnum","startDate","endDate","typePeriodRent","AccessTime","AddLocation","category","EmojiObjects","titleEn","titleFr","titleAr","getNameCategory","Accordion","elevation","AccordionSummary","expandIcon","borderRadius","AccordionDetails","dangerouslySetInnerHTML","__html","Tooltip","addCommentOffer","addEventGA","AllModulesEventGA","deleteCommentOffer","commentid","commentUpdate","find","updateCommentOffer","commentOffer","typeContactClient","OfferTypeContact","cart","sellOffer","addCart","Alert","severity","pl","favoriteUser","username","favoriteDate","addFavoriteUsers","addConversation","initialValuesQuantityOffer","validationSchemaQuantityOffer","changeQuantity","flex","inputProps","PeriodeRent","TypesFindOffer","TypeDisplaySearchOffers","ConvertReactTimeAgo","date","locale","StyledBadge","styled","Badge","theme","palette","success","boxShadow","background","paper","position","top","left","height","animation","transform","opacity","direction"],"sourceRoot":""}