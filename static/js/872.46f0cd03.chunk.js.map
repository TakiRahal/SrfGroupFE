{"version":3,"file":"static/js/872.46f0cd03.chunk.js","mappings":"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","sources":["main-features/register/validation/validation-signup.ts","main-features/register/SignUp.tsx","shared/pages/transition-modal.tsx","../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js"],"sourcesContent":["import * as Yup from 'yup';\r\n\r\nexport const initialValuesSignUp = {\r\n  email: '',\r\n  firstPassword: '',\r\n  secondPassword: '',\r\n  accept: false,\r\n};\r\n\r\nexport const validationSchemaSignUp = Yup.object({\r\n  email: Yup.string().email().required('Email is required'),\r\n  firstPassword: Yup.string().required('Password is required').min(5, 'Min 5 digits').max(200, 'Max 200 digits'),\r\n  secondPassword: Yup.string()\r\n    .required('Password is required')\r\n    .oneOf([Yup.ref('firstPassword'), null], 'Passwords must match')\r\n    .min(5, 'Muin 5 digits')\r\n    .max(200, 'Max 5 digits'),\r\n  accept: Yup.bool().oneOf([true], 'Field must be checked'),\r\n});\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport FormControl from '@mui/material/FormControl/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport FormHelperText from '@mui/material/FormHelperText/FormHelperText';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs/Breadcrumbs';\r\nimport Slide from '@mui/material/Slide';\r\nimport {ALL_APP_ROUTES} from \"../../core/config/all-app-routes\";\r\nimport {initialValuesSignUp, validationSchemaSignUp} from \"./validation/validation-signup\";\r\nimport {connect} from \"react-redux/\";\r\nimport {handleRegister, resetRegister} from \"../../shared/reducers/user-reducer\";\r\nimport {IRootState} from \"../../shared/reducers\";\r\nimport Dialog from \"@mui/material/Dialog/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions/DialogActions\";\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport {TransitionModal} from \"../../shared/pages/transition-modal\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {checkMobileDesktopBrowser} from \"../../shared/utils/utils-functions\";\r\n\r\nconst initialValues = initialValuesSignUp;\r\n\r\ninterface ISignUP {\r\n    accept: boolean;\r\n    email: string;\r\n    firstPassword: string;\r\n    secondPassword: string;\r\n}\r\n\r\nexport interface ISignUpProps extends StateProps, DispatchProps {}\r\n\r\nexport const SignUp = (props: ISignUpProps) => {\r\n    const [startAnimation, setStartAnimation] = React.useState(false);\r\n    const [showPassword, setShowPassword] = React.useState({\r\n        showPassword: false,\r\n    });\r\n    const [showConfPassword, setShowConfPassword] = React.useState({\r\n        showPassword: false,\r\n    });\r\n    const [openDialogRegister, setOpenDialogRegister] = React.useState(false);\r\n\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n\r\n    React.useEffect(() => {\r\n        setStartAnimation(true);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        console.log('props.oneSignalId ', props.oneSignalId);\r\n    }, [props.oneSignalId])\r\n\r\n    const { registrationSuccess } = props;\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemaSignUp,\r\n        onSubmit: (values: ISignUP) => {\r\n            props.handleRegister(values.email, values.firstPassword, checkMobileDesktopBrowser(), props.oneSignalId, props.currentLocale);\r\n        },\r\n    });\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword({\r\n            showPassword: !showPassword.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleClickShowConfPassword = () => {\r\n        setShowConfPassword({\r\n            showPassword: !showConfPassword.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: any) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(registrationSuccess){\r\n            setOpenDialogRegister(true);\r\n        }\r\n    }, [registrationSuccess]);\r\n\r\n    const handleClose = () => {\r\n        setOpenDialogRegister(false);\r\n        props.resetRegister();\r\n        formik.resetForm();\r\n        navigate(ALL_APP_ROUTES.LOGIN);\r\n    }\r\n\r\n    const shwDialogRegister = () => {\r\n        return (\r\n            <Dialog\r\n                open={openDialogRegister}\r\n                TransitionComponent={TransitionModal}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {t('signup.title-dialog-register')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {t('signup.inbox-dialog-register')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} autoFocus color=\"success\">\r\n                        {t('signup.label-activation-dialog-register')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Slide direction=\"up\" in={startAnimation} mountOnEnter unmountOnExit>\r\n            <Container maxWidth=\"xl\">\r\n                <Grid\r\n                    container\r\n                    style={{\r\n                        paddingTop: 10,\r\n                    }}\r\n                >\r\n                    <Grid item sm={3}></Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                                SRF\r\n                            </Link>\r\n                            <Typography color=\"text.primary\">\r\n                                {t('signup.title-page-register')}\r\n                            </Typography>\r\n                        </Breadcrumbs>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container sx={{pt: 5, pb: 5}}>\r\n                    <Grid item xs={3}></Grid>\r\n\r\n                    <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\r\n                        <Box\r\n                            sx={{\r\n                                my: 8,\r\n                                mx: 4,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                            }}\r\n                        >\r\n                            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                {t('signup.title-page-register')}\r\n                            </Typography>\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <form onSubmit={formik.handleSubmit}>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item xs={12}>\r\n                                            <FormControl fullWidth error={formik.touched.email && Boolean(formik.errors.email)}>\r\n                                                <InputLabel htmlFor=\"outlined-adornment-title\">{t('common.label_email')}</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"email\"\r\n                                                    name=\"email\"\r\n                                                    type=\"email\"\r\n                                                    label={t('common.label_email')}\r\n                                                    value={formik.values.email}\r\n                                                    onChange={formik.handleChange}\r\n                                                />\r\n                                                <FormHelperText id=\"component-helper-text\">{formik.touched.email && formik.errors.email}</FormHelperText>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} md={6}>\r\n                                            <FormControl fullWidth error={formik.touched.firstPassword && Boolean(formik.errors.firstPassword)}>\r\n                                                <InputLabel htmlFor=\"outlined-adornment-title\">{t('common.label_new_password')}</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"firstPassword\"\r\n                                                    name=\"firstPassword\"\r\n                                                    type={showPassword.showPassword ? 'text' : 'password'}\r\n                                                    label={t('common.label_new_password')}\r\n                                                    value={formik.values.firstPassword}\r\n                                                    onChange={formik.handleChange}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                aria-label=\"toggle password visibility\"\r\n                                                                onClick={handleClickShowPassword}\r\n                                                                onMouseDown={handleMouseDownPassword}\r\n                                                                edge=\"end\"\r\n                                                            >\r\n                                                                {showPassword.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                                <FormHelperText id=\"component-helper-text\">\r\n                                                    {formik.touched.firstPassword && formik.errors.firstPassword}\r\n                                                </FormHelperText>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} md={6}>\r\n                                            <FormControl fullWidth error={formik.touched.secondPassword && Boolean(formik.errors.secondPassword)}>\r\n                                                <InputLabel htmlFor=\"outlined-adornment-title\">{t('common.label_confirm_password')}</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"secondPassword\"\r\n                                                    name=\"secondPassword\"\r\n                                                    type={showConfPassword.showPassword ? 'text' : 'password'}\r\n                                                    label={t('common.label_confirm_password')}\r\n                                                    value={formik.values.secondPassword}\r\n                                                    onChange={formik.handleChange}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                aria-label=\"toggle password visibility\"\r\n                                                                onClick={handleClickShowConfPassword}\r\n                                                                onMouseDown={handleMouseDownPassword}\r\n                                                                edge=\"end\"\r\n                                                            >\r\n                                                                {showConfPassword.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                                <FormHelperText id=\"component-helper-text\">\r\n                                                    {formik.touched.secondPassword && formik.errors.secondPassword}\r\n                                                </FormHelperText>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <FormControl fullWidth error={Boolean(formik.errors.accept)}>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Checkbox\r\n                                                            id=\"accept\"\r\n                                                            name=\"accept\"\r\n                                                            color=\"primary\"\r\n                                                            checked={formik.values.accept}\r\n                                                            onChange={formik.handleChange}\r\n                                                        />\r\n                                                    }\r\n                                                    label={\r\n                                                        <React.Fragment>\r\n                                                            {t('signup.accept-cgu')}\r\n                                                            <Link to=\"qsd\">ici</Link>\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                />\r\n                                                <FormHelperText id=\"component-helper-text\">{formik.touched.accept && formik.errors.accept}</FormHelperText>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }} color=\"neutral\">\r\n                                        {t('common.label_register')}\r\n                                    </Button>\r\n                                    <Grid container justifyContent=\"flex-end\">\r\n                                        <Grid item>\r\n                                            <Link to={ALL_APP_ROUTES.LOGIN}>{t('signup.label-already-have-account')}</Link>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={4}></Grid>\r\n                </Grid>\r\n                {shwDialogRegister()}\r\n            </Container>\r\n        </Slide>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ user, locale }: IRootState) => ({\r\n    loading: user.registrationLoading,\r\n    registrationSuccess: user.registrationSuccess,\r\n    oneSignalId: user.oneSignalId,\r\n    currentLocale: locale.currentLocale,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    handleRegister,\r\n    resetRegister\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from \"react\";\r\nimport {TransitionProps} from \"@mui/material/transitions\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\n\r\n\r\nexport const TransitionModal = React.forwardRef(function Transition(\r\n    props: TransitionProps & {\r\n        children: React.ReactElement<any, any>;\r\n    },\r\n    ref: React.Ref<unknown>\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["validationSchemaSignUp","Yup","email","required","firstPassword","min","max","secondPassword","oneOf","accept","initialValues","SignUp","props","React","startAnimation","setStartAnimation","showPassword","setShowPassword","showConfPassword","setShowConfPassword","openDialogRegister","setOpenDialogRegister","t","useTranslation","navigate","useNavigate","console","log","oneSignalId","registrationSuccess","formik","useFormik","validationSchema","onSubmit","values","handleRegister","checkMobileDesktopBrowser","currentLocale","handleMouseDownPassword","event","preventDefault","handleClose","resetRegister","resetForm","ALL_APP_ROUTES","Slide","direction","in","mountOnEnter","unmountOnExit","Container","maxWidth","Grid","container","style","paddingTop","item","sm","xs","Breadcrumbs","color","to","Typography","sx","pt","pb","md","component","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","variant","mt","handleSubmit","spacing","FormControl","fullWidth","error","touched","Boolean","errors","InputLabel","htmlFor","OutlinedInput","id","name","type","label","value","onChange","handleChange","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","FormControlLabel","control","Checkbox","checked","Button","mb","justifyContent","Dialog","open","TransitionComponent","TransitionModal","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","mapDispatchToProps","connect","user","locale","loading","registrationLoading","ref","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_jsx","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","theme","_extends","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","fontSize"],"sourceRoot":""}