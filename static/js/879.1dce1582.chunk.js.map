{"version":3,"file":"static/js/879.1dce1582.chunk.js","mappings":"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","sources":["main-features/notification/components/ui-segments/NotificationLoading.tsx","shared/enums/module-notification.ts","main-features/notification/components/notification.tsx","shared/pages/react-time-ago.tsx","../node_modules/@mui/icons-material/CircleNotifications.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React  from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Divider from '@mui/material/Divider/Divider';\r\nimport Skeleton from '@mui/material/Skeleton/Skeleton';\r\n\r\nexport default function LoadingNotification() {\r\n    return (\r\n        <List\r\n            sx={{\r\n                bgcolor: 'background.paper',\r\n            }}\r\n        >\r\n            <ListItem button>\r\n                <ListItemAvatar>\r\n                    <Skeleton variant=\"circular\" width={40} height={40} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={<Skeleton variant=\"text\" height={40} />} secondary={<Skeleton variant=\"text\" height={20} />} />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n            <ListItem button>\r\n                <ListItemAvatar>\r\n                    <Skeleton variant=\"circular\" width={40} height={40} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={<Skeleton variant=\"text\" height={40} />} secondary={<Skeleton variant=\"text\" height={20} />} />\r\n            </ListItem>\r\n        </List>\r\n    );\r\n}\r\n","export enum ModuleNotification {\r\n    ADMIN_NOTIFICATION = 'AdminNotification',\r\n    OFFER_NOTIfICATION = 'OfferNotification',\r\n    COMMENT_OFFER_NOTIFICATION = 'CommentOfferNotification',\r\n}\r\n","import React from 'react';\r\nimport Container from \"@mui/material/Container/Container\";\r\nimport Grid from \"@mui/material/Grid/Grid\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs/Breadcrumbs\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\nimport LoadingNotification from \"./ui-segments/NotificationLoading\";\r\nimport ListItem from \"@mui/material/ListItem/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar/Avatar\";\r\nimport ListItemText from \"@mui/material/ListItemText/ListItemText\";\r\nimport Divider from \"@mui/material/Divider/Divider\";\r\nimport List from \"@mui/material/List/List\";\r\nimport CircleNotificationsIcon from '@mui/icons-material/CircleNotifications';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport './notification.scss';\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {ModuleNotification} from \"../../../shared/enums/module-notification\";\r\nimport {INotification} from \"../../../shared/model/notification.model\";\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addIsReadSuccessMyNotifications,\r\n    addReadNotifications,\r\n    entitiesMyNotifications,\r\n    fetchMyNotifications,\r\n    loadingEntitiesMyNotifications,\r\n    loadingMyNotifications,\r\n    resetMyNotifications,\r\n    totalItemsMyNotifications,\r\n    totalPagesMyNotifications\r\n} from '../store/slice';\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport { resetNumberOfNotificationsNotSee } from '../../user/store/slice';\r\n\r\nexport default function Notification (){\r\n    const [activePage, setActivePage] = React.useState(-1);\r\n\r\n\r\n    let tmpListNotSee : INotification[] = [];\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const loadingEntitiesMyNotificationsSelector = useSelector(loadingEntitiesMyNotifications) ?? false;\r\n    const entitiesMyNotificationsSelector = useSelector(entitiesMyNotifications) ?? [];\r\n    const totalItemsMyNotificationsSelector = useSelector(totalItemsMyNotifications) ?? -1;\r\n    const totalPagesMyNotificationsSelector = useSelector(totalPagesMyNotifications) ?? 0;\r\n    const addIsReadSuccessMyNotificationsSelector = useSelector(addIsReadSuccessMyNotifications) ?? false;\r\n\r\n    const resetAll = () => {\r\n        // props.resetNotification();\r\n\r\n        dispatch(resetMyNotifications({}));\r\n        setActivePage(0);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        resetAll();\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if(activePage>=0){\r\n            dispatch(fetchMyNotifications({\r\n                page: activePage,\r\n                size: AllAppConfig.OFFERS_PER_PAGE,\r\n                queryParams: ''\r\n            }));\r\n        }\r\n    }, [activePage]);\r\n\r\n    React.useEffect(() => {\r\n        if(entitiesMyNotificationsSelector && entitiesMyNotificationsSelector.length>0){\r\n            for (let i = 0; i < entitiesMyNotificationsSelector.length; i++) {\r\n                if(!entitiesMyNotificationsSelector[i].isRead){\r\n                    tmpListNotSee.push({\r\n                        id: entitiesMyNotificationsSelector[i].id\r\n                    });\r\n                }\r\n            }\r\n            if(tmpListNotSee.length>0){\r\n                dispatch(addReadNotifications(tmpListNotSee));\r\n                // props.setIsReadNotifications(tmpListNotSee);\r\n            }\r\n        }\r\n    }, [entitiesMyNotificationsSelector])\r\n\r\n    React.useEffect(() => {\r\n        if(addIsReadSuccessMyNotificationsSelector){\r\n            dispatch(resetNumberOfNotificationsNotSee({}))\r\n            // props.resetNbeNotificationsNotRead();\r\n        }\r\n    }, [addIsReadSuccessMyNotificationsSelector]);\r\n\r\n    const loadMore = () => {\r\n        setActivePage(activePage+1);\r\n    }\r\n\r\n    const redirect = (notification: INotification) => {\r\n        if(notification.module===ModuleNotification.COMMENT_OFFER_NOTIFICATION){\r\n            setTimeout(() => {\r\n                navigate(ALL_APP_ROUTES.DETAILS_OFFER + '/' + notification?.offer?.id);\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Grid\r\n                container\r\n                style={{\r\n                    paddingTop: 10,\r\n                }}\r\n            >\r\n                <Grid item xs={12} sm={6}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"inherit\" to={ALL_APP_ROUTES.HOME}>\r\n                            SRF\r\n                        </Link>\r\n                        <Typography color=\"text.primary\">\r\n                            {t<string>('notification.title_page')}\r\n                        </Typography>\r\n                    </Breadcrumbs>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n                container\r\n                spacing={6}\r\n                style={{\r\n                    paddingTop: 50,\r\n                }}\r\n            >\r\n                <Grid item xs={12} sm={6} md={3}></Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={6} className=\"my-container\">\r\n\r\n\r\n                    <InfiniteScroll\r\n                        pageStart={activePage}\r\n                        loadMore={loadMore}\r\n                        hasMore={totalPagesMyNotificationsSelector-1 > activePage && !loadingEntitiesMyNotificationsSelector}\r\n                        loader={<div className=\"loader\" key={0}></div>}\r\n                        threshold={0}\r\n                        initialLoad={false}\r\n                    >\r\n                        <List>\r\n                            {entitiesMyNotificationsSelector.map((notification: INotification, index: number) => (\r\n                                <React.Fragment key={`notification-${notification.id}-${index}`}>\r\n                                    <ListItem button sx={{\r\n                                        bgcolor: notification.isRead ? '' : 'background.paper',\r\n                                    }} onClick={() => redirect(notification)}>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <CircleNotificationsIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={<ConvertReactTimeAgo convertDate={notification.dateCreated} />}\r\n                                                      secondary={notification.content} />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\" />\r\n                                </React.Fragment>\r\n                            ))}\r\n\r\n                            { loadingEntitiesMyNotificationsSelector ? <LoadingNotification/> : null }\r\n\r\n                        </List>\r\n                    </InfiniteScroll>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport ReactTimeAgo from 'react-time-ago';\r\n\r\nexport const ConvertReactTimeAgo = (date: any, locale?: any) => {\r\n  if (date && date.convertDate) {\r\n    return <ReactTimeAgo date={new Date(date.convertDate)} locale='fr-FR' />;\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 16.5c-.83 0-1.5-.67-1.5-1.5h3c0 .83-.67 1.5-1.5 1.5zm5-2.5H7v-1l1-1v-2.61C8 9.27 9.03 7.47 11 7v-.5c0-.57.43-1 1-1s1 .43 1 1V7c1.97.47 3 2.28 3 4.39V14l1 1v1z\"\n}), 'CircleNotifications');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\n\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\n\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg'\n    } = props,\n          other = _objectWithoutPropertiesLoose(props, _excluded);\n\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    }); // @ts-ignore module augmentation fails if custom breakpoints are used\n\n\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes\n  /* remove-proptypes */\n  = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes\n    /* @typescript-to-proptypes-ignore */\n    .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["LoadingNotification","List","sx","bgcolor","ListItem","button","ListItemAvatar","Skeleton","variant","width","height","ListItemText","primary","secondary","Divider","component","ModuleNotification","Notification","React","activePage","setActivePage","tmpListNotSee","t","useTranslation","navigate","useNavigate","dispatch","useDispatch","loadingEntitiesMyNotificationsSelector","useSelector","loadingEntitiesMyNotifications","entitiesMyNotificationsSelector","entitiesMyNotifications","totalPagesMyNotificationsSelector","totalItemsMyNotifications","totalPagesMyNotifications","addIsReadSuccessMyNotificationsSelector","addIsReadSuccessMyNotifications","resetMyNotifications","fetchMyNotifications","page","size","AllAppConfig","queryParams","length","i","isRead","push","id","addReadNotifications","resetNumberOfNotificationsNotSee","Container","Grid","container","style","paddingTop","item","xs","sm","Breadcrumbs","color","to","ALL_APP_ROUTES","Typography","spacing","md","className","pageStart","loadMore","hasMore","loader","threshold","initialLoad","map","notification","index","onClick","module","COMMENT_OFFER_NOTIFICATION","setTimeout","offer","redirect","Avatar","CircleNotifications","convertDate","dateCreated","content","ConvertReactTimeAgo","date","locale","Date","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_jsx","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","display","marginLeft","marginRight","palette","mode","backgroundColor","grey","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BreadcrumbsRoot","name","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","reduce","acc","current","concat","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","filter","child","clsx","slice","BreadcrumbCollapsed","focusable","querySelector","focus","renderItemsBeforeAndAfter","createStyled","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","useThemePropsSystem","componentName","slots","options","createStyledComponent","ContainerRoot","boxSizing","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","breakpointValueKey","breakpoint","value","unit","Math","max","as","createContainer"],"sourceRoot":""}