{"version":3,"file":"static/js/934.41412143.chunk.js","mappings":"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","sources":["main-features/home/ui-segments/TopHomeSlides.tsx","main-features/home/ui-segments/ForSellHomeClient.tsx","main-features/home/ui-segments/ForRentHomeClient.tsx","main-features/home/ui-segments/SecondHorizentalListHomeClient.tsx","main-features/home/ui-segments/ForFindHomeClient.tsx","main-features/home/ui-segments/ThirdHorizentalListHomeClient.tsx","main-features/home/ui-segments/FirstHorizentalListHomeClient.tsx","main-features/home/ui-segments/RecentlyAddedHomeClient.tsx","main-features/home/ui-segments/PostHomeFeature.tsx","main-features/home/ui-segments/BottomHomeSlides.tsx","main-features/home/home.tsx","shared/enums/type-offer.enum.ts","shared/layout/menus/validation/inti-value-search-app-bar.ts","shared/layout/menus/SearchAppBar.tsx","shared/pages/react-time-ago.tsx","shared/pages/transition-modal.tsx","../node_modules/@mui/icons-material/MoreVert.js","../node_modules/@mui/material/internal/svg-icons/Close.js"],"sourcesContent":["import React, {FunctionComponent} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport {SearchAppBar} from \"../../../shared/layout/menus/SearchAppBar\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport { Parallax, Pagination, Navigation } from \"swiper\";\r\nimport './TopHomeSlides.scss';\r\nimport {StorageService} from \"../../../shared/services/storage.service\";\r\nimport {ITopHomeSlidesImages} from \"../../../shared/model/top-home-slides-images.model\";\r\nimport i18n from \"i18next\";\r\nimport {getFullUrlWithParams} from \"../../../shared/utils/utils-functions\";\r\nimport {allCategorySelector} from \"../../category/store/slice\";\r\nimport {allAddressSelector} from \"../../address/store/slice\";\r\nimport {entitiesTopHomeSlidesImages} from \"../store/slice\";\r\n\r\n\r\nexport const TopHomeSlides: FunctionComponent = () => {\r\n\r\n    const [listTopSlidesImage] = React.useState<ITopHomeSlidesImages[]>(StorageService.local.get(AllAppConfig.HOME_TOP_SLIDES_IMAGE))\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const entitiesCategories = useSelector(allCategorySelector).entities ?? [];\r\n    const entitiesAddress = useSelector(allAddressSelector).entities ?? [];\r\n    const entitiesTopHomeSlidesImagesSelector = useSelector(entitiesTopHomeSlidesImages) ?? [];\r\n\r\n    React.useEffect(() => {\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n    }, []);\r\n\r\n    const searchCalback = (values: any) => {\r\n        navigate({\r\n            pathname: ALL_APP_ROUTES.SEARCH,\r\n            search: \"?\" + new URLSearchParams(getFullUrlWithParams(values)).toString()\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(entitiesTopHomeSlidesImagesSelector?.length){\r\n            StorageService.local.set(AllAppConfig.HOME_TOP_SLIDES_IMAGE, entitiesTopHomeSlidesImagesSelector.slice());\r\n        }\r\n    }, [entitiesTopHomeSlidesImagesSelector])\r\n\r\n    const getBackgroundImage = () => {\r\n        for (let i=0; i<listTopSlidesImage.length; i++){\r\n            if(listTopSlidesImage[i]?.image){\r\n                return listTopSlidesImage[i]?.image;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getDescription = (item: ITopHomeSlidesImages): string => {\r\n        if( defaultLanguage==='en' ){\r\n            return item.descriptionEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return item.descriptionFr || '';\r\n        }\r\n        return item.descriptionAr || '';\r\n    }\r\n\r\n    return (\r\n        <div className=\"top-home-slides\">\r\n            {\r\n                listTopSlidesImage && listTopSlidesImage.length ? <Swiper\r\n                    speed={600}\r\n                    parallax={true}\r\n                    pagination={{\r\n                        clickable: true,\r\n                    }}\r\n                    navigation={false}\r\n                    modules={[Parallax, Pagination, Navigation]}\r\n                    className=\"mySwiper\"\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 2500,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                >\r\n                    <div\r\n                        slot=\"container-start\"\r\n                        className=\"parallax-bg\"\r\n                        style={{ \"backgroundImage\": `url(${getBackgroundImage()})` }}\r\n                        data-swiper-parallax=\"-23%\"\r\n                    ></div>\r\n                    {\r\n                        listTopSlidesImage.map((item: ITopHomeSlidesImages, index: number) => (\r\n                            <SwiperSlide key={`index-${index}`}>\r\n                                <div className=\"text\" data-swiper-parallax=\"-300\">\r\n                                    <div dangerouslySetInnerHTML={{ __html: getDescription(item) }}></div>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        ))\r\n                    }\r\n                </Swiper> : null\r\n            }\r\n\r\n\r\n            <Box\r\n                sx={{\r\n                    position: { xs: 'relative', md: 'absolute' },\r\n                    bottom: -50,\r\n                    right: 0,\r\n                    left: 0,\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                    backgroundColor: '#fff',\r\n                    maxWidth: 959,\r\n                    height: { sx: 'auto', md: 100 },\r\n                    zIndex: 9\r\n                }}\r\n            >\r\n                <SearchAppBar entitiesCategories={entitiesCategories?.slice()} searchCalback={searchCalback} listAddress={entitiesAddress?.slice()} hideFilter={true}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\nimport Container from '@mui/material/Container/Container';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport CardActionArea from '@mui/material/CardActionArea/CardActionArea';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardMedia from '@mui/material/CardMedia/CardMedia';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../shared/utils/utils-functions\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport { Pagination } from \"swiper\";\r\n\r\nimport \"swiper/css/effect-cube\";\r\nimport './ForSellHome.scss';\r\nimport {IOffer} from \"../../../shared/model/offer.model\";\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport {LazyImage} from \"react-lazy-images\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    allPublicOffersSelector,\r\n    allSellerOffersSelector, entitiesSellerOffer,\r\n    entitySellerOffer,\r\n    fetchSellerOffer\r\n} from '../../offer/store/slice';\r\n\r\nfunction ItemForSell({offer, index, rediretTo}: {offer: IOffer, index: number, rediretTo: any}){\r\n    return (\r\n        <CardActionArea component=\"a\" onClick={() => rediretTo(offer.id)}>\r\n\r\n            {/*For Desktop*/}\r\n            <Card sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n                {index % 2 === 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: {imageProps: any}) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n                <CardContent sx={{ flex: 1 }}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{ maxWidth: 400 }}>\r\n                        <div dangerouslySetInnerHTML={{ __html: offer.description || '' }}></div>\r\n                    </Box>\r\n                </CardContent>\r\n                {index % 2 !== 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: {imageProps: any}) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n            </Card>\r\n\r\n\r\n            {/*For Mobile*/}\r\n            <Card sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                {\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: {imageProps: any}) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 } }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                }\r\n                <CardContent sx={{ flex: 1 }}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{ maxWidth: 400 }}>\r\n                        <div dangerouslySetInnerHTML={{ __html: offer.description || '' }}></div>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </CardActionArea>\r\n    );\r\n}\r\n\r\n\r\nexport const ForSellHomeClient: FunctionComponent = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n    // const dispatch = useDispatch();\r\n\r\n    const entitiesSellerOfferSelector = useSelector(entitiesSellerOffer) ?? [];\r\n\r\n    const rediretTo = (offerId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.OFFER.DEAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    // React.useEffect(() => {\r\n    //     dispatch(fetchSellerOffer({\r\n    //         page: 0,\r\n    //         size: 4,\r\n    //         queryParams: ''\r\n    //     }));\r\n    // }, [])\r\n\r\n    return(\r\n        <Container maxWidth=\"xl\" sx={{my: 20}} className=\"container-for-sell-home\">\r\n            <h3>\r\n                <Link to={`${ALL_APP_ROUTES.OFFER.LIST}?typeOffer=${TypeOfferEnum.Sell}`}>\r\n                    {t<string>('common.for_sell')}\r\n                </Link>\r\n            </h3>\r\n            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }} sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                {entitiesSellerOfferSelector.map((offer: any, index: number) => (\r\n                    <Grid item xs={12} md={6} key={`offer-${index}`}>\r\n                        <ItemForSell offer={offer} index={index} rediretTo={rediretTo}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                <Swiper\r\n                    pagination={true}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 3500,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    modules={[Pagination]}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {entitiesSellerOfferSelector.map((offer: any, index: number) => (\r\n                        <SwiperSlide  key={`offer-${index}`}>\r\n                            <ItemForSell offer={offer} index={index} rediretTo={rediretTo}/>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\n// const mapStateToProps = ({sellOffer}: IRootState) => ({\r\n//     listSellOffers: sellOffer.entitiesSellOffers,\r\n// });\r\n//\r\n// const mapDispatchToProps = {\r\n//     getEntitiesForSell,\r\n// };\r\n//\r\n// type StateProps = ReturnType<typeof mapStateToProps>;\r\n// type DispatchProps = typeof mapDispatchToProps;\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ForSellHomeClient);\r\n","import React from 'react';\r\nimport Container from '@mui/material/Container/Container';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport CardActionArea from '@mui/material/CardActionArea/CardActionArea';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardMedia from '@mui/material/CardMedia/CardMedia';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {IRentOffer} from \"../../../shared/model/rent-offer.model\";\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../shared/utils/utils-functions\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport {IOffer} from \"../../../shared/model/offer.model\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport './ForRentHome.scss';\r\n\r\nimport {Pagination } from \"swiper\";\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport { LazyImage } from 'react-lazy-images';\r\nimport {allRentOffersSelector, entitiesRentOffer, entitiesSellerOffer, fetchRentOffer} from \"../../offer/store/slice\";\r\n\r\nfunction ItemForRentHome({offer, index, rediretTo}: {offer: IOffer, index: number, rediretTo: any}){\r\n    return (\r\n        <CardActionArea component=\"a\" onClick={() => rediretTo(offer.id)}>\r\n\r\n            {/*For Desktop*/}\r\n            <Card sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n                {index % 2 === 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n                <CardContent sx={{flex: 1}}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{maxWidth: 400}}>\r\n                        <div dangerouslySetInnerHTML={{__html: offer.description || ''}}></div>\r\n                    </Box>\r\n                </CardContent>\r\n                {index % 2 !== 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n            </Card>\r\n\r\n\r\n            {/*For Mobile*/}\r\n            <Card sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                {\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{\r\n                            width: {xs: '100%', sm: 250},\r\n                            height: {xs: '100%', sm: 200},\r\n                            backgroundColor: '#0000004f'\r\n                        }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                }\r\n                <CardContent sx={{flex: 1}}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{maxWidth: 400}}>\r\n                        <div dangerouslySetInnerHTML={{__html: offer.description || ''}}></div>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n\r\n\r\nexport const ForRentHomeClient = () => {\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n    // const dispatch = useDispatch();\r\n\r\n    const entitiesRentOfferSelector = useSelector(entitiesRentOffer) ?? [];\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     dispatch(fetchRentOffer({\r\n    //         page: 0,\r\n    //         size: 4,\r\n    //         queryParams: ''\r\n    //     }));\r\n    // }, []);\r\n\r\n    const rediretTo = (offerId?: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.OFFER.DEAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" className=\"container-for-rent-home\">\r\n            <h3>\r\n                <Link to={`${ALL_APP_ROUTES.OFFER.LIST}?typeOffer=${TypeOfferEnum.Rent}`}>\r\n                    {t<string>('common.for_rent')}\r\n                </Link>\r\n            </h3>\r\n            <Grid container rowSpacing={2} columnSpacing={{xs: 1, sm: 2, md: 3}} sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                {entitiesRentOfferSelector.map((offer: IRentOffer, index: number) => (\r\n                    <Grid item xs={12} md={6} key={`offer-${index}`}>\r\n                        <ItemForRentHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                <Swiper\r\n                    pagination={true}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 3000,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    modules={[Pagination]}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {entitiesRentOfferSelector.map((offer: IRentOffer, index: number) => (\r\n                        <SwiperSlide key={`offer-${index}`}>\r\n                            <ItemForRentHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ({rentOffer}: IRootState) => ({\r\n//     listRentOffers: rentOffer.entitiesRentOffers,\r\n// });\r\n//\r\n// const mapDispatchToProps = {\r\n//     getEntitiesForRent,\r\n// };\r\n//\r\n// type StateProps = ReturnType<typeof mapStateToProps>;\r\n// type DispatchProps = typeof mapDispatchToProps;\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ForRentHomeClient);\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box/Box';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport ListItem from '@mui/material/ListItem/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText/ListItemText';\r\nimport {getBaseImageUrl} from \"../../../shared/utils/utils-functions\";\r\nimport {List} from \"@mui/material\";\r\n\r\ninterface IService {\r\n    img: string;\r\n    primaryTitle: string;\r\n    secondTitle: string;\r\n}\r\n\r\nexport default function SecondHorizentalListHomeClient() {\r\n    const listServices: IService[] = [\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/services/delivery.png'),\r\n            primaryTitle: 'Livraison Express 24/48H',\r\n            secondTitle: 'Livraison rapide sur toute la Tunisie',\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/services/euro.png'),\r\n            primaryTitle: 'Satisfait ou Remboursé',\r\n            secondTitle: 'Satisfait ou remboursé sans poser de questions ! (5Jours)',\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/services/money.png'),\r\n            primaryTitle: 'Paiement à la livraison',\r\n            secondTitle: 'Achetez et payez à la livraison',\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/services/chat.png'),\r\n            primaryTitle: 'Service Client 24/7',\r\n            secondTitle: 'Nous sommes à votre disposition pour répondre à vos questions',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Box sx={{p: 8, my: 10}}  className=\"bg-brown\">\r\n            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                {listServices.map((service: IService, index: number) => (\r\n                    <Grid item xs={12} md={3} key={`service-${index}`}>\r\n                        <Card sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <CardContent sx={{ flexGrow: 1, minHeight: 130 }}>\r\n                                <List  aria-label=\"contacts\" >\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <Avatar alt={service.primaryTitle} src={service.img} />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={service.primaryTitle} secondary={service.secondTitle} />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Container from '@mui/material/Container/Container';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport CardActionArea from '@mui/material/CardActionArea/CardActionArea';\r\nimport Card from '@mui/material/Card/Card';\r\nimport CardMedia from '@mui/material/CardMedia/CardMedia';\r\nimport CardContent from '@mui/material/CardContent/CardContent';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Box from '@mui/material/Box/Box';\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../shared/utils/utils-functions\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {getEntitiesForFind} from \"../../../shared/reducers/find-offer.reducer\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {IOffer} from \"../../../shared/model/offer.model\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport {Pagination} from \"swiper\";\r\n\r\nimport './ForFindHome.scss';\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport { LazyImage } from 'react-lazy-images';\r\nimport {allFindOffersSelector, entitiesFindOffer, entitiesRentOffer, fetchFindOffer} from \"../../offer/store/slice\";\r\n\r\n\r\nfunction ItemForFindHome({offer, index, rediretTo}: {offer: IOffer, index: number, rediretTo: any}){\r\n    return (\r\n        <CardActionArea component=\"a\" onClick={() => rediretTo(offer.id)}>\r\n\r\n            {/*For Desktop*/}\r\n            <Card sx={{ display: { xs: 'none', sm: 'flex' } }}>\r\n                {index % 2 === 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n                <CardContent sx={{ flex: 1 }}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{ maxWidth: 400 }}>\r\n                        <div dangerouslySetInnerHTML={{__html: offer.description || ''}}></div>\r\n                    </Box>\r\n                </CardContent>\r\n                {index % 2 !== 0 ? (\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                ) : null}\r\n            </Card>\r\n\r\n\r\n            {/*For Mobile*/}\r\n            <Card sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                {\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\" alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia sx={{ width: { xs: '100%', sm: 250 }, height: { xs: '100%', sm: 200 }, backgroundColor: '#0000004f' }}>\r\n                            <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                        </CardMedia>\r\n                    )\r\n                }\r\n                <CardContent sx={{ flex: 1 }}>\r\n                    <Typography component=\"h2\" variant=\"h5\">\r\n                        {offer.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                        <ConvertReactTimeAgo convertDate={offer.dateCreated} />\r\n                    </Typography>\r\n                    <Box className=\"truncate-string-two-lines\" style={{ maxWidth: 400 }}>\r\n                        <div dangerouslySetInnerHTML={{__html: offer.description || ''}}></div>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n\r\n// export interface IForFindClientProp extends StateProps, DispatchProps {}\r\n\r\nexport const ForFindHomeClient = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n    // const dispatch = useDispatch();\r\n\r\n    const entitiesFindOfferSelector = useSelector(entitiesFindOffer) ?? [];\r\n\r\n    // React.useEffect(() => {\r\n    //     dispatch(fetchFindOffer({\r\n    //         page: 0,\r\n    //         size: 4,\r\n    //         queryParams: ''\r\n    //     }));\r\n    // }, [])\r\n\r\n    const rediretTo = (offerId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.OFFER.DEAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" className=\"container-for-find-home\">\r\n            <h3>\r\n                <Link to={`${ALL_APP_ROUTES.OFFER.LIST}?typeOffer=${TypeOfferEnum.Find}`}>\r\n                    {t<string>('common.for_find')}\r\n                </Link>\r\n            </h3>\r\n            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }} sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                {entitiesFindOfferSelector.map((offer: any, index: number) => (\r\n                    <Grid item xs={12} md={6} key={`offer-${index}`}>\r\n                        <ItemForFindHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                <Swiper\r\n                    pagination={true}\r\n                    loop={true}\r\n                    autoplay={{\r\n                        delay: 3500,\r\n                        disableOnInteraction: false,\r\n                    }}\r\n                    modules={[Pagination]}\r\n                    className=\"mySwiper\"\r\n                >\r\n                    {entitiesFindOfferSelector.map((offer: any, index: number) => (\r\n                        <SwiperSlide key={`offer-${index}`}>\r\n                            <ItemForFindHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box/Box';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// import required modules\r\nimport { Pagination } from \"swiper\";\r\n\r\nimport './ThirdHorizentalListHome.scss';\r\n\r\nexport default function ThirdHorizentalListHomeClient() {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Box sx={{my: 10}}\r\n            style={{\r\n                // height: 250,\r\n                backgroundColor: 'rgb(0 0 0 / 74%)',\r\n                color:'#fff',\r\n                textAlign: 'center'\r\n            }}\r\n        >\r\n            <Container maxWidth=\"xl\" className=\"container-full-slide\">\r\n                <Grid container className=\"grid-full-slide\" sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                    <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                        <Avatar\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                marginTop: 5,\r\n                                bgcolor: '#fff',\r\n                                color: '#000',\r\n                                fontSize: '25px'\r\n                            }}\r\n                        >01</Avatar>\r\n                        <h2 className=\"mt-2\">{t<string>('home.steps.title_create_account')}</h2>\r\n                        <p>{t<string>('home.steps.sub_title_create_account')}</p>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                        <Avatar\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                marginTop: 5,\r\n                                bgcolor: '#fff',\r\n                                color: '#000',\r\n                                fontSize: '25px'\r\n                            }}\r\n                        >02</Avatar>\r\n                        <h2 className=\"mt-2\">{t<string>('home.steps.title_login')}</h2>\r\n                        <p>{t<string>('home.steps.sub_title_login')}</p>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                        <Avatar\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                marginTop: 5,\r\n                                bgcolor: '#fff',\r\n                                color: '#000',\r\n                                fontSize: '25px'\r\n                            }}\r\n                        >03</Avatar>\r\n                        <h2 className=\"mt-2\">{t<string>('home.steps.title_participate')}</h2>\r\n                        <p>{t<string>('home.steps.sub_title_participate')}</p>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                        <Avatar\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                marginTop: 5,\r\n                                bgcolor: '#fff',\r\n                                color: '#000',\r\n                                fontSize: '25px'\r\n                            }}\r\n                        >04</Avatar>\r\n                        <h2 className=\"mt-2\">{t<string>('home.steps.title_win_auction')}</h2>\r\n                        <p>{t<string>('home.steps.sub_title_win_auction')}</p>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                    <Swiper\r\n                        slidesPerView={\"auto\"}\r\n                        spaceBetween={30}\r\n                        pagination={{\r\n                            clickable: true,\r\n                        }}\r\n                        loop={true}\r\n                        modules={[Pagination]}\r\n                        className=\"mySwiper\"\r\n                    >\r\n                        <SwiperSlide>\r\n                            <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 56,\r\n                                        height: 56,\r\n                                        marginLeft: 'auto',\r\n                                        marginRight: 'auto',\r\n                                        marginTop: 5,\r\n                                        bgcolor: '#fff',\r\n                                        color: '#000',\r\n                                        fontSize: '25px'\r\n                                    }}\r\n                                >01</Avatar>\r\n                                <h2 className=\"mt-2\">{t<string>('home.steps.title_create_account')}</h2>\r\n                                <p>{t<string>('home.steps.sub_title_create_account')}</p>\r\n                            </Grid>\r\n                        </SwiperSlide>\r\n                        <SwiperSlide>\r\n                            <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 56,\r\n                                        height: 56,\r\n                                        marginLeft: 'auto',\r\n                                        marginRight: 'auto',\r\n                                        marginTop: 5,\r\n                                        bgcolor: '#fff',\r\n                                        color: '#000',\r\n                                        fontSize: '25px'\r\n                                    }}\r\n                                >02</Avatar>\r\n                                <h2 className=\"mt-2\">{t<string>('home.steps.title_login')}</h2>\r\n                                <p>{t<string>('home.steps.sub_title_login')}</p>\r\n                            </Grid>\r\n                        </SwiperSlide>\r\n                        <SwiperSlide>\r\n                            <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 56,\r\n                                        height: 56,\r\n                                        marginLeft: 'auto',\r\n                                        marginRight: 'auto',\r\n                                        marginTop: 5,\r\n                                        bgcolor: '#fff',\r\n                                        color: '#000',\r\n                                        fontSize: '25px'\r\n                                    }}\r\n                                >03</Avatar>\r\n                                <h2 className=\"mt-2\">{t<string>('home.steps.title_participate')}</h2>\r\n                                <p>{t<string>('home.steps.sub_title_participate')}</p>\r\n                            </Grid>\r\n                        </SwiperSlide>\r\n                        <SwiperSlide>\r\n                            <Grid item xs={12} md={3} className=\"text-center item-full-slide\">\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 56,\r\n                                        height: 56,\r\n                                        marginLeft: 'auto',\r\n                                        marginRight: 'auto',\r\n                                        marginTop: 5,\r\n                                        bgcolor: '#fff',\r\n                                        color: '#000',\r\n                                        fontSize: '25px'\r\n                                    }}\r\n                                >04</Avatar>\r\n                                <h2 className=\"mt-2\">{t<string>('home.steps.title_win_auction')}</h2>\r\n                                <p>{t<string>('home.steps.sub_title_win_auction')}</p>\r\n                            </Grid>\r\n                        </SwiperSlide>\r\n                    </Swiper>\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n","import Stack from \"@mui/material/Stack/Stack\";\r\nimport Avatar from \"@mui/material/Avatar/Avatar\";\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport Paper from \"@mui/material/Paper/Paper\";\r\nimport {getBaseImageUrl} from \"../../../shared/utils/utils-functions\";\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {Translation} from \"react-i18next\";\r\nimport {FunctionComponent} from \"react\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport const FirstHorizentalListHomeClient: FunctionComponent = () => {\r\n\r\n    const listCategories = [\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/home.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_immovable')}</>}</Translation>,\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/cars.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_cars')}</>}</Translation>,\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/phones.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_phones')}</>}</Translation>,\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/services.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_services')}</>}</Translation>,\r\n        },\r\n        {\r\n            img: getBaseImageUrl('/assets/images/home/categories/search.png'),\r\n            title: <Translation>{(t, { i18n }) => <>{t('home.label_category_search')}</>}</Translation>,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Box className=\"bg-brown\" sx={{p: 8, my: 10}}>\r\n            <Stack\r\n                sx={{\r\n                    my: '4rem',\r\n                    px: { xs: 0, md: 2 },\r\n                    justifyContent: 'center',\r\n                }}\r\n                direction={{ xs: 'column', sm: 'row' }}\r\n                spacing={{ xs: 1, sm: 2, md: 4 }}\r\n            >\r\n                {listCategories.map((category: any, index: number) => (\r\n                    <Item\r\n                        sx={{\r\n                            flex: 1,\r\n                        }}\r\n                        key={`category-${index}`}\r\n                    >\r\n                        <Avatar\r\n                            alt=\"Remy Sharp\"\r\n                            src={category.img}\r\n                            sx={{\r\n                                width: 56,\r\n                                height: 56,\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                            }}\r\n                        />\r\n                        <h3 className=\"mt-2\">{category.title}</h3>\r\n                    </Item>\r\n                ))}\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport CardHeader from '@mui/material/CardHeader/CardHeader';\r\nimport Avatar from '@mui/material/Avatar/Avatar';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport styled from '@mui/material/styles/styled';\r\nimport CardActionArea from '@mui/material/CardActionArea/CardActionArea';\r\nimport {getEntitiesRecentlyAdded} from \"../../../shared/reducers/offer.reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getBaseImageUrl, getFullnameUser, getImageForOffer, getUserAvatar} from \"../../../shared/utils/utils-functions\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {IOffer} from \"../../../shared/model/offer.model\";\r\nimport Box from \"@mui/material/Box/Box\";\r\n// import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Pagination } from \"swiper\";\r\nimport {ConvertReactTimeAgo} from \"../../../shared/pages/react-time-ago\";\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport { LazyImage } from 'react-lazy-images';\r\nimport {\r\n    deleteSuccessMyOffers,\r\n    entitiesMyOffers,\r\n    entitiesRecentlyOffers, fetchMyOffers,\r\n    fetchRecentlyOffer,\r\n    loadingEntitiesMyOffers,\r\n    loadingEntitiesRecentlyOffers,\r\n    totalItemsMyOffers,\r\n    totalItemsRecentlyOffers,\r\n    totalPagesMyOffers,\r\n    totalPagesRecentlyOffers\r\n} from \"../../offer/store/slice\";\r\n\r\n\r\nfunction RecentlyAddedHome({offer, index, rediretTo}: {offer: IOffer, index: number, rediretTo: any}){\r\n\r\n    const getPathImg = (offer: IOffer) => {\r\n        return offer && offer?.offerImages && offer?.offerImages[0] ? offer?.offerImages[0]?.path : '';\r\n    }\r\n    return (\r\n        <CardActionArea component=\"a\" onClick={() => rediretTo(offer.id)} key={`entity-${index}`}>\r\n            <Card sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar role=\"img\"\r\n                                aria-label=\"Image avatar\"\r\n                                src={getUserAvatar(offer.user?.id, offer.user?.imageUrl, offer.user?.sourceRegister)}\r\n                                alt=\"image not found\">\r\n                            {getFullnameUser(offer.user)?.charAt(0)}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton aria-label=\"settings\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                    title={getFullnameUser(offer?.user)}\r\n                    subheader={<ConvertReactTimeAgo convertDate={offer.dateCreated} />}\r\n                />\r\n                {/*<CardMedia component=\"img\" height=\"194\" image={getImageForOffer(offer?.id, getPathImg(offer) || '')} alt=\"Image Offer\" />*/}\r\n\r\n                {\r\n                    offer.offerImages && offer.offerImages.length ? (\r\n                        <CardMedia sx={{height:200}}>\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer.id, offer.offerImages[0].path)}\r\n                                alt=\"Buildings with tiled exteriors, lit by the sunset.\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"img-lazy-loading\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)}\r\n                                              className=\"img-lazy-loading\"\r\n                                              alt=\"image not found\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)}\r\n                                          className=\"img-lazy-loading\"\r\n                                          style={{height:200}}\r\n                                          alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n                        </CardMedia>\r\n                    ) : (\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            height=\"200\"\r\n                            image={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)}\r\n                            alt=\"image not found\"\r\n                        />\r\n                    )\r\n                }\r\n\r\n                <CardContent className=\"card-content-offer\">\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" className=\"truncate-string-two-lines\">\r\n                        <span dangerouslySetInnerHTML={{ __html: offer.description || '' }}></span>\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"share\">\r\n                        <ShareIcon />\r\n                    </IconButton>\r\n                    <ExpandMore aria-label=\"show more\">\r\n                        <ExpandMoreIcon />\r\n                    </ExpandMore>\r\n                </CardActions>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n\r\nconst ExpandMore = styled((props: any) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\n// export interface IRecentlyAddedHomeClientProps extends StateProps, DispatchProps {}\r\n\r\nexport const RecentlyAddedHomeClient: FunctionComponent = () => {\r\n// export const RecentlyAddedHomeClient = (props: IRecentlyAddedHomeClientProps) => {\r\n    // const [expanded, setExpanded] = React.useState(false);\r\n    const navigate = useNavigate();\r\n    // const dispatch = useDispatch();\r\n\r\n    // const {entitiesRecentlyOffersSelector, getEntitiesRecentlyAdded} = props;\r\n\r\n    // const loadingEntitiesRecentlyOffersSelector = useSelector(loadingEntitiesRecentlyOffers) ?? false;\r\n    const entitiesRecentlyOffersSelector = useSelector(entitiesRecentlyOffers) ?? [];\r\n    // const totalItemsRecentlyOffersSelector = useSelector(totalItemsRecentlyOffers) ?? -1;\r\n    // const totalPagesRecentlyOffersSelector = useSelector(totalPagesRecentlyOffers) ?? 0;\r\n\r\n\r\n    // React.useEffect(() => {\r\n        // dispatch(fetchRecentlyOffer({\r\n        //     page: 0,\r\n        //     size: 9,\r\n        //     queryParams: ''\r\n        // }));\r\n        // getEntitiesRecentlyAdded(0, 9, 'id,asc');\r\n    // }, []);\r\n\r\n    const rediretTo = (offerId: string) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.DETAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{ mt: 5 }} className=\"container-recently-added-home\">\r\n            <h3>\r\n                <u>Récemment ajoutés</u>\r\n            </h3>\r\n            <Grid container spacing={4}  sx={{display: {xs: 'none', md: 'flex'}}}>\r\n                {entitiesRecentlyOffersSelector.map((offer: any, index: number) => (\r\n                    <Grid item  key={`offer-${index}`} xs={12} sm={6} md={4}>\r\n                        <RecentlyAddedHome offer={offer} index={index} rediretTo={rediretTo}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Box sx={{display: {md: 'none'}}} className=\"box-swiper\">\r\n                <Swiper pagination={true} modules={[Pagination]} className=\"mySwiper\">\r\n                    {entitiesRecentlyOffersSelector.map((offer: any, index: number) => (\r\n                        <SwiperSlide key={`offer-${index}`}><RecentlyAddedHome offer={offer} index={index} rediretTo={rediretTo}/></SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = ({ offer }: IRootState) => ({\r\n//     entitiesRecentlyOffersSelector: offer.entitiesRecentlyAddedOffers,\r\n// });\r\n//\r\n// const mapDispatchToProps = {\r\n//     getEntitiesRecentlyAdded,\r\n// };\r\n//\r\n// type StateProps = ReturnType<typeof mapStateToProps>;\r\n// type DispatchProps = typeof mapDispatchToProps;\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(RecentlyAddedHomeClient);\r\n","import React, {FunctionComponent} from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {StorageService} from '../../../shared/services/storage.service';\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport {IPostHomeFeature} from \"../../../shared/model/post-home-feature.model\";\r\nimport i18n from \"i18next\";\r\nimport { entityHomeFeatures } from '../store/slice';\r\n\r\nexport const PostHomeFeature: FunctionComponent = () => {\r\n\r\n    const [entityPostHomeFeature, setEntityPostHomeFeature] = React.useState<IPostHomeFeature>(StorageService.local.get(AllAppConfig.POST_HOME_FEATURE))\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n\r\n    const entityHomeFeaturesSelector = useSelector(entityHomeFeatures) ?? {};\r\n\r\n    React.useEffect(() => {\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if(!isEmpty(entityHomeFeaturesSelector)){\r\n            StorageService.local.set(AllAppConfig.POST_HOME_FEATURE, entityHomeFeaturesSelector);\r\n        }\r\n    }, [entityHomeFeaturesSelector]);\r\n\r\n    const getDescription = (): string => {\r\n        if( defaultLanguage==='en' ){\r\n            return entityPostHomeFeature.descriptionEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return entityPostHomeFeature.descriptionFr || '';\r\n        }\r\n        return entityPostHomeFeature.descriptionAr || '';\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{ my: 10 }}>\r\n            {\r\n                !isEmpty(entityPostHomeFeature) ? <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        {/*<LazyImage className=\"img-fluid\" src={defaultImage} alt={defaultImage}/>*/}\r\n                        <img\r\n                            className=\"full-img-responsive\"\r\n                            src={entityPostHomeFeature.image}\r\n                            alt='bg'\r\n                            onError={(e: any) => {\r\n                                e.target.onerror = null;\r\n                                e.target.src = entityPostHomeFeature.image;\r\n                            }}\r\n                            width=\"1000\"\r\n                            height=\"500\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <div dangerouslySetInnerHTML={{ __html: getDescription() }}></div>\r\n\r\n                        {/*<div>{parse(cmsEntity.description)}</div>*/}\r\n                        {/*<h4>The Ultimate Hotel for Both Leisure and Business Goers</h4>*/}\r\n                        {/*<h2>WHO VISIT THE FINE CITY OF INDIANAPOLIS</h2>*/}\r\n                        {/*<p>*/}\r\n                        {/*The Woods hotel, located in the very heart of Indianapolis is a welcoming retreat for either*/}\r\n                        {/*people traveling across the country*/}\r\n                        {/*or businessmen, visiting our Rustbelt state for some commercial affairs. Here, we always make*/}\r\n                        {/*sure that you will have any of*/}\r\n                        {/*your needs satisfied, be it a comfortable hotel room with a strong WiFi signal and a diligent*/}\r\n                        {/*room service, a dining and lounge*/}\r\n                        {/*zone or any additional amenities a traveller might want…*/}\r\n                        {/*</p>*/}\r\n                        {/*<Button variant=\"outlined\">Default</Button>*/}\r\n                    </Grid>\r\n                </Grid> : null\r\n            }\r\n\r\n        </Container>\r\n    );\r\n};\r\n","import React, {FunctionComponent} from 'react';\r\n// Import Swiper React components\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, {EffectCoverflow, Pagination, Navigation, Autoplay} from 'swiper';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {AllAppConfig} from \"../../../core/config/all-config\";\r\nimport {StorageService} from \"../../../shared/services/storage.service\";\r\nimport {ALL_APP_ROUTES} from \"../../../core/config/all-app-routes\";\r\nimport {getBaseImageUrl, getImageForOffer} from \"../../../shared/utils/utils-functions\";\r\nimport {IRootState} from \"../../../shared/reducers\";\r\nimport {getEntitiesExistOfferImages} from \"../../../shared/reducers/offer-images.reducer\";\r\nimport Box from \"@mui/material/Box/Box\";\r\n\r\nimport './BottomHomeSlides.scss';\r\nimport {entitiesImagesOffers, entitiesRentOffer, fetchImagesOffer, loadingEntitiesImagesOffers} from \"../../offer/store/slice\";\r\nimport { LazyImage } from 'react-lazy-images';\r\n\r\n// install Swiper modules\r\nSwiperCore.use([EffectCoverflow, Pagination, Navigation, Autoplay]);\r\n\r\n// export interface IBottomHomeSlidesProp extends StateProps, DispatchProps {\r\n// }\r\n\r\nexport const BottomHomeSlides: FunctionComponent = () => {\r\n// export const BottomHomeSlides = (props: IBottomHomeSlidesProp) => {\r\n    const [slideListBottom, setSlideListBottom] = React.useState(StorageService.local.get(AllAppConfig.SlideListBottom));\r\n\r\n    const navigate = useNavigate();\r\n    // const dispatch = useDispatch();\r\n\r\n    const loadingEntitiesImagesOffersSelector = useSelector(loadingEntitiesImagesOffers) ?? [];\r\n    const entitiesImagesOffersSelector = useSelector(entitiesImagesOffers) ?? [];\r\n\r\n    // const {entitiesImagesOffersSelector, loadingEntitiesImagesOffersSelector, getEntitiesExistOfferImages} = props;\r\n\r\n    // React.useEffect(() => {\r\n    //     dispatch(fetchImagesOffer({\r\n    //         page: 0,\r\n    //         size: 5\r\n    //     }));\r\n    //\r\n    //     // getEntitiesExistOfferImages(0, 5, 'id,asc')\r\n    // }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (entitiesImagesOffersSelector && entitiesImagesOffersSelector.length > 0) {\r\n            setSlideListBottom(entitiesImagesOffersSelector.slice());\r\n\r\n            // For next refresh\r\n            StorageService.local.set(AllAppConfig.SlideListBottom, entitiesImagesOffersSelector);\r\n        }\r\n    }, [entitiesImagesOffersSelector]);\r\n\r\n    React.useEffect(() => {\r\n    }, [slideListBottom])\r\n\r\n    const rediretTo = (offerId: number) => {\r\n        setTimeout(() => {\r\n            navigate(ALL_APP_ROUTES.OFFER.DEAILS_OFFER + '/' + offerId);\r\n        }, 300);\r\n    };\r\n\r\n    return slideListBottom && slideListBottom.length > 0 && !loadingEntitiesImagesOffersSelector ? (\r\n        <Box sx={{my: 5}} className=\"bottom-home-slides\">\r\n            <Swiper\r\n                effect={\"coverflow\"}\r\n                grabCursor={true}\r\n                centeredSlides={true}\r\n                slidesPerView={\"auto\"}\r\n                coverflowEffect={{\r\n                    rotate: 50,\r\n                    stretch: 0,\r\n                    depth: 100,\r\n                    modifier: 1,\r\n                    slideShadows: true,\r\n                }}\r\n                pagination={true}\r\n                modules={[EffectCoverflow, Pagination]}\r\n                className=\"mySwiper\"\r\n                autoplay={{\r\n                    delay: 3000,\r\n                    disableOnInteraction: false,\r\n                }}\r\n                loop={true}\r\n            >\r\n                {slideListBottom.map((offer: any, index: number) => (\r\n                    <div key={`${index}-${offer[0]}`}>\r\n                        <SwiperSlide key={`slide-${index}-${offer[0]}`} onClick={() => rediretTo(offer[0])}>\r\n                            {/*<img src={getImageForOffer(offer[0], offer[1])} alt=\"Image not found\"*/}\r\n                            {/*     className=\"full-img-responsive\"*/}\r\n                            {/*     width=\"500\"*/}\r\n                            {/*     height=\"500\"/>*/}\r\n\r\n                            <LazyImage\r\n                                src={getImageForOffer(offer[0], offer[1])}\r\n                                alt=\"Image swiper\"\r\n                                actual={({ imageProps }: { imageProps: any }) => <img {...imageProps} className=\"full-img-responsive\"/>}\r\n                                placeholder={({ ref }: { ref: any }) => <div ref={ref} />}\r\n                                loading={() => (\r\n                                    <div>\r\n                                        <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE_LOADING)} className=\"img-lazy-loading\"/>\r\n                                    </div>\r\n                                )}\r\n                                error={() => (\r\n                                    <img  src={getBaseImageUrl(AllAppConfig.DEFAULT_LAZY_IMAGE)} className=\"img-lazy-loading\"  alt=\"image not found\"/>\r\n                                )}\r\n                            />\r\n\r\n                        </SwiperSlide>\r\n                    </div>\r\n                ))}\r\n            </Swiper>\r\n\r\n        </Box>\r\n    ) : (\r\n        <Box></Box>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ({offerImages}: IRootState) => ({\r\n//     entitiesImagesOffersSelector: offerImages.entitiesExistOfferImages,\r\n//     loadingEntitiesImagesOffersSelector: offerImages.loadingEntitiesImagesOffersSelector,\r\n// });\r\n//\r\n// const mapDispatchToProps = {\r\n//     getEntitiesExistOfferImages,\r\n// };\r\n//\r\n// type StateProps = ReturnType<typeof mapStateToProps>;\r\n// type DispatchProps = typeof mapDispatchToProps;\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(BottomHomeSlides);\r\n","import * as React from 'react';\r\nimport Box from \"@mui/material/Box/Box\";\r\nimport {TopHomeSlides} from \"./ui-segments/TopHomeSlides\";\r\nimport {ForSellHomeClient} from \"./ui-segments/ForSellHomeClient\";\r\nimport {ForRentHomeClient} from \"./ui-segments/ForRentHomeClient\";\r\nimport SecondHorizentalListHomeClient from './ui-segments/SecondHorizentalListHomeClient';\r\nimport {ForFindHomeClient} from \"./ui-segments/ForFindHomeClient\";\r\nimport ThirdHorizentalListHomeClient from \"./ui-segments/ThirdHorizentalListHomeClient\";\r\nimport {FirstHorizentalListHomeClient} from \"./ui-segments/FirstHorizentalListHomeClient\";\r\nimport {RecentlyAddedHomeClient} from \"./ui-segments/RecentlyAddedHomeClient\";\r\nimport {PostHomeFeature} from \"./ui-segments/PostHomeFeature\";\r\nimport {BottomHomeSlides} from \"./ui-segments/BottomHomeSlides\";\r\n\r\nexport default function Home(){\r\n    return (\r\n        <Box>\r\n            <TopHomeSlides />\r\n\r\n            <ForSellHomeClient />\r\n\r\n            <FirstHorizentalListHomeClient />\r\n\r\n            <ForRentHomeClient />\r\n\r\n            <SecondHorizentalListHomeClient />\r\n\r\n            <ForFindHomeClient />\r\n\r\n            <ThirdHorizentalListHomeClient />\r\n\r\n            <RecentlyAddedHomeClient />\r\n\r\n            <PostHomeFeature />\r\n\r\n            <BottomHomeSlides />\r\n        </Box>\r\n    );\r\n}\r\n","export enum TypeOfferEnum {\r\n  Sell = 'SellOffer',\r\n  Rent = 'RentOffer',\r\n  Find = 'FindOffer',\r\n}\r\n\r\nexport enum PeriodeRent {\r\n  PerYear = 'PerYear',\r\n  PerMonth = 'PerMonth',\r\n  PerDay = 'PerDay',\r\n}\r\n\r\nexport enum TypesFindOffer{\r\n    Carpooling = 'Carpooling',\r\n    Travels = 'Travels',\r\n    Transporter = 'Transporter',\r\n    Job = 'Job'\r\n}\r\n\r\nexport enum TypeDisplaySearchOffers {\r\n    List = 'LIST',\r\n    Grid = 'GRID'\r\n}","import * as Yup from 'yup';\r\n\r\nexport const initialValuesSearchAppBar = {\r\n    title: '',\r\n    typeOffer: '',\r\n    // address: null,\r\n    category: null\r\n};\r\n\r\nexport const validationSchemSearchAppBar = Yup.object({\r\n    title: Yup.string().nullable().notRequired().default(''),\r\n    typeOffer: Yup.string().nullable().notRequired(),\r\n    // address: Yup.object().nullable().notRequired().default(null),\r\n    category: Yup.object().nullable().notRequired().default(null)\r\n});\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button/Button';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Toolbar from '@mui/material/Toolbar/Toolbar';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport FilterIcon from '@mui/icons-material/FilterListSharp';\r\nimport Autocomplete from \"@mui/material/Autocomplete/Autocomplete\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {\r\n    initialValuesSearchAppBar,\r\n    validationSchemSearchAppBar\r\n} from \"../../../shared/layout/menus/validation/inti-value-search-app-bar\";\r\nimport {useFormik} from \"formik\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {TypeOfferEnum} from \"../../../shared/enums/type-offer.enum\";\r\nimport queryString from \"query-string\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport AppBar from \"@mui/material/AppBar/AppBar\";\r\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\r\nimport GridOnIcon from '@mui/icons-material/GridOn';\r\nimport {TypeDisplaySearchOffers} from \"../../enums/type-offer.enum\";\r\nimport {ICategory} from \"../../model/category.model\";\r\nimport i18n from \"i18next\";\r\nimport {TransitionModal} from \"../../pages/transition-modal\";\r\nimport Dialog from \"@mui/material/Dialog/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText/DialogContentText\";\r\nimport DialogActions from \"@mui/material/DialogActions/DialogActions\";\r\n// import {FilterOffer} from \"../../../main-features/search/ui-segments/FilterOffer\";\r\nimport {IAddress} from \"../../model/address.model\";\r\nimport Typography from \"@mui/material/Typography/Typography\";\r\n\r\nconst listTypeOffers: string[] = [\r\n    TypeOfferEnum.Sell, TypeOfferEnum.Rent,TypeOfferEnum.Find\r\n]\r\n\r\nconst initialValues = initialValuesSearchAppBar;\r\n\r\nexport function SearchAppBar({entitiesCategories, searchCalback, typeDisplayCallback, listAddress, hideFilter}:\r\n                             {entitiesCategories: ICategory[], searchCalback: any, typeDisplayCallback?: any, listAddress: IAddress[], hideFilter?: boolean}) {\r\n\r\n    const [typeDisplayOffers, setTypeDisplayOffers] = React.useState<TypeDisplaySearchOffers>(TypeDisplaySearchOffers.Grid);\r\n    const [defaultLanguage, setDefaultLanguage] = React.useState('fr');\r\n    const [openFilterOfferModal, setOpenFilterOfferModal] = React.useState(false);\r\n    const [valuesSearch, setValuesSearch] = React.useState(null);\r\n\r\n    const { search } = useLocation();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: validationSchemSearchAppBar,\r\n        onSubmit: (values: any) => {\r\n            searchCalback(values);\r\n        },\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        i18n.on('languageChanged', (lang: any) => {\r\n            setDefaultLanguage(lang);\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        const objParams = queryString.parse(search);\r\n        formik.setFieldValue('title', objParams.title || '');\r\n        formik.setFieldValue('typeOffer', objParams.typeOffer || '');\r\n    }, [search])\r\n\r\n    React.useEffect(() => {\r\n        const values: any = queryString.parse(search);\r\n        Object.keys(values).forEach((key) => {\r\n            if(key==='category.id'){\r\n                formik.setFieldValue('category', entitiesCategories.find(add => add?.id?.toString() === values[key]?.toString())  || null);\r\n            }\r\n        });\r\n    }, [entitiesCategories])\r\n\r\n    const changeTypeDisplayOffers = () => {\r\n        setTypeDisplayOffers(typeDisplayOffers===TypeDisplaySearchOffers.Grid ? TypeDisplaySearchOffers.List : TypeDisplaySearchOffers.Grid);\r\n        typeDisplayCallback(typeDisplayOffers===TypeDisplaySearchOffers.Grid ? TypeDisplaySearchOffers.List : TypeDisplaySearchOffers.Grid);\r\n    }\r\n\r\n    const getOptionLabelCat = (option: ICategory) => {\r\n        if( defaultLanguage==='en' ){\r\n            return option.titleEn || '';\r\n        }\r\n        else if( defaultLanguage==='fr' ){\r\n            return option.titleFr || '';\r\n        }\r\n        return option.titleAr || '';\r\n    }\r\n\r\n    const getOptionTranslateLabel = (option: string): string => {\r\n        if(option===TypeOfferEnum.Sell){\r\n            return t('common.for_sell');\r\n        }\r\n        else if(option===TypeOfferEnum.Rent){\r\n            return t('common.for_rent');\r\n        }\r\n        else if(option===TypeOfferEnum.Find){\r\n            return t('common.for_find');\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const handleCloseFilterOfferModal = () => {\r\n        setOpenFilterOfferModal(false);\r\n    }\r\n\r\n    const handleSearchFilterOfferModal = () => {\r\n        setOpenFilterOfferModal(false);\r\n        searchCalback(valuesSearch);\r\n    }\r\n\r\n    const onChange = (values: any) => {\r\n        setValuesSearch(values);\r\n    }\r\n\r\n    const renderDialogFilterOffer = () => {\r\n        return (\r\n            <Dialog\r\n                fullScreen\r\n                open={openFilterOfferModal}\r\n                TransitionComponent={TransitionModal}\r\n                keepMounted\r\n                onClose={handleCloseFilterOfferModal}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <AppBar sx={{ position: 'relative' }}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={handleCloseFilterOfferModal}\r\n                            aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                            Sound\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={handleSearchFilterOfferModal}>\r\n                            {t<string>('common.label_search')}\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <DialogTitle>\r\n                    Filter offers\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To subscribe to this website, please enter your email address here. We\r\n                        will send updates occasionally.\r\n                    </DialogContentText>\r\n                    {/*<FilterOffer listAddress={listAddress} handelChange={onChange}/>*/}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseFilterOfferModal}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"success\" >\r\n                        Filter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <AppBar position=\"static\" color=\"default\" sx={{backgroundColor: '#fff'}}>\r\n                        <Toolbar sx={{\r\n                            display: {xs: 'block', sm: 'flex'},\r\n                            paddingRight: {md: 0},\r\n                            paddingLeft: {md: 0},\r\n                        }}>\r\n                            {\r\n                                !hideFilter ? <IconButton\r\n                                    size=\"large\"\r\n                                    edge=\"start\"\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    sx={{ mx: 1, display: {xs: 'none', md: 'inline-flex'} }}\r\n                                    onClick={() => changeTypeDisplayOffers()}\r\n                                >\r\n                                    {typeDisplayOffers===TypeDisplaySearchOffers.Grid ? <FormatListBulletedIcon /> : <GridOnIcon />}\r\n\r\n                                </IconButton> : null\r\n                            }\r\n                            <FormControl variant=\"standard\" sx={{flexGrow: 1, flexShrink: 1, flexBasis: 0,  mx: 1, width: {xs: '100%', md: 'auto'}}}>\r\n                                <TextField id=\"title\"\r\n                                           name=\"title\"\r\n                                           type=\"search\"\r\n                                           label={t<string>('common.label_search')}\r\n                                           variant=\"standard\"\r\n                                           value={formik.values.title}\r\n                                           onChange={formik.handleChange}/>\r\n                            </FormControl>\r\n\r\n                            <FormControl variant=\"standard\" sx={{flexGrow: 1, flexShrink: 1, flexBasis: 0,  mx: 1, width: {xs: '100%', md: 'auto'}}}>\r\n                                <Autocomplete\r\n                                    id=\"typeOffer\"\r\n                                    options={listTypeOffers}\r\n                                    value={formik.values.typeOffer}\r\n                                    onChange={(e, value) => formik.setFieldValue('typeOffer', value || null)}\r\n                                    autoHighlight\r\n                                    getOptionLabel={(option) => getOptionTranslateLabel(option)}\r\n                                    renderOption={(propsRender, option) => (\r\n                                        <Box component=\"li\" {...propsRender}>\r\n                                            {getOptionTranslateLabel(option)}\r\n                                        </Box>\r\n                                    )}\r\n                                    renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={t<string>('common.type_offer')}\r\n                                            variant=\"standard\"\r\n                                            inputProps={{\r\n                                                ...params.inputProps,\r\n                                                form: {\r\n                                                    autoComplete:'off',\r\n                                                },\r\n                                                autoComplete:'off', // disable autocomplete and autofill\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </FormControl>\r\n\r\n                            <FormControl variant=\"standard\" sx={{flexGrow: 1, flexShrink: 1, flexBasis: 0, mx: 1, width: {xs: '100%', md: 'auto'}}}>\r\n                                <Autocomplete\r\n                                    id=\"category-select\"\r\n                                    options={entitiesCategories}\r\n                                    value={formik.values.category}\r\n                                    onChange={(e, value) => formik.setFieldValue('category', value || '')}\r\n                                    autoHighlight\r\n                                    getOptionLabel={option => getOptionLabelCat(option)}\r\n                                    renderOption={(propsRender, option) => (\r\n                                        <Box component=\"li\" {...propsRender}>\r\n                                            {getOptionLabelCat(option)}\r\n                                        </Box>\r\n                                    )}\r\n                                    renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label={t<string>('common.label_category')}\r\n                                            variant=\"standard\"\r\n                                            inputProps={{\r\n                                                ...params.inputProps,\r\n                                                form: {\r\n                                                    autoComplete:'off',\r\n                                                },\r\n                                                name:'category-name',\r\n                                                autoComplete:'off', // disable autocomplete and autofill\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </FormControl>\r\n\r\n                            <Box sx={{my: {xs: 2, md: 'auto'}}}>\r\n\r\n                                {\r\n                                    !hideFilter ? <IconButton\r\n                                            size=\"large\"\r\n                                            edge=\"start\"\r\n                                            color=\"inherit\"\r\n                                            aria-label=\"open drawer\"\r\n                                            sx={{ mx: 1, display: {xs: 'inline-flex', md: 'none'} }}\r\n                                            onClick={() => changeTypeDisplayOffers()}\r\n                                        >\r\n                                            {typeDisplayOffers===TypeDisplaySearchOffers.Grid ? <FormatListBulletedIcon /> : <GridOnIcon />}\r\n\r\n                                        </IconButton> : null\r\n                                }\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    aria-label=\"open drawer\"\r\n                                    sx={{\r\n                                        width: 100,\r\n                                        height: {xs: 'auto', md: 100},\r\n                                        borderRadius: 'unset',\r\n                                        backgroundColor: '#3f3f40',\r\n                                        marginRight: '0.8rem',\r\n                                        color: '#fff',\r\n                                        display: {xs: 'inline-flex', md: 'none'},\r\n                                    }}\r\n                                    color=\"neutral\"\r\n                                    onClick={() => setOpenFilterOfferModal(true)}\r\n                                >\r\n                                    <FilterIcon/>\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    sx={{\r\n                                        height: {xs: 'auto', md: 100},\r\n                                        borderRadius: 'unset',\r\n                                        backgroundColor: '#3f3f40',\r\n                                        color: '#fff',\r\n                                    }}\r\n                                    startIcon={<SearchIcon/>}\r\n                                    color=\"neutral\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    {t<string>('common.label_search')}\r\n                                </Button>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </Box>\r\n            </form>\r\n            {renderDialogFilterOffer()}\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport ReactTimeAgo from 'react-time-ago';\r\n\r\nexport const ConvertReactTimeAgo = (date: any, locale?: any) => {\r\n  if (date && date.convertDate) {\r\n    return <ReactTimeAgo date={new Date(date.convertDate)} locale='fr-FR' />;\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {TransitionProps} from \"@mui/material/transitions\";\r\nimport Slide from \"@mui/material/Slide/Slide\";\r\n\r\n\r\nexport const TransitionModal = React.forwardRef(function Transition(\r\n    props: TransitionProps & {\r\n        children: React.ReactElement<any, any>;\r\n    },\r\n    ref: React.Ref<unknown>\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["TopHomeSlides","React","StorageService","AllAppConfig","listTopSlidesImage","defaultLanguage","setDefaultLanguage","navigate","useNavigate","entitiesCategories","useSelector","allCategorySelector","entities","entitiesAddress","allAddressSelector","entitiesTopHomeSlidesImagesSelector","entitiesTopHomeSlidesImages","i18n","lang","length","slice","getDescription","item","descriptionEn","descriptionFr","descriptionAr","className","speed","parallax","pagination","clickable","navigation","modules","Parallax","Pagination","Navigation","loop","autoplay","delay","disableOnInteraction","slot","style","i","image","getBackgroundImage","map","index","dangerouslySetInnerHTML","__html","Box","sx","position","xs","md","bottom","right","left","marginRight","marginLeft","backgroundColor","maxWidth","height","zIndex","SearchAppBar","searchCalback","values","pathname","ALL_APP_ROUTES","search","URLSearchParams","getFullUrlWithParams","toString","listAddress","hideFilter","ItemForSell","offer","rediretTo","CardActionArea","component","onClick","id","Card","display","sm","offerImages","CardMedia","width","src","getImageForOffer","path","alt","actual","imageProps","placeholder","ref","loading","getBaseImageUrl","error","CardContent","flex","Typography","variant","title","color","convertDate","dateCreated","description","ForSellHomeClient","t","useTranslation","entitiesSellerOfferSelector","entitiesSellerOffer","offerId","setTimeout","Container","my","to","TypeOfferEnum","Grid","container","rowSpacing","columnSpacing","ItemForRentHome","ForRentHomeClient","entitiesRentOfferSelector","entitiesRentOffer","SecondHorizentalListHomeClient","listServices","img","primaryTitle","secondTitle","p","service","flexDirection","flexGrow","minHeight","List","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","primary","secondary","ItemForFindHome","ForFindHomeClient","entitiesFindOfferSelector","entitiesFindOffer","ThirdHorizentalListHomeClient","textAlign","marginTop","bgcolor","fontSize","slidesPerView","spaceBetween","Item","styled","Paper","theme","typography","body2","padding","spacing","palette","text","FirstHorizentalListHomeClient","listCategories","Translation","Stack","px","justifyContent","direction","category","RecentlyAddedHome","CardHeader","avatar","role","getUserAvatar","user","imageUrl","sourceRegister","getFullnameUser","charAt","action","IconButton","MoreVert","subheader","CardActions","disableSpacing","Favorite","Share","ExpandMore","props","expand","other","transform","transition","transitions","create","duration","shortest","RecentlyAddedHomeClient","entitiesRecentlyOffersSelector","entitiesRecentlyOffers","mt","PostHomeFeature","entityPostHomeFeature","entityHomeFeaturesSelector","entityHomeFeatures","isEmpty","onError","e","target","onerror","SwiperCore","EffectCoverflow","Autoplay","BottomHomeSlides","slideListBottom","setSlideListBottom","loadingEntitiesImagesOffersSelector","loadingEntitiesImagesOffers","entitiesImagesOffersSelector","entitiesImagesOffers","effect","grabCursor","centeredSlides","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","Home","PeriodeRent","TypesFindOffer","TypeDisplaySearchOffers","validationSchemSearchAppBar","Yup","nullable","notRequired","default","typeOffer","listTypeOffers","initialValues","typeDisplayCallback","typeDisplayOffers","setTypeDisplayOffers","openFilterOfferModal","setOpenFilterOfferModal","valuesSearch","useLocation","formik","useFormik","validationSchema","onSubmit","objParams","queryString","setFieldValue","Object","keys","forEach","key","find","add","changeTypeDisplayOffers","getOptionLabelCat","option","titleEn","titleFr","titleAr","getOptionTranslateLabel","handleCloseFilterOfferModal","handleSearchFilterOfferModal","handleSubmit","AppBar","Toolbar","paddingRight","paddingLeft","size","edge","mx","FormatListBulleted","GridOn","FormControl","flexShrink","flexBasis","TextField","name","type","label","value","onChange","handleChange","Autocomplete","options","autoHighlight","getOptionLabel","renderOption","propsRender","renderInput","params","inputProps","form","autoComplete","Button","borderRadius","startIcon","Search","Dialog","fullScreen","open","TransitionComponent","TransitionModal","keepMounted","onClose","Close","ml","autoFocus","DialogTitle","DialogContent","DialogContentText","DialogActions","ConvertReactTimeAgo","date","locale","Date","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","createSvgIcon","_jsx"],"sourceRoot":""}