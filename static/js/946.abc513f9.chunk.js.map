{"version":3,"file":"static/js/946.abc513f9.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/src/observe.ts","../node_modules/unionize/src/index.ts"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","export type Unionized<Record, TaggedRecord, TagProp extends string> = UnionTypes<\n  Record,\n  TaggedRecord\n> &\n  Creators<Record, TaggedRecord, TagProp> &\n  UnionExtensions<Record, TaggedRecord>;\n\nexport interface UnionTypes<Record, TaggedRecord> {\n  _Tags: keyof TaggedRecord;\n  _Record: Record;\n  _Union: TaggedRecord[keyof TaggedRecord];\n}\nexport interface UnionExtensions<Record, TaggedRecord> {\n  is: Predicates<TaggedRecord>;\n  as: Casts<Record, TaggedRecord[keyof TaggedRecord]>;\n  match: Match<Record, TaggedRecord[keyof TaggedRecord]>;\n  transform: Transform<Record, TaggedRecord[keyof TaggedRecord]>;\n}\n\nexport type TagsOf<U extends UnionTypes<any, any>> = U['_Tags'];\nexport type RecordOf<U extends UnionTypes<any, any>> = U['_Record'];\nexport type UnionOf<U extends UnionTypes<any, any>> = U['_Union'];\n\nexport type Creators<Record, TaggedRecord, TagProp extends string> = {\n  [T in keyof Record]: {} extends UnTagged<Record[T], TagProp>\n    ? ((value?: {}) => TaggedRecord[keyof TaggedRecord])\n    : ((value: UnTagged<Record[T], TagProp>) => TaggedRecord[keyof TaggedRecord])\n};\n\nexport type Predicates<TaggedRecord> = {\n  [T in keyof TaggedRecord]: (\n    variant: TaggedRecord[keyof TaggedRecord],\n  ) => variant is TaggedRecord[T]\n};\n\nexport type Casts<Record, Union> = { [T in keyof Record]: (variant: Union) => Record[T] };\n\nexport type Cases<Record, A> = { [T in keyof Record]: (value: Record[T]) => A };\n\nexport type MatchCases<Record, Union, A> =\n  | Cases<Record, A> & NoDefaultProp\n  | Partial<Cases<Record, A>> & { default: (variant: Union) => A };\n\nexport interface Match<Record, Union> {\n  <A>(cases: MatchCases<Record, Union, A>): (variant: Union) => A;\n  <A>(variant: Union, cases: MatchCases<Record, Union, A>): A;\n}\n\nexport type TransformCases<Record, Union> = Partial<\n  { [T in keyof Record]: (value: Record[T]) => Union }\n>;\n\nexport interface Transform<Record, Union> {\n  (cases: TransformCases<Record, Union>): (variant: Union) => Union;\n  (variant: Union, cases: TransformCases<Record, Union>): Union;\n}\n\nexport type MultiValueVariants<Record extends MultiValueRec, TagProp extends string> = {\n  [T in keyof Record]: Record[T] extends { [_ in TagProp]: T } // does record already has tag with correct value?\n    ? Record[T] // yes: return as is\n    : { [_ in TagProp]: T } & Record[T] // no: decorate with tag\n};\n\nexport type UnTagged<Record, TagProp extends string = 'tag'> = Record extends any\n  ? Pick<Record, Exclude<keyof Record, TagProp>>\n  : never;\n\nexport type SingleValueVariants<\n  Record extends SingleValueRec,\n  TagProp extends string,\n  ValProp extends string\n> = { [T in keyof Record]: { [_ in TagProp]: T } & { [_ in ValProp]: Record[T] } };\n\n// Forbid usage of default property; reserved for pattern matching.\nexport interface NoDefaultProp {\n  default?: never;\n}\n\nexport type SingleValueRec = NoDefaultRec<{} | null>;\nexport type MultiValueRec = NoDefaultRec<{ [tag: string]: any }>;\nexport type NoDefaultRec<Val> = {\n  [k: string]: Val;\n} & NoDefaultProp;\n\n/**\n * Create a tagged union from a record mapping tags to value types, along with associated\n * variant constructors, type predicates and `match` function.\n *\n * @param record A record mapping tags to value types. The actual values of the record don't\n * matter; they're just used in the types of the resulting tagged union. See `ofType`.\n * @param config An optional config object. By default tag='tag' and value is merged into object itself\n * @param config.tag An optional custom name for the tag property of the union.\n * @param config.value An optional custom name for the value property of the union. If not specified,\n * the value must be a dictionary type.\n */\n\nexport function unionize<\n  Record extends SingleValueRec,\n  ValProp extends string,\n  TagProp extends string = 'tag'\n>(\n  record: Record,\n  config: { value: ValProp; tag?: TagProp },\n): Unionized<Record, SingleValueVariants<Record, TagProp, ValProp>, TagProp>;\nexport function unionize<Record extends MultiValueRec, TagProp extends string = 'tag'>(\n  record: Record,\n  config?: { tag: TagProp },\n): Unionized<Record, MultiValueVariants<Record, TagProp>, TagProp>;\nexport function unionize<Record>(record: Record, config?: { value?: string; tag?: string }) {\n  const { value: valProp = undefined, tag: tagProp = 'tag' } = config || {};\n\n  const creators = {} as Creators<Record, any, any>;\n  for (const tag in record) {\n    creators[tag] = ((value: any = {}) =>\n      valProp ? { [tagProp]: tag, [valProp]: value } : { ...value, [tagProp]: tag }) as any;\n  }\n\n  const is = {} as Predicates<any>;\n  for (const tag in record) {\n    is[tag] = ((variant: any) => variant[tagProp] === tag) as any;\n  }\n\n  function evalMatch(variant: any, cases: any, defaultCase = cases.default): any {\n    const handler = cases[variant[tagProp]];\n    return handler ? handler(valProp ? variant[valProp] : variant) : defaultCase(variant);\n  }\n\n  const match = (first: any, second?: any) =>\n    second ? evalMatch(first, second) : (variant: any) => evalMatch(variant, first);\n\n  const identity = <A>(x: A) => x;\n  const transform = (first: any, second?: any) =>\n    second\n      ? evalMatch(first, second, identity)\n      : (variant: any) => evalMatch(variant, first, identity);\n\n  const as = {} as Casts<Record, any>;\n  for (const expectedTag in record) {\n    as[expectedTag] = match({\n      [expectedTag]: (x: any) => x,\n      default: (val: any) => {\n        throw new Error(`Attempted to cast ${val[tagProp]} as ${expectedTag}`);\n      },\n    });\n  }\n\n  return Object.assign(\n    {\n      is,\n      as,\n      match,\n      transform,\n      _Record: record,\n    },\n    creators,\n  );\n}\n\n/**\n * Creates a pseudo-witness of a given type. That is, it pretends to return a value of\n * type `T` for any `T`, but it's really just returning `undefined`. This white lie\n * allows convenient expression of the value types in the record you pass to `unionize`.\n */\nexport const ofType = <T>() => (undefined as any) as T;\n\nexport default unionize;\n"],"names":["getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","RootIds","WeakMap","rootId","unsupportedValue","defaultFallbackInView","inView","getRootId","has","get","set","toString","filter","key","map","createObserver","id","entries","forEach","entry","isIntersecting","some","threshold","intersectionRatio","window","bounds","observer","getBoundingClientRect","time","boundingClientRect","callback","Array","element","fallbackInView","isArray","triggerOnce","skip","node","setState","initialInView","splice","observeNode","handleChange","isPlainChildren","InView","children","onChange","state","_proto","componentDidUpdate","prevProps","rootBounds","callbacks","observe","push","unobserve","indexOf","length","size","disconnect","isVisible","_inheritsLoose","_this","_unobserveCb","handleNode","intersectionRect","rootMargin","delay","render","IntersectionObserver","componentWillUnmount","createElement","Component","displayName","defaultProps","useInView","options","Object","_temp","useRef","useState","setRef","useCallback","current","useEffect","result","keys","sort","elements","thresholds","instance","observerMap","unionize","record","config","_b","valProp","_c","tagProp","creators","tag","value","_a","__assign","is","variant","default","handler","match","first","second","defaultCase","identity","x","transform","expectedTag","val","Error","assign","_Record","exports","cases"],"sourceRoot":""}